{
"create|c"
:
{
"#desc"
:
{
"en"
:
"Create repo"
,
"cn"
:
"创建项目"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo create --visibility public <repo_name>"
,
"en"
:
"create a <repo_name> public repo for the current user"
,
"cn"
:
"给当前用户创建 <repo_name> 公开项目"
}
,
{
"cmd"
:
"x gcode repo create --group <group_path> <repo_name>"
,
"en"
:
"create a <repo_name> repo for the <group_path> groups"
,
"cn"
:
"给 <group_path> 组织创建 <repo_name> 项目"
}
,
{
"cmd"
:
"x gcode repo create <group_path>/<repo_name>"
,
"en"
:
"create a <repo_name> repo for the <group_path> groups"
,
"cn"
:
"给 <group_path> 组织创建 <repo_name> 项目"
}
]
,
"-p|--path"
:
{
"#synopsis"
:
"<path>"
,
"#desc"
:
{
"en"
:
"repo path"
,
"cn"
:
"项目路径"
}
}
,
"--group|-g"
:
{
"#synopsis"
:
"<group_path|.id=group_id>"
,
"#desc"
:
{
"en"
:
"Namespace for the new repo or .id=Namespace ID"
,
"cn"
:
"项目的所属空间地址或.id=所属空间 ID"
}
}
,
"--visibility"
:
{
"#synopsis"
:
"<private,internal,public>"
,
"#desc"
:
{
"en"
:
"See repo visibility level"
,
"cn"
:
"项目可见权限级别设置"
}
}
,
"--topics"
:
{
"#tag"
:
[
"inner"
]
}
,
"--avatar"
:
{
"#tag"
:
[
"inner"
]
}
,
"--import_url"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_method"
:
{
"#tag"
:
[
"inner"
]
}
,
"--build_timeout"
:
{
"#tag"
:
[
"inner"
]
}
,
"--squash_option"
:
{
"#tag"
:
[
"inner"
]
}
,
"--template_name"
:
{
"#tag"
:
[
"inner"
]
}
,
"--wiki_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--build_git_strategy"
:
{
"#tag"
:
[
"inner"
]
}
,
"--repository_storage"
:
{
"#tag"
:
[
"inner"
]
}
,
"--pages_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--issues_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--builds_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--template_project_id"
:
{
"#tag"
:
[
"inner"
]
}
,
"--forking_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--snippets_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--analytics_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--approvals_before_merge"
:
{
"#tag"
:
[
"inner"
]
}
,
"--operations_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--repository_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--requirements_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_devops_deploy_strategy"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_requests_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_registry_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--group_with_project_templates_id"
:
{
"#tag"
:
[
"inner"
]
}
,
"--security_and_compliance_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_expiration_policy_attributes"
:
{
"#tag"
:
[
"inner"
]
}
,
"--external_authorization_classification_label"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror"
:
{
"#tag"
:
[
"inner"
]
}
,
"--lfs_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--jobs_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--wiki_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--public_builds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--issues_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--emails_disabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--snippets_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--packages_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_devops_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--use_custom_template"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_trains_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror_trigger_builds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--shared_runners_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--request_access_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_requests_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_pipelines_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_registry_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--autoclose_referenced_issues"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_cancel_pending_pipelines"
:
{
"#tag"
:
[
"inner"
]
}
,
"--allow_merge_on_skipped_pipeline"
:
{
"#tag"
:
[
"inner"
]
}
,
"--remove_source_branch_after_merge"
:
{
"#tag"
:
[
"inner"
]
}
,
"--resolve_outdated_diff_discussions"
:
{
"#tag"
:
[
"inner"
]
}
,
"--printing_merge_request_link_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--only_allow_merge_if_pipeline_succeeds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--only_allow_merge_if_all_discussions_are_resolved"
:
{
"#tag"
:
[
"inner"
]
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"repo name"
,
"cn"
:
"项目名称"
}
}
}
,
"edit|ed"
:
{
"--avatar"
:
{
"#tag"
:
[
"inner"
]
}
,
"--import_url"
:
{
"#tag"
:
[
"inner"
]
}
,
"--build_timeout"
:
{
"#tag"
:
[
"inner"
]
}
,
"--issues_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror_user_id"
:
{
"#tag"
:
[
"inner"
]
}
,
"--build_git_strategy"
:
{
"#tag"
:
[
"inner"
]
}
,
"--repository_storage"
:
{
"#tag"
:
[
"inner"
]
}
,
"--ci_default_git_depth"
:
{
"#tag"
:
[
"inner"
]
}
,
"--approvals_before_merge"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_requests_template"
:
{
"#tag"
:
[
"inner"
]
}
,
"--wiki_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--pages_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--issues_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--builds_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--forking_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--snippets_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--analytics_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--operations_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--repository_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--requirements_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_requests_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_registry_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--security_and_compliance_access_level"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_devops_deploy_strategy"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_cancel_pending_pipelines"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_expiration_policy_attributes"
:
{
"#tag"
:
[
"inner"
]
}
,
"--external_authorization_classification_label"
:
{
"#tag"
:
[
"inner"
]
}
,
"--squash_commit_template"
:
{
"#tag"
:
[
"inner"
]
}
,
"--squash_option"
:
{
"#tag"
:
[
"inner"
]
}
,
"--suggestion_commit_message"
:
{
"#tag"
:
[
"inner"
]
}
,
"--topics"
:
{
"#tag"
:
[
"inner"
]
}
,
"--wiki_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror_trigger_builds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--allow_merge_on_skipped_pipeline"
:
{
"#tag"
:
[
"inner"
]
}
,
"--autoclose_referenced_issues"
:
{
"#tag"
:
[
"inner"
]
}
,
"--auto_devops_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--ci_forward_deployment_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--ci_separated_caches"
:
{
"#tag"
:
[
"inner"
]
}
,
"--container_registry_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--emails_disabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_pipelines_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_requests_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--merge_trains_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror_overwrites_diverged_branches"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mirror"
:
{
"#tag"
:
[
"inner"
]
}
,
"--mr_default_target_self"
:
{
"#tag"
:
[
"inner"
]
}
,
"--only_allow_merge_if_pipeline_succeeds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--only_mirror_protected_branches"
:
{
"#tag"
:
[
"inner"
]
}
,
"--packages_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--printing_merge_request_link_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--public_builds"
:
{
"#tag"
:
[
"inner"
]
}
,
"--remove_source_branch_after_merge"
:
{
"#tag"
:
[
"inner"
]
}
,
"--request_access_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--resolve_outdated_diff_discussions"
:
{
"#tag"
:
[
"inner"
]
}
,
"--restrict_user_defined_variables"
:
{
"#tag"
:
[
"inner"
]
}
,
"--service_desk_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--shared_runners_enabled"
:
{
"#tag"
:
[
"inner"
]
}
,
"--snippets_enabled"
:
{
"#tag"
:
[
"inner"
]
}
}
,
"cl|clone"
:
{
"#desc"
:
{
"en"
:
"clone repo from Gitcode"
,
"cn"
:
"克隆 Gitcode 仓库"
}
,
"$ref"
:
"x-advise://git/data/clone.jso"
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> (default ownerPath: current user)"
,
"cn"
:
"<所属空间地址>/<项目地址> (默认所属空间地址: 当前用户空间地址)"
}
}
}
,
"member|collaborator"
:
{
"#desc"
:
{
"en"
:
"repo member management"
,
"cn"
:
"项目成员管理"
}
,
"add"
:
{
"#desc"
:
{
"en"
:
"Add repo member"
,
"cn"
:
"添加项目成员"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo member add --repo <owner/repo> --access_level developer <user_path>"
,
"en"
:
"Add <user_path> user as developer(30 access level) to <owner/repo> repo"
,
"cn"
:
"为 <owner/repo> 项目添加 <user_path> 用户为项目成员, 并赋予 developer(30) 权限等级"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--access_level"
:
{
"#synopsis"
:
"<Number,guest,reporter,developer,maintainer,owner>"
,
"#desc"
:
{
"en"
:
"A valid access level"
,
"cn"
:
"项目权限等级设置"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<user_path> or .id=<user_id>"
,
"cn"
:
"<user_path> 或 .id=<用户ID>"
}
,
"#exec"
:
"xrc gcode && ___x_cmd_gcode___advise_ls_avatar_usename"
}
,
"#n"
:
{
"#exec"
:
"xrc gcode && ___x_cmd_gcode___advise_ls_avatar_usename"
}
}
}
,
"release"
:
{
"#desc"
:
{
"en"
:
"repo release management"
,
"cn"
:
"项目发行版本管理"
}
,
"ls|l"
:
{
"#desc"
:
{
"en"
:
"List repo release"
,
"cn"
:
"罗列项目发行版本"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create|c"
:
{
"#desc"
:
{
"en"
:
"Create repo release"
,
"cn"
:
"创建项目发行版本"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo release create --repo <owner/repo> v1.0.0"
,
"en"
:
"The tag where the <owner/repo> repo release is created from v1.0.0"
,
"cn"
:
"基于 v1.0.0 标签为 <owner/repo> 项目创建发行版本"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--ref"
:
{
"#desc"
:
{
"en"
:
"It can be a commit SHA, another tag name, or a branch name"
,
"cn"
:
"commit SHA, tag 标签名, 分支名"
}
}
,
"--name"
:
{
"#synopsis"
:
"<relese_name>"
,
"#desc"
:
{
"en"
:
"The release name (default tag_name)"
,
"cn"
:
"发行版本名称 (默认为标签名)"
}
}
,
"--description"
:
{
"#synopsis"
:
"<relese_desc(support markdown)>"
,
"#desc"
:
{
"en"
:
"The release description"
,
"cn"
:
"发行版本描述"
}
}
,
"--milestones"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"The title of each milestone the release is associated with"
,
"cn"
:
"与版本关联的每个里程碑的标题"
}
}
,
"--assets_links"
:
{
"#synopsis"
:
"<JSON str (stdin -)>"
,
"#desc"
:
{
"en"
:
"An assets links json object of preset assets links."
,
"cn"
:
"预置附件资源链接集合 JSON 对象"
}
}
,
"--released_at"
:
{
"#synopsis"
:
"<ISO 8601>"
,
"#desc"
:
{
"en"
:
"The date when the release is/was ready (default the current time)"
,
"cn"
:
"发行时间 (默认为当前时间)"
}
}
,
"#option:required"
:
[
"--repo|-r"
]
,
"#option:optional"
:
[
"--name"
,
"--description"
,
"--milestones"
,
"--assets_links"
,
"--ref"
,
"--released_at"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The tag where the release is created from"
,
"cn"
:
"创建版本的标签"
}
}
}
,
"attachment|asset"
:
{
"upload"
:
{
"#tldr"
:
[
{
"cmd"
:
"x gcode repo release attachment upload --repo|-r <owner/repo> --tag_name <tag> <file_path>"
,
"en"
:
"Upload <file_path> file as <owner/repo> repo <tag> release tag attachment"
,
"cn"
:
"上传 <file_path> 文件作为 <owner/repo> 项目中 <tag> 发行版本标签的附件资源"
}
]
,
"#desc"
:
{
"en"
:
"Upload file as asset and create release asset link"
,
"cn"
:
"上传文件作为发行版本附件"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--tag_name"
:
{
"#synopsis"
:
"<tag>"
,
"#desc"
:
{
"en"
:
"The Git tag the release is associated with"
,
"cn"
:
"版本关联的 Git 标签"
}
}
,
"--name"
:
{
"#synopsis"
:
"<link_name>"
,
"#desc"
:
{
"en"
:
"The name of the attachment link (default: filename)"
,
"cn"
:
"附件链接的名称 (默认: 文件名)"
}
}
,
"--filepath"
:
{
"#synopsis"
:
"<path>"
,
"#desc"
:
{
"en"
:
"Optional path for a direct asset link. (default: /filename)"
,
"cn"
:
"资源链接路径(默认: /文件名)"
}
}
,
"--link_type"
:
{
"#synopsis"
:
"<type>"
,
"#desc"
:
{
"en"
:
"The type of the link"
,
"cn"
:
"链接类型"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target upload attachment file path (stdin -)"
,
"cn"
:
"目标上传附件文件路径 (stdin -)"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
}
}
,
"pr"
:
{
"#desc"
:
{
"en"
:
"repo merge requests management"
,
"cn"
:
"项目合并请求管理"
}
,
"ls|l"
:
{
"#desc"
:
{
"en"
:
"List repo merge requests"
,
"cn"
:
"罗列项目合并请求"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--state"
:
{
"#desc"
:
{
"en"
:
"Return all merge requests or just those that are opened, closed, locked, or merged"
,
"cn"
:
"返回所有合并请求或仅返回打开、关闭、锁定或合并的请求"
}
}
,
"--wip"
:
{
"#desc"
:
{
"en"
:
"Filter merge requests against their wip status"
,
"cn"
:
"根据 wip 状态筛选合并请求"
}
}
,
"--view"
:
{
"#desc"
:
{
"en"
:
"If value is simple, returns the iid, URL, title, description, and basic state of merge request"
,
"cn"
:
"如果值是 simple，则返回合并请求的 iid、URL、标题、描述和基本状态"
}
}
,
"--iids"
:
{
"#desc"
:
{
"en"
:
"Return the request for the specified iid"
,
"cn"
:
"返回指定 iid 的请求"
}
}
,
"--sort"
:
{
"#synopsis"
:
"<asc/desc>"
,
"#desc"
:
{
"en"
:
"Sort by asc or desc"
,
"cn"
:
"按升序或降序的顺序排序"
}
}
,
"--scope"
:
{
"#synopsis"
:
"<created_by_me/assigned_to_me/all>"
,
"#desc"
:
{
"en"
:
"Return merge requests for the given scope"
,
"cn"
:
"返回给定范围的合并请求"
}
}
,
"--labels"
:
{
"#desc"
:
{
"en"
:
"Return merge requests matching a comma-separated list of labels"
,
"cn"
:
"返回与逗号分隔的标签列表匹配的合并请求"
}
}
,
"--search"
:
{
"#desc"
:
{
"en"
:
"Search merge requests against their title and description"
,
"cn"
:
"根据标题和描述搜索合并请求"
}
}
,
"--order_by"
:
{
"#desc"
:
{
"en"
:
"Return requests ordered by created_at or updated_at fields"
,
"cn"
:
"按 created_at 或 updated_at 字段排序"
}
}
,
"--milestone"
:
{
"#desc"
:
{
"en"
:
"Return merge requests for a specific milestone"
,
"cn"
:
"返回指定里程碑的合并请求"
}
}
,
"--author_id"
:
{
"#desc"
:
{
"en"
:
"Return merge requests created by the given user id"
,
"cn"
:
"返回由给定用户 id 创建的合并请求"
}
}
,
"--assignee_id"
:
{
"#desc"
:
{
"en"
:
"Returns merge requests assigned to the specific user id"
,
"cn"
:
"返回分配给指定用户 id 的合并请求"
}
}
,
"--approver_ids"
:
{
"#desc"
:
{
"en"
:
"Returns merge requests which have specified all the users with the given id as individual approvers"
,
"cn"
:
"返回已将具有给定 id 的所有用户指定为单个审批人的合并请求"
}
}
,
"--source_branch"
:
{
"#desc"
:
{
"en"
:
"Return merge requests with the given source branch"
,
"cn"
:
"返回给定源分支的合并请求"
}
}
,
"--target_branch"
:
{
"#desc"
:
{
"en"
:
"Return merge requests with the given target branch"
,
"cn"
:
"返回给定目标分支的合并请求"
}
}
,
"--created_before"
:
{
"#synopsis"
:
"<ISO 8601>"
,
"#desc"
:
{
"en"
:
"Return merge requests created on or before the given time"
,
"cn"
:
"返回在给定时间或之前创建的合并请求"
}
}
,
"--created_after"
:
{
"#synopsis"
:
"<ISO 8601>"
,
"#desc"
:
{
"en"
:
"Return merge requests created on or after the given time"
,
"cn"
:
"返回在给定时间或之后创建的合并请求"
}
}
,
"--updated_after"
:
{
"#synopsis"
:
"<ISO 8601>"
,
"#desc"
:
{
"en"
:
"Return merge requests updated on or after the given time"
,
"cn"
:
"返回在给定时间或之后更新的合并请求"
}
}
,
"--updated_before"
:
{
"#synopsis"
:
"<ISO 8601>"
,
"#desc"
:
{
"en"
:
"Return merge requests updated on or before the given time"
,
"cn"
:
"返回在给定时间或之前更新的合并请求"
}
}
,
"--approved_by_ids"
:
{
"#desc"
:
{
"en"
:
"Returns merge requests which have been approved by all the users with the given id (Max: 5)"
,
"cn"
:
"返回已由具有给定 id 的所有用户批准的合并请求（最多5个）"
}
}
,
"--my_reaction_emoji"
:
{
"#desc"
:
{
"en"
:
"Return merge requests reacted by the authenticated user by the given emoji"
,
"cn"
:
"返回经过身份验证的用户通过给定表情符号响应的合并请求"
}
}
,
"--author_username"
:
{
"#desc"
:
{
"en"
:
"Return merge requests created by the given username"
,
"cn"
:
"返回由给定用户名创建的合并请求"
}
}
,
"--with_labels_details"
:
{
"#synopsis"
:
"<name/color/description/description_html/text_color>"
,
"#desc"
:
{
"en"
:
"If true, the response returns more details for each label in labels field"
,
"cn"
:
"如果为 true，则响应将返回 labels 字段中每个标签的更多详细信息"
}
}
,
"--with_merge_status_recheck"
:
{
"#desc"
:
{
"en"
:
"If true, this projection requests (but does not guarantee) that the merge_status field be recalculated asynchronously"
,
"cn"
:
"如果为 true，则此投影请求（但不保证）异步重新计算 merge_status 字段"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create|c"
:
{
"#desc"
:
{
"en"
:
"Create repo merge requests"
,
"cn"
:
"创建项目合并请求"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo pr create --repo <owner/repo> --source_branch <source_branch> --target_branch <target_branch> --title <title>"
,
"en"
:
"In the <owner/repo> repo,Create merge request titled <title> from <source_branch> branch to <target_branch> branch"
,
"cn"
:
"在 <owner/repo> 项目中创建标题为 <title> 从 <source_branch> 分支到 <target_branch> 分支的合并请求"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--title"
:
{
"#desc"
:
{
"en"
:
"Title of merge requests"
,
"cn"
:
"合并请求的标题"
}
}
,
"--source_branch"
:
{
"#desc"
:
{
"en"
:
"Source branch of merge request"
,
"cn"
:
"合并请求的源分支"
}
}
,
"--target_branch"
:
{
"#desc"
:
{
"en"
:
"Target branch of merge request"
,
"cn"
:
"合并请求的目标分支"
}
}
,
"--labels"
:
{
"#desc"
:
{
"en"
:
"Labels for the merge request"
,
"cn"
:
"合并请求标签"
}
}
,
"--squash"
:
{
"#desc"
:
{
"en"
:
"Squash commits into a singcodee commit when merging"
,
"cn"
:
"合并时将提交压缩为单一代码提交"
}
}
,
"--description"
:
{
"#desc"
:
{
"en"
:
"Description of the merge request"
,
"cn"
:
"合并请求描述"
}
}
,
"--assignee_id"
:
{
"#desc"
:
{
"en"
:
"The user ID to assign the merge request"
,
"cn"
:
"要分配合并请求的用户 ID"
}
}
,
"--assignee_ids"
:
{
"#desc"
:
{
"en"
:
"The users ID to assign the merge request,Set to 0 or provide an empty value to unassign all assignees"
,
"cn"
:
"要分配合并请求的用户 ID，设置为 0 或提供空值以取消分配所有被分派者"
}
}
,
"--milestone_id"
:
{
"#desc"
:
{
"en"
:
"The milestone ID"
,
"cn"
:
"里程碑 ID"
}
}
,
"--allow_collaboration"
:
{
"#desc"
:
{
"en"
:
"Allow commits from members who can merge to the target branch"
,
"cn"
:
"允许可以合并到目标分支的成员提交"
}
}
,
"--remove_source_branch"
:
{
"#desc"
:
{
"en"
:
"Flag indicating if a merge request should remove the source branch when merging"
,
"cn"
:
"指示合并请求在合并时是否应删除源分支的标志"
}
}
,
"--target_project_id"
:
{
"#desc"
:
{
"en"
:
"The target repo"
,
"cn"
:
"目标项目的 ID"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo merge requests"
,
"cn"
:
"更新项目合并请求"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo pr edit --repo <owner/repo> --title <title> 16533"
,
"en"
:
"edit the title of the merge request id 16533 in the <owner/repo> repo"
,
"cn"
:
"修改 <owner/repo> 项目中合并请求 id 为 16533 的标题"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--title"
:
{
"#desc"
:
{
"en"
:
"Title of merge requests"
,
"cn"
:
"合并请求的标题"
}
}
,
"--labels"
:
{
"#desc"
:
{
"en"
:
"Labels for the merge request"
,
"cn"
:
"合并请求标签"
}
}
,
"--add_labels"
:
{
"#desc"
:
{
"en"
:
"label names to add to a merge request"
,
"cn"
:
"要添加到合并请求的标签名称"
}
}
,
"--squash"
:
{
"#desc"
:
{
"en"
:
"Squash commits into a singcodee commit when merging"
,
"cn"
:
"合并时将提交压缩为单一代码提交"
}
}
,
"--description"
:
{
"#desc"
:
{
"en"
:
"Description of the merge request"
,
"cn"
:
"合并请求描述"
}
}
,
"--assignee_id"
:
{
"#desc"
:
{
"en"
:
"The user ID to assign the merge request"
,
"cn"
:
"要分配合并请求的用户 ID"
}
}
,
"--assignee_ids"
:
{
"#desc"
:
{
"en"
:
"The users ID to assign the merge request,Set to 0 or provide an empty value to unassign all assignees"
,
"cn"
:
"要分配合并请求的用户 ID，设置为 0 或提供空值以取消分配所有被分派者"
}
}
,
"--milestone_id"
:
{
"#desc"
:
{
"en"
:
"The milestone ID"
,
"cn"
:
"里程碑 ID"
}
}
,
"--allow_collaboration"
:
{
"#desc"
:
{
"en"
:
"Allow commits from members who can merge to the target branch"
,
"cn"
:
"允许可以合并到目标分支的成员提交"
}
}
,
"--remove_source_branch"
:
{
"#desc"
:
{
"en"
:
"Flag indicating if a merge request should remove the source branch when merging"
,
"cn"
:
"指示合并请求在合并时是否应删除源分支的标志"
}
}
,
"--target_branch"
:
{
"#desc"
:
{
"en"
:
"Target branch of merge request"
,
"cn"
:
"合并请求的目标分支"
}
}
,
"--state_event"
:
{
"#synopsis"
:
"<close/reopen>"
,
"#desc"
:
{
"en"
:
"Close or open merge request"
,
"cn"
:
"合并请求的目标分支"
}
}
,
"--remove_labels"
:
{
"#desc"
:
{
"en"
:
"label names to remove from a merge request"
,
"cn"
:
"要从合并请求中删除的标签名称"
}
}
,
"--discussion_locked"
:
{
"#desc"
:
{
"en"
:
"Flag indicating if the merge request discussion is locked"
,
"cn"
:
"指示合并请求讨论是否已锁定的标志"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"merge request id"
,
"cn"
:
"合并请求 id"
}
}
}
,
"merge"
:
{
"#desc"
:
{
"en"
:
"Merge repo merge requests"
,
"cn"
:
"合并项目合并请求"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo pr merge --repo <owner/repo> 16533"
,
"en"
:
"Merge the merge request with id 16533 in the <owner/repo> repo"
,
"cn"
:
"合并 <owner/repo> 项目中 id 为 16533 的合并请求"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--sha"
:
{
"#desc"
:
{
"en"
:
"if present, then this SHA must match the HEAD of the source branch, otherwise the merge will fail"
,
"cn"
:
"如果存在，则该SHA必须与源分支的HEAD匹配，否则合并将失败"
}
}
,
"--merge_commit_message"
:
{
"#desc"
:
{
"en"
:
"Custom merge commit message"
,
"cn"
:
"自定义合并提交消息"
}
}
,
"--squash_commit_message"
:
{
"#desc"
:
{
"en"
:
"Custom squash commit message"
,
"cn"
:
"自定义压缩提交消息"
}
}
,
"--squash"
:
{
"#desc"
:
{
"en"
:
"If true, the commits are squashed into a singcodee commit on merge"
,
"cn"
:
"如果为true，则在合并时将提交压缩为单一代码提交"
}
}
,
"--merge_when_pipeline_succeeds"
:
{
"#desc"
:
{
"en"
:
"If true, the merge request is merged when the pipeline succeeds"
,
"cn"
:
"如果为true，则在管道成功时合并合并请求"
}
}
,
"--should_remove_source_branch"
:
{
"#desc"
:
{
"en"
:
"If true, removes the source branch"
,
"cn"
:
"如果为true，则删除源分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"merge request id"
,
"cn"
:
"合并请求 id"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo merge requests"
,
"cn"
:
"删除项目合并请求"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo pr rm --repo <owner/repo> 16533"
,
"en"
:
"Remove the merge request with id 16533 in the <owner/repo> repo"
,
"cn"
:
"删除 <owner/repo> 项目中 id 为 16533 的合并请求"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"merge request id"
,
"cn"
:
"合并请求 id"
}
}
}
,
"info|i"
:
{
"#desc"
:
{
"en"
:
"Get repo merge requests information"
,
"cn"
:
"获取项目合并请求信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo pr info --repo <owner/repo> 16533"
,
"en"
:
"Get the merge request information with id 16533 in the <owner/repo> repo"
,
"cn"
:
"获取 <owner/repo> 项目中 id 为 16533 的合并请求信息"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--render_html"
:
{
"#desc"
:
{
"en"
:
"If true, response includes rendered HTML for title and description"
,
"cn"
:
"如果为true，则响应包括标题和描述的呈现HTML"
}
}
,
"--include_diverged_commits_count"
:
{
"#desc"
:
{
"en"
:
"If true, response includes the commits behind the target branch"
,
"cn"
:
"如果为true，则响应包括目标分支后面的提交"
}
}
,
"--include_rebase_in_progress"
:
{
"#desc"
:
{
"en"
:
"If true, response includes whether a rebase operation is in progress"
,
"cn"
:
"如果为true，则响应包括是否正在进行重基操作"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"merge request id"
,
"cn"
:
"合并请求 id"
}
}
}
}
,
"webhook"
:
{
"#desc"
:
{
"en"
:
"repo webhook management"
,
"cn"
:
"项目 webhook 管理"
}
,
"ls|l"
:
{
"#desc"
:
{
"en"
:
"List repo webhook"
,
"cn"
:
"罗列项目 webhook"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"info|i"
:
{
"#desc"
:
{
"en"
:
"Get repo webhook information"
,
"cn"
:
"获取项目 webhook 信息"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo webhook info --repo <owner/repo> 16533"
,
"en"
:
"Get the webhook information with id 16533 in the <owner/repo> repo"
,
"cn"
:
"获取 <owner/repo> 项目中 id 为 16533 的 webhook 信息"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The webhook id"
}
}
}
,
"create|c"
:
{
"#desc"
:
{
"en"
:
"Create repo webhook"
,
"cn"
:
"创建项目 webhook"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo webhook create --repo <owner/repo> --url <url>"
,
"en"
:
"Add a webhook with url <url> for the <owner/repo> repo"
,
"cn"
:
"为 <owner/repo> 项目添加一个链接为 <url> 的 webhook"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--url"
:
{
"#desc"
:
{
"en"
:
"The webhook url"
,
"cn"
:
"webhook 的链接"
}
}
,
"--token"
:
{
"#desc"
:
{
"en"
:
"Secret token to validate received payloads"
,
"cn"
:
"用于验证接收到的有效载荷的密钥令牌"
}
}
,
"--push_events_branch_filter"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on push events for matching branches only"
,
"cn"
:
"仅对匹配分支的推送事件触发 webhook"
}
}
,
"--issues_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on issues events"
,
"cn"
:
"在问题事件上触发 webhook"
}
}
,
"--job_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on job events"
,
"cn"
:
"在作业事件上触发 webhook"
}
}
,
"--note_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on note events"
,
"cn"
:
"在笔记事件上触发 webhook"
}
}
,
"--push_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on push events"
,
"cn"
:
"在推送事件上触发 webhook"
}
}
,
"--pipeline_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on pipeline events"
,
"cn"
:
"在管道事件上触发 webhook"
}
}
,
"--tag_push_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on tag push events"
,
"cn"
:
"在标签推送事件上触发 webhook"
}
}
,
"--wiki_page_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在 wiki 事件上触发 webhook"
}
}
,
"--deployment_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在部署事件上触发 webhook"
}
}
,
"--merge_requests_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在合并请求事件上触发 webhook"
}
}
,
"--enable_ssl_verification"
:
{
"#desc"
:
{
"en"
:
"Do SSL verification when triggering the webhook"
,
"cn"
:
"触发 webhook 时进行 SSL 验证"
}
}
,
"--confidential_note_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on confidential note events"
,
"cn"
:
"在机密笔记事件上触发 webhook"
}
}
,
"--confidential_issues_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on confidential issues events"
,
"cn"
:
"在机密问题事件上触发 webhook"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo webhook"
,
"cn"
:
"修改项目 webhook"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo webhook edit --repo <owner/repo> --url <url> 16533"
,
"en"
:
"edit the url will webhook id 16533 in the <owner/repo> repo"
,
"cn"
:
"修改 <owner/repo> 项目中 webhook id 为 16533 的 url"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--url"
:
{
"#desc"
:
{
"en"
:
"The webhook url"
,
"cn"
:
"webhook 的链接"
}
}
,
"--token"
:
{
"#desc"
:
{
"en"
:
"Secret token to validate received payloads"
,
"cn"
:
"用于验证接收到的有效载荷的密钥令牌"
}
}
,
"--push_events_branch_filter"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on push events for matching branches only"
,
"cn"
:
"仅对匹配分支的推送事件触发 webhook"
}
}
,
"--issues_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on issues events"
,
"cn"
:
"在问题事件上触发 webhook"
}
}
,
"--job_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on job events"
,
"cn"
:
"在作业事件上触发 webhook"
}
}
,
"--note_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on note events"
,
"cn"
:
"在笔记事件上触发 webhook"
}
}
,
"--push_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on push events"
,
"cn"
:
"在推送事件上触发 webhook"
}
}
,
"--pipeline_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on pipeline events"
,
"cn"
:
"在管道事件上触发 webhook"
}
}
,
"--releases_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on release events"
,
"cn"
:
"在发布事件上触发 Webhook"
}
}
,
"--tag_push_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on tag push events"
,
"cn"
:
"在标签推送事件上触发 webhook"
}
}
,
"--wiki_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在 wiki 事件上触发 webhook"
}
}
,
"--deployment_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在部署事件上触发 webhook"
}
}
,
"--merge_requests_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on wiki events"
,
"cn"
:
"在合并请求事件上触发 webhook"
}
}
,
"--enable_ssl_verification"
:
{
"#desc"
:
{
"en"
:
"Do SSL verification when triggering the webhook"
,
"cn"
:
"触发 webhook 时进行 SSL 验证"
}
}
,
"--confidential_note_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on confidential note events"
,
"cn"
:
"在机密笔记事件上触发 webhook"
}
}
,
"--confidential_issues_events"
:
{
"#desc"
:
{
"en"
:
"Trigger webhook on confidential issues events"
,
"cn"
:
"在机密问题事件上触发 webhook"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The webhook id"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo webhook"
,
"cn"
:
"删除项目 webhook"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gcode repo webhook rm --repo <owner/repo> 16533"
,
"en"
:
"Remove the merge request with id 16533 in the <owner/repo> repo"
,
"cn"
:
"删除 <owner/repo> 项目中 id 为 16533 的 webhook"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<repoPath> or .id=<repo_id>"
,
"cn"
:
"<所属空间地址>/<项目地址> 或 .id=项目ID"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhook id"
}
}
}
}
}

