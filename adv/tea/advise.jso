{
"#name"
:
{
"tea"
:
null
,
"x tea"
:
null
,
"en"
:
"Manage Gitea work from the command line"
,
"cn"
:
"在命令行管理 Gitea 工作"
}
,
"#desc"
:
{
"en"
:
"<TODO> Manage Gitea work from the command line"
,
"cn"
:
"<TODO> 在命令行管理 Gitea 工作"
}
,
"#subcmd_help_tip"
:
true
,
"repo"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"cn"
:
"仓库管理"
,
"en"
:
"repository management"
}
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo of owner"
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create repo"
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"private"
,
"public"
]
}
}
,
"--readme"
:
{
"#desc"
:
"Readme of the repository to create"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--license"
:
{
"#desc"
:
"License to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"Description of the repository to create"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignores"
:
{
"#desc"
:
"Gitignores to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue_labels"
:
{
"#desc"
:
"Label-Set to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--trust_model"
:
{
"#desc"
:
"TrustModel of the repository"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"default"
,
"collaborator"
,
"committer"
,
"collaboratorcommitter"
]
}
}
,
"--default_branch"
:
{
"#desc"
:
"DefaultBranch of the repository (used when initializes and in template)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--template"
:
{
"#desc"
:
"Whether the repository is template"
}
,
"--auto_init"
:
{
"#desc"
:
"Whether the repository should be auto-initialized"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo names"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update repo"
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
""
,
"public"
]
}
}
,
"--name"
:
{
"#desc"
:
"name of the repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--website"
:
{
"#desc"
:
"a URL with more information about the repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--mirror_interval"
:
{
"#desc"
:
"a short description of the repository."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--default_branch"
:
{
"#desc"
:
"sets the default branch for this repository."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--default_merge_style"
:
{
"#desc"
:
"set to a merge style to be used by this repository: merge, rebase, rebase-merge, or squash. has_pull_requests must be true"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"a short description of the repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--external_tracker_format"
:
{
"#desc"
:
"External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--external_tracker_style"
:
{
"#desc"
:
"External Issue Tracker Number Format, either numeric or alphanumeric"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--external_tracker_url"
:
{
"#desc"
:
"URL of external issue tracker"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--external_wiki_url"
:
{
"#desc"
:
"URL of external wiki"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--has_issues"
:
{
"#desc"
:
"either true to enable issues for this repository or false to disable them."
}
,
"--has_projects"
:
{
"#desc"
:
"either true to enable project unit, or false to disable them."
}
,
"--has_wiki"
:
{
"#desc"
:
"either true to enable the wiki for this repository or false to disable it"
}
,
"--archived"
:
{
"#desc"
:
"set to true to archive this repository."
}
,
"--template"
:
{
"#desc"
:
"either true to make this repository a template or false to make it a normal repository"
}
,
"--enable_prune"
:
{
"#desc"
:
"enable prune - remove obsolete remote-tracking references"
}
,
"--allow_rebase"
:
{
"#desc"
:
"either true to allow rebase-merging pull requests, or false to prevent rebase-merging. has_pull_requests must be true"
}
,
"--allow_manual_merge"
:
{
"#desc"
:
"either true to allow mark pr as merged manually, or false to prevent it. has_pull_requests must be true"
}
,
"--allow_merge_commits"
:
{
"#desc"
:
"either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. has_pull_requests must be true."
}
,
"--allow_rebase_update"
:
{
"#desc"
:
"either true to allow updating pull request branch by rebase, or false to prevent it. has_pull_requests must be true."
}
,
"--allow_squash_merge"
:
{
"#desc"
:
"either true to allow squash-merging pull requests, or false to prevent squash-merging. has_pull_requests must be true."
}
,
"--has_pull_requests"
:
{
"#desc"
:
"either true to allow pull requests, or false to prevent pull request"
}
,
"--enable_time_tracker"
:
{
"#desc"
:
"Enable time tracking (Built-in issue tracker)"
}
,
"--allow_rebase_explicit"
:
{
"#desc"
:
"either true to allow rebase with explicit merge commits (--no-ff), or false to prevent rebase with explicit merge commits. has_pull_requests must be true."
}
,
"--autodetect_manual_merge"
:
{
"#desc"
:
"either true to enable AutodetectManualMerge, or false to prevent it. has_pull_requests must be true, Note: In some special cases, misjudgments can occur."
}
,
"--enable_issue_dependencies"
:
{
"#desc"
:
"Enable dependencies for issues and pull requests (Built-in issue tracker)"
}
,
"--ignore_whitespace_conflicts"
:
{
"#desc"
:
"either true to ignore whitespace for conflicts, or false to not ignore whitespace. has_pull_requests must be true"
}
,
"--allow_only_contributors_to_track_time"
:
{
"#desc"
:
"Let only contributors track time (Built-in issue tracker)"
}
,
"--default_delete_branch_after_merge"
:
{
"#desc"
:
"set to true to delete pr branch after merge by default."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Show detailed information of repo"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Remove repo"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Provide repo list.(separated by spaces)"
}
}
,
"collaborator"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"manage collaborator"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list collaborator"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"add"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"add collaborator"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner_name/repo_name list separated by commas."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username list separated by commas"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"edit collaborator permission"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner_name/repo_name list separated by commas."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username"
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Remove collaborator"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Username list"
}
}
}
,
"cl|clone"
:
{
"#desc"
:
"Clone repo from gitea"
}
,
"branch"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"manage branch"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo branch"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"get repo branch info"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"create"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create the repo branch"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--old_branch_name"
:
{
"#desc"
:
"Name of the old branch to create from"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"default"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"set default branch"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"protection"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"protection branch management"
,
"#subcmd_help_tip"
:
true
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"protection branch info"
,
"--repo|-r"
:
{
"#desc"
:
"repo name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"protection branch list"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"unset"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"remove branch protection"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"set"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"set branch to protection branch"
,
"--repo|-r"
:
{
"#desc"
:
"repo name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--branch_name"
:
{
"#desc"
:
"branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--approvals_whitelist_teams"
:
{
"#desc"
:
"approvals whitelist teams"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--merge_whitelist_teams"
:
{
"#desc"
:
"merge whitelist teams"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--merge_whitelist_usernames"
:
{
"#desc"
:
"merge whitelist usernames"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--protected_file_patterns"
:
{
"#desc"
:
"protected file patterns"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--push_whitelist_teams"
:
{
"#desc"
:
"push whitelist teams"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--push_whitelist_usernames"
:
{
"#desc"
:
"push whitelist usernames"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--required_approvals"
:
{
"#desc"
:
"required approvals"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--status_check_contexts"
:
{
"#desc"
:
"status check contexts"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--unprotected_file_patterns"
:
{
"#desc"
:
"unprotected file patterns"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--enable_push"
:
{
"#desc"
:
"enable push"
}
,
"--enable_push_whitelist"
:
{
"#desc"
:
"enable push whitelist"
}
,
"--enable_approvals_whitelist"
:
{
"#desc"
:
"enable approvals whitelist"
}
,
"--require_signed_commits"
:
{
"#desc"
:
"require signed commits"
}
,
"--block_on_outdated_branch"
:
{
"#desc"
:
"block on outdated branch"
}
,
"--block_on_rejected_reviews"
:
{
"#desc"
:
"block on rejected reviews"
}
,
"--dismiss_stale_approvals"
:
{
"#desc"
:
"dismiss stale approvals"
}
,
"--push_whitelist_deploy_keys"
:
{
"#desc"
:
"push whitelist deploy keys"
}
,
"--approvals_whitelist_username"
:
{
"#desc"
:
"approvals whitelist username"
}
,
"--block_on_official_review_requests"
:
{
"#desc"
:
"block on official review requests"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
}
}
,
"pr"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"manage pr"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"closed"
,
"open"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"oldest"
,
"recentupdate"
,
"leastupdate"
,
"mostcomment"
,
"leastcomment"
,
"priority"
]
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"pull request info"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create pull request"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--unset_due_date"
:
{
"#desc"
:
"ubset due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--allow_maintainer_edit"
:
{
"#desc"
:
"allow maintainer edit"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"merge pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"merge"
,
"rebase"
,
"rebase-merge"
,
"squash"
,
"manually-merged"
]
}
}
,
"--MergeCommitID"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--MergeMessageField"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--MergeTitleField"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head_commit_id"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--force_merge"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--delete_branch_after_merge"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--merge_when_checks_succeed"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
}
}
}
,
"hook"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"repo webhook manage"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo webhook"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"get webhook info"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create webhook"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--type"
:
{
"#desc"
:
"type"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"dingtalk"
,
"discord"
,
"gitea"
,
"gogs"
,
"msteams"
,
"slack"
,
"telegram"
,
"feishu"
,
"wechatwork"
,
"packagist"
]
}
}
,
"--events"
:
{
"#desc"
:
"events the hook is triggered for.(array usage,interval)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"false"
}
}
,
"--branch_filter"
:
{
"#desc"
:
"branch filter"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"set token"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update webhook"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--events"
:
{
"#desc"
:
"events the hook is triggered for.(array usage,interval)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--branch_filter"
:
{
"#desc"
:
"branch filter"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--authorization_header"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"set token"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Remove webhook"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
}
}
}
,
"release"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"repo release manage"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo release"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--draft"
:
{
"#desc"
:
"filter (exclude / include) drafts, if you dont have repo write access none will show"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--pre-release"
:
{
"#desc"
:
"filter (exclude / include) pre-releases"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create repo release"
,
"--name"
:
{
"#desc"
:
"Release name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--tag"
:
{
"#desc"
:
"Please provide tag name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--body"
:
{
"#desc"
:
"Release Description"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Default is main"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"main"
}
}
,
"--draft"
:
{
"#desc"
:
"create a draft release"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
]
}
}
,
"--prerelease"
:
{
"#desc"
:
"Is release version"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Remove repo release"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update release information"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--tag_name"
:
{
"#desc"
:
"The name of the tag."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Is release version"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--name"
:
{
"#desc"
:
"The name of the release."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"Text describing the contents of the tag."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--draft"
:
{
"#desc"
:
"true makes the release a draft, and false publishes the release."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--prerelease"
:
{
"#desc"
:
"true to identify the release as a prerelease, false to identify the release as a full release."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Show detailed information of repo"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
}
,
"team"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List repository teams"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"tag"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo tags"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"$ref"
:
"x-advise://tea/data/repo.jso"
}
,
"issue"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"repo issue management"
,
"cn"
:
"仓库 issue 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List repo issue"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--q"
:
{
"#desc"
:
"search string"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"Indicates the state of the issues to return."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"open"
,
"closed"
,
"all"
]
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--type"
:
{
"#desc"
:
"filter by type (issues / pulls) if set."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"issues"
,
"pulls"
]
}
}
,
"--since"
:
{
"#desc"
:
"Only show items updated after the given time. This is a timestamp in RFC 3339 format"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--before"
:
{
"#desc"
:
"Only show items updated before the given time. This is a timestamp in RFC 3339 format"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created_by"
:
{
"#desc"
:
"Only show items which were created by the the given user"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assigned_by"
:
{
"#desc"
:
"Only show items for which the given user is assigned"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestones"
:
{
"#desc"
:
"comma separated list of milestone names or ids"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--mentioned_by"
:
{
"#desc"
:
"Only show items in which the given user was mentioned"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create an issue"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--ref"
:
{
"#desc"
:
"ref"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--closed"
:
{
"#desc"
:
"Whether to close this issue"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update an issue"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--ref"
:
{
"#desc"
:
"ref"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"whether issue is open or closed Available values : closed, open, all"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--unset_due_date"
:
{
"#desc"
:
"unset due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"close"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Close issue"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"reopen"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Reopen issue"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"$ref"
:
"x-advise://tea/data/issue.jso"
}
,
"user"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"user management"
,
"cn"
:
"用户管理"
}
,
"#subcmd_help_tip"
:
true
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username, empty is using current user"
}
}
,
"email"
:
{
"#desc"
:
"get user email"
}
,
"repo"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List all repos"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List all repos"
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"app"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Interactive UI show repo of user"
,
"--visibility"
:
{
"#desc"
:
"visibility"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"owner"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
}
}
,
"$ref"
:
"x-advise://tea/data/user.jso"
}
,
"org"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"organization management"
,
"cn"
:
"组织管理"
}
,
"#subcmd_help_tip"
:
true
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#cand"
:
[
"/[-A-Za-z0-9_]+/"
]
}
}
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"get organizations list"
,
"--user"
:
{
"#desc"
:
"provide username.(Default:current username)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"repo"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List all repos"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list repo"
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"org repo create"
,
"--org"
:
{
"#desc"
:
"organization create repo"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"/[-A-Za-z0-9_/]+/"
]
}
}
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"private"
,
"public"
]
}
}
,
"--readme"
:
{
"#desc"
:
"Readme of the repository to create"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--license"
:
{
"#desc"
:
"License to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"Description of the repository to create"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignores"
:
{
"#desc"
:
"Gitignores to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue_labels"
:
{
"#desc"
:
"Label-Set to use"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--trust_model"
:
{
"#desc"
:
"TrustModel of the repository"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"default"
,
"collaborator"
,
"committer"
,
"collaboratorcommitter"
]
}
}
,
"--default_branch"
:
{
"#desc"
:
"DefaultBranch of the repository (used when initializes and in template)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--template"
:
{
"#desc"
:
"Whether the repository is template"
}
,
"--auto_init"
:
{
"#desc"
:
"Whether the repository should be auto-initialized"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#n"
:
{
"#desc"
:
"repo names"
}
}
,
"app"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Interactive UI show organization repo"
,
"--type"
:
{
"#desc"
:
"type"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
}
,
"member"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"member management"
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"get org membership user info"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username:space address"
}
}
,
"add"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"add org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"member"
,
"#cand"
:
[
"admin"
,
"member"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#n"
:
{
"#desc"
:
"username"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"admin"
,
"member"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username"
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Remove membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"username"
}
}
}
,
"$ref"
:
"x-advise://tea/data/org.jso"
}
,
"team"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"organization team management"
,
"cn"
:
"组织团队管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list user or org team"
,
"--org"
:
{
"#desc"
:
"org space address(Get all teams of the current user by default)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Get team info by id"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team id"
}
}
,
"create"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"To create a team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--units"
:
{
"#desc"
:
"list:repo.code repo.issues repo.ext_issues repo.wiki repo.pulls repo.releases repo.projects repo.ext_wiki"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--units_map"
:
{
"#desc"
:
"units map"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the team"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"team permission"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"read"
,
"write"
,
"admin"
]
}
}
,
"--can_create_org_repo"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--includes_all_repositories"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team name"
}
}
,
"edit"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"To edit a team"
,
"--name"
:
{
"#desc"
:
"team name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--units"
:
{
"#desc"
:
"list:repo.code repo.issues repo.ext_issues repo.wiki repo.pulls repo.releases repo.projects repo.ext_wiki"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--units_map"
:
{
"#desc"
:
"units map"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the team"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"team permission"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"read"
,
"write"
,
"admin"
]
}
}
,
"--can_create_org_repo"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--includes_all_repositories"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team id"
}
}
,
"repo"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"manage org team repo"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Lists a team's repositories visible to the authenticated user."
,
"--team"
:
{
"#desc"
:
"The slug of the team id."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"Output json data"
}
}
,
"info"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List a particular repo of team"
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team id."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"name of the repo to list"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"add"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Add repository to team"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team id."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"name of the repo to add"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"edit"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Update the team's permissions to the repository"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the team on this repo"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"rm org team repo"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team id."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"name of the repo to remove"
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
}
,
"rm"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"To delete a team"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team id."
}
}
,
"child"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Lists the child teams of the team specified."
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+|https?://.+"
:
""
}
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team name."
}
}
,
"$ref"
:
"x-advise://tea/data/team.jso"
}
,
"avatar"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"manage user addressbook for tea"
,
"cn"
:
"tea 用户地址薄管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"List all address books for the current session record"
,
"--raw"
:
{
"#desc"
:
"output format as key=value"
}
}
,
"put|add"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Add or Edit the key and value in the address book"
,
"#1"
:
{
"#desc"
:
"address book key"
}
,
"#2"
:
{
"#desc"
:
"address book value"
}
}
,
"get"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"Get the value of the address book record by key"
,
"#1"
:
{
"#desc"
:
"address book key"
}
}
}
,
"config|cfg"
:
{
"#desc"
:
{
"en"
:
"manage configuration for tea"
,
"cn"
:
"tea 配置管理"
}
}
,
"current"
:
{
"#desc"
:
{
"en"
:
"current session default value management"
,
"cn"
:
"当前会话默认值管理"
}
}
,
"token"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"Add or Replace access token"
,
"cn"
:
"添加或更换私人令牌"
}
,
"--host"
:
{
"#desc"
:
"config API request host"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"https://gitea.com/api/v1"
}
}
,
"--profile"
:
{
"#desc"
:
"config profile name. empty use default"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--config"
:
{
"#desc"
:
"config file path. empty use default"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"access token. empty output current token"
}
,
"#tip:note"
:
[
{
"en"
:
"Get Gitea access token: https://gitea.com/user/settings/applications"
,
"cn"
:
"获取 Gitea 私人令牌: https://gitea.com/user/settings/applications"
}
]
,
"#tip"
:
[
{
"en"
:
"When you need to switch between the config and profile, Need to use `current` to switch\n\n`x tea current <config|profile> <switch_val>`\n"
,
"cn"
:
"当你需要切换使用的 config 和 profile 时候, 需要使用 `current` 进行切换\n\n`x tea current <config|profile> <switch_val>`\n"
}
]
}
,
"pr"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
{
"en"
:
"repo pull request management"
,
"cn"
:
"仓库 pull request 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls|l"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"list pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"closed"
,
"open"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"oldest"
,
"recentupdate"
,
"leastupdate"
,
"mostcomment"
,
"leastcomment"
,
"priority"
]
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--limit"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"pull request info"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"create|c"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"create pull request"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"update pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--due_date"
:
{
"#desc"
:
"due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this pull request"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Label IDs"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"ID of the milestone"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--unset_due_date"
:
{
"#desc"
:
"ubset due date"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--allow_maintainer_edit"
:
{
"#desc"
:
"allow maintainer edit"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#name"
:
{
"tea"
:
null
}
,
"#desc"
:
"merge pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"merge"
,
"rebase"
,
"rebase-merge"
,
"squash"
,
"manually-merged"
]
}
}
,
"--MergeCommitID"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--MergeMessageField"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--MergeTitleField"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head_commit_id"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--force_merge"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--delete_branch_after_merge"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--merge_when_checks_succeed"
:
{
"#desc"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
}
}
,
"$ref"
:
"x-advise://tea/data/pr.jso"
}
,
"cl"
:
{
"#desc"
:
{
"en"
:
"shortcut for `x tea repo clone`"
,
"cn"
:
"`x tea repo clone` 的简写别名"
}
,
"$ref"
:
"x-advise://git/data/clone.jso"
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<ownerPath>/<RepoPath> (default ownerPath: current user)"
,
"cn"
:
"<所属空间地址>/<仓库地址> (默认所属空间地址: 当前用户空间地址)"
}
}
}
,
"#useparam"
:
true
,
"#tip"
:
[
{
"en"
:
"Run command `x tea token <token>` add access token. The token will be save local.\nGet Gitea access token: https://gitea.com/user/settings/applications\n"
,
"cn"
:
"运行命令 `x tea token <token>` 添加私人令牌, 私人令牌将存放于本地保存\nGitea 私人令牌获取: https://gitea.com/user/settings/applications\n"
}
]
,
"#subcmd:main"
:
[
"repo"
,
"issue"
,
"pr"
,
"user"
,
"org"
,
"team"
,
"current"
,
"token"
]
,
"#subcmd:shortcut"
:
[
"cl"
]
,
"#subcmd:minor"
:
[
"avatar"
,
"config|cfg"
]
}

