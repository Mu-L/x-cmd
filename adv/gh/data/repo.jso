{
"#tldr"
:
[
{
"cmd"
:
"x gh repo ls"
,
"en"
:
"Output as list current user repos"
,
"cn"
:
"罗列输出当前用户仓库"
}
,
{
"cmd"
:
"x gh repo app"
,
"en"
:
"Interactive UI show current user repositories"
,
"cn"
:
"开启交互式表格查看当前用户仓库"
}
]
,
"app"
:
{
"#name"
:
{
"x gh repo app"
:
null
,
"en"
:
"Interactive UI show repo by owner"
,
"cn"
:
"交互式表格显示所属地址仓库"
}
,
"#desc"
:
{
"en"
:
"Interactive UI show repo by owner\n\n`x gh repo app` is multi-command merge sugar to conveniently use\n* `x gh user repo app`\n* `x gh org repo app`\n\nIf you need more control options, Please use them\n"
,
"cn"
:
"交互式表格显示所属地址仓库\n\n`x gh repo app` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo app`\n* `x gh org repo app`\n\n如果你需要更多控制指令, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo app"
,
"en"
:
"Interactive UI show current user repositories"
,
"cn"
:
"开启交互式表格查看当前用户仓库"
}
,
{
"cmd"
:
"x gh repo app <org_path>"
,
"en"
:
"Interactive UI show <org_path> repositories"
,
"cn"
:
"开启交互式表格查看组织仓库"
}
]
,
"--sort"
:
{
"#synopsis"
:
"<sort>"
,
"#desc"
:
{
"en"
:
"sort way"
,
"cn"
:
"排序方式"
}
}
,
"--direction"
:
{
"#synopsis"
:
"<direction>"
,
"#desc"
:
{
"en"
:
"sort direction"
,
"cn"
:
"排序方向"
}
}
,
"--type"
:
{
"#synopsis"
:
"<repo_permission>"
,
"#desc"
:
{
"en"
:
"filter by repo type"
,
"cn"
:
"仓库类型过滤"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
}
,
"ls"
:
{
"#name"
:
{
"x gh repo ls"
:
null
,
"en"
:
"List repo by owner"
,
"cn"
:
"罗列仓库"
}
,
"#desc"
:
{
"en"
:
"List repo by owner\n\n`x gh repo ls` is multi-command merge sugar to conveniently use\n* `x gh user repo ls`\n* `x gh org repo ls`\nIf you need more control options or using in script, Please use them\n"
,
"cn"
:
"罗列仓库\n\n`x gh repo ls` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo ls`\n* `x gh org  repo ls`\n如果你需要更多控制指令或者编写脚本, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo ls"
,
"en"
:
"Output as list current user repos"
,
"cn"
:
"以列表的形式输出当前用户仓库"
}
,
{
"cmd"
:
"x gh repo ls <org_path>"
,
"en"
:
"Output as list <org_path> repos"
,
"cn"
:
"以列表的形式输出组织仓库"
}
]
,
"--sort"
:
{
"#synopsis"
:
"<sort>"
,
"#desc"
:
{
"en"
:
"sort way"
,
"cn"
:
"排序方式"
}
}
,
"--direction"
:
{
"#synopsis"
:
"<direction>"
,
"#desc"
:
{
"en"
:
"sort direction"
,
"cn"
:
"排序方向"
}
}
,
"--type"
:
{
"#synopsis"
:
"<repo_permission>"
,
"#desc"
:
{
"en"
:
"filter by repo type"
,
"cn"
:
"仓库类型过滤"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#required"
:
false
,
"#desc"
:
{
"en"
:
"owner path"
,
"cn"
:
"所属地址"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show repo detailed information"
,
"cn"
:
"显示仓库信息"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create"
:
{
"#name"
:
{
"x gh repo create"
:
null
,
"en"
:
"Create repo"
,
"cn"
:
"创建仓库"
}
,
"#desc"
:
{
"en"
:
"Create repo\n\n`x gh repo create` is multi-command merge sugar to conveniently use\n* `x gh user repo create`\n* `x gh org repo create`\nIf you need more control options or using in script, Please use them\n"
,
"cn"
:
"创建仓库\n\n`x gh repo create` 是一个多命令复合命令, 旨在方便快速使用\n* `x gh user repo create`\n* `x gh org repo create`\n如果你需要更多控制指令或者编写脚本, 请使用他们\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo create <repo_name>"
,
"en"
:
"Create a repo named <repo_name> for current user"
,
"cn"
:
"为当前用户创建 <repo_name> 的仓库"
}
,
{
"cmd"
:
"x gh repo create <org_path>/<repo_name>"
,
"en"
:
"Create a repo named <repo_name> for <org_path> organization"
,
"cn"
:
"为<org_path>组织创建 <repo_name> 的仓库"
}
]
,
"--access"
:
{
"#synopsis"
:
"<private,public>"
,
"#desc"
:
{
"en"
:
"repo access"
,
"cn"
:
"仓库访问权"
}
}
,
"--description"
:
{
"#synopsis"
:
"<desc>"
,
"#desc"
:
{
"en"
:
"repo description"
,
"cn"
:
"仓库描述"
}
}
,
"--homepage"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"repo homepage"
,
"cn"
:
"仓库主页"
}
}
,
"--team_id"
:
{
"#synopsis"
:
"<team_id>"
,
"#desc"
:
{
"en"
:
"the ID of team"
,
"cn"
:
"团队 ID"
}
}
,
"--gitignore_template"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"Git Ignore template"
,
"cn"
:
"Git Ignore 模版"
}
}
,
"--license_template"
:
{
"synopsis>"
:
"<name>"
,
"#desc"
:
{
"en"
:
"License template"
,
"cn"
:
"License 模版"
}
}
,
"#option:Optional"
:
[
"--access"
,
"--homepage"
,
"--description"
,
"--team_id"
,
"--gitignore_template"
,
"--license_template"
]
,
"--no_issues"
:
{
"#desc"
:
{
"en"
:
"Ban repo issue"
,
"cn"
:
"不允许提 issue"
}
}
,
"--no_projects"
:
{
"#desc"
:
{
"en"
:
"Ban repo projects"
,
"cn"
:
"不允许拥有 projects"
}
}
,
"--no_wiki"
:
{
"#desc"
:
{
"en"
:
"Ban repo wiki"
,
"cn"
:
"不提供 Wiki"
}
}
,
"--auto_init"
:
{
"#desc"
:
{
"en"
:
"auto init README"
,
"cn"
:
"自动初始化README文档"
}
}
,
"--no_merge_commit"
:
{
"#desc"
:
{
"en"
:
"Ban merge commits for pull requests"
,
"cn"
:
"不允许 PR 合并所有提交"
}
}
,
"--no_squash_merge"
:
{
"#desc"
:
{
"en"
:
"Ban squash merges for pull requests"
,
"cn"
:
"不允许扁平化合并 PR"
}
}
,
"--no_rebase_merge"
:
{
"#desc"
:
{
"en"
:
"Ban rebase merges for pull requests"
,
"cn"
:
"不允许变基合并 PR"
}
}
,
"--allow_auto_merge"
:
{
"#desc"
:
{
"en"
:
"allow Auto-merge to be used on pull requests"
,
"cn"
:
"允许自动合并 PR"
}
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
{
"en"
:
"delete head branches when pull requests are merged"
,
"cn"
:
"合并后删除分支"
}
}
,
"--has_downloads"
:
{
"#desc"
:
{
"en"
:
"downloads are enabled"
,
"cn"
:
"下载启用"
}
}
,
"--is_template"
:
{
"#desc"
:
{
"en"
:
"mark as a template repositories"
,
"cn"
:
"标记为模版仓库"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo configure"
,
"cn"
:
"修改仓库信息"
}
,
"--name"
:
{
"#synopsis"
:
"<rename>"
,
"#desc"
:
{
"en"
:
"repo rename"
,
"cn"
:
"仓库重命名"
}
}
,
"--access"
:
{
"#synopsis"
:
"<private,public>"
,
"#desc"
:
{
"en"
:
"repo access"
,
"cn"
:
"仓库访问权限"
}
}
,
"--default_branch"
:
{
"#synopsis"
:
"<branch_name>"
,
"#desc"
:
{
"en"
:
"repo default branch"
,
"cn"
:
"仓库默认分支"
}
}
,
"--team_id"
:
{
"#synopsis"
:
"<team_id>"
,
"#desc"
:
{
"en"
:
"the ID of team"
,
"cn"
:
"团队 ID"
}
}
,
"--homepage"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"repo homepage"
,
"cn"
:
"仓库主页"
}
}
,
"--description"
:
{
"#synopsis"
:
"<desc>"
,
"#desc"
:
{
"en"
:
"repo description"
,
"cn"
:
"仓库描述"
}
}
,
"--advanced_security"
:
{
"#synopsis"
:
"<enable|disable>"
,
"#desc"
:
{
"en"
:
"enable or disable GitHub Advanced Security for this repository"
,
"cn"
:
"为此存储库启用或禁用 GitHub 高级安全性"
}
}
,
"--scanning"
:
{
"#synopsis"
:
"<enable|disable>"
,
"#desc"
:
{
"en"
:
"enable or disable secret scanning for this repository"
,
"cn"
:
"启用或禁用此存储库的密钥扫描"
}
}
,
"--scanning_push_protection"
:
{
"#synopsis"
:
"<enable|disable>"
,
"#desc"
:
{
"en"
:
"enable or disable secret scanning push protection for this repository"
,
"cn"
:
"为此存储库启用或禁用密钥推送扫描保护"
}
}
,
"#option:Optional"
:
[
"--name"
,
"--access"
,
"--default_branch"
,
"--team_id"
,
"--homepage"
,
"--description"
,
"--scanning"
,
"--advanced_security"
,
"--scanning_push_protection"
]
,
"--no_issues"
:
{
"#desc"
:
{
"en"
:
"Ban repo issue"
,
"cn"
:
"不允许提 issue"
}
}
,
"--no_projects"
:
{
"#desc"
:
{
"en"
:
"Ban repo projects"
,
"cn"
:
"不允许提 projects"
}
}
,
"--no_wiki"
:
{
"#desc"
:
{
"en"
:
"Ban repo wiki"
,
"cn"
:
"不允许提 wiki"
}
}
,
"--no_squash_merge"
:
{
"#desc"
:
{
"en"
:
"Ban squash merges for pull requests"
,
"cn"
:
"不允许扁平化合并PR"
}
}
,
"--no_merge_commit"
:
{
"#desc"
:
{
"en"
:
"Ban merge commits for pull requests"
,
"cn"
:
"不允许 PR 合并所有提交"
}
}
,
"--no_rebase_merge"
:
{
"#desc"
:
{
"en"
:
"Ban rebase merges for pull requests"
,
"cn"
:
"不允许变基合并 PR"
}
}
,
"--allow_auto_merge"
:
{
"#desc"
:
{
"en"
:
"allow auto-merge to be used on pull requests"
,
"cn"
:
"允许自动合并 PR"
}
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
{
"en"
:
"delete head branches when pull requests are merged"
,
"cn"
:
"合并后删除分支"
}
}
,
"--allow_forking"
:
{
"#desc"
:
{
"en"
:
"allow private forks"
,
"cn"
:
"允许个人fork"
}
}
,
"--archived"
:
{
"#desc"
:
{
"en"
:
"mark this repository as archived and read-only"
,
"cn"
:
"标记仓库为已存档和只读"
}
}
,
"--is_template"
:
{
"#desc"
:
{
"en"
:
"mark as a template repositories"
,
"cn"
:
"标记为模版仓库"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore edit access private prompt interception"
,
"cn"
:
"忽略命令行更换私有访问拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"rename"
:
{
"#desc"
:
{
"en"
:
"Rename repo"
,
"cn"
:
"重命名仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo rename <owner>/<old_name> <new_name>"
,
"en"
:
"repository rename <owner>/<old_name> => <new_name>"
,
"cn"
:
"重命名仓库 <owner>/<old_name> => <new_name>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore rename prompt interception"
,
"cn"
:
"忽略命令行重命名拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Repo Rename"
,
"cn"
:
"仓库重命名"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo"
,
"cn"
:
"删除仓库"
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"browse|b"
:
{
"#desc"
:
{
"en"
:
"Open repo in the web browser"
,
"cn"
:
"使用浏览器打开仓库"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"cl|clone"
:
{
"#desc"
:
{
"en"
:
"Clone repo from Github"
,
"cn"
:
"克隆 Github 仓库"
}
,
"$ref"
:
"x-advise://git/data/clone.jso"
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"fork"
:
{
"#desc"
:
{
"en"
:
"Fork repo from Github"
,
"cn"
:
"复刻 Github 仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo fork <owner/repo>"
,
"en"
:
"Fork <owner/repo> repo to current user repositories"
,
"cn"
:
"复制 <owner/repo> 仓库到当前用户仓库中"
}
]
,
"--org"
:
{
"#synopsis"
:
"<org_path>"
,
"#desc"
:
{
"en"
:
"Forking into an organization"
,
"cn"
:
"复制仓库到组织"
}
}
,
"--name"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"A new name for the fork repository"
,
"cn"
:
"仓库重命名"
}
}
,
"#option:Optional"
:
[
"--org"
,
"--name"
]
,
"--all_branch"
:
{
"#desc"
:
{
"en"
:
"Fork with the all branch"
,
"cn"
:
"复制所有分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target repo <ownerPath>/<RepoPath>"
,
"cn"
:
"目标仓库 <所属空间地址>/<仓库地址>"
}
}
}
,
"download"
:
{
"#desc"
:
{
"en"
:
"Download repo archive from Github"
,
"cn"
:
"下载 Github 仓库源码快照"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo download <owner>/<repo>"
,
"en"
:
"Download <owner>/<repo> repo default branch of the tarball archive on the current directory"
,
"cn"
:
"下载 <owner>/<repo> 仓库默认分支的 tar 压缩包快照于当前目录"
}
,
{
"cmd"
:
"x gh repo download <owner>/<repo>@<git_ref> ./<repo>.zip"
,
"en"
:
"Download <owner>/<repo> repo specified ref <commit SHA|branch|tag> of the zipball archive in the current directory"
,
"cn"
:
"下载 <owner>/<repo> 仓库并指定的提交指针 <commit SHA|branch|tag> 的 zip 压缩包快照于当前目录"
}
,
{
"cmd"
:
"x gh repo download <owner>/<repo> ./<repo>.tar.gz\nmkdir <repo>\ntar xzvf ./<repo>.tar.gz -C ./<repo> --strip-components=1\n"
,
"en"
:
"Download <owner>/<repo> repo default branch of the tarball archive on the specified path. And decompress tarball to <repo> folder"
,
"cn"
:
"下载 <owner>/<repo> 仓库默认分支的 tar.gz 压缩包快照于指定的路径，并解压到 <repo> 文件夹中"
}
]
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<ownerPath>/<RepoPath> (default branch) or <ownerPath>/<RepoPath>@<ref>"
,
"cn"
:
"<所属空间地址>/<仓库地址> (默认分支) 或 <所属空间地址>/<仓库地址>@<提交对象的指针>"
}
}
,
"#2"
:
{
"#desc"
:
{
"en"
:
"Specify the pathname or rename of the archive (Default tar.gz archive file on current path)"
,
"cn"
:
"指定压缩包的命名以及路径 (默认 tar.gz 压缩文件在当前路径)"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"apply"
:
{
"#desc"
:
{
"en"
:
"Manage repo by declare configure"
,
"cn"
:
"通过声明配置管理仓库"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"declare file path(yml, json), stdin '-'"
,
"cn"
:
"声明式配置文件路径(yml, json), stdin '-'"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"alias replace list"
,
"cn"
:
"别名替换列表"
}
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo apply ./repo.yml"
,
"en"
:
"Use repo.yml declare configure manage repo"
,
"cn"
:
"使用 repo.yml 声明配置管理仓库"
}
,
{
"cmd"
:
"x gh repo apply ./repo.yml bot=x-cmd-bot"
,
"en"
:
"Use repo.yml declare configure manage repo, And replace configure's user 'bot' alias name to 'x-cmd-bot'"
,
"cn"
:
"使用 repo.yml 声明配置管理仓库, 并将配置中的别名用户 'bot' 替换为 'x-cmd-bot'"
}
,
{
"cmd"
:
"cat ./repo.yml | x gh repo apply -"
,
"en"
:
"Use stdin declare configure data manage repo"
,
"cn"
:
"使用标准输入流配置数据管理仓库"
}
]
}
,
"tag"
:
{
"#desc"
:
{
"en"
:
"List repository tags"
,
"cn"
:
"罗列仓库标签列表"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"team"
:
{
"#desc"
:
{
"en"
:
"List repository teams"
,
"cn"
:
"罗列仓库的团队列表"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
}
,
"collaborator"
:
{
"#desc"
:
{
"en"
:
"repo collaborator management"
,
"cn"
:
"仓库成员管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator ls --repo <owner>/<repo>"
,
"en"
:
"List <owner>/<repo> repo collaborator"
,
"cn"
:
"以列表格式罗列仓库 <owner>/<repo> 的成员"
}
,
{
"cmd"
:
"x gh repo collaborator add --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Add <user> collaborator to <org>/<repo>. And the permission is push"
,
"cn"
:
"添加 <user> 成员到 <org>/<repo> 之中. 并赋予推送 <push> 权限"
}
]
,
"app"
:
{
"#desc"
:
{
"en"
:
"Interactive UI show repo collaborator"
,
"cn"
:
"交互式表格罗列仓库成员"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--affiliation"
:
{
"#synopsis"
:
"<affiliation>"
,
"#desc"
:
{
"en"
:
"Filter collaborators returned by their affiliation"
,
"cn"
:
"筛选按隶属关系返回的仓库成员"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--affiliation"
,
"--page"
,
"--per_page"
]
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List   repo collaborator"
,
"cn"
:
"罗列仓库成员"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator ls --repo <repo>"
,
"en"
:
"List current user repository's collaborators"
,
"cn"
:
"罗列当前用户仓库 <repo> 中的仓库成员"
}
,
{
"cmd"
:
"x gh repo collaborator ls --repo <org_path>/<repo>"
,
"en"
:
"List show <org_path>/<repo> org repository's collaborators"
,
"cn"
:
"罗列 <org_path>/<repo> 组织仓库中的仓库成员"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--affiliation"
:
{
"#synopsis"
:
"<affiliation>"
,
"#desc"
:
{
"en"
:
"Filter collaborators returned by their affiliation"
,
"cn"
:
"筛选按隶属关系返回的仓库成员"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--affiliation"
,
"--page"
,
"--per_page"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"add"
:
{
"#desc"
:
{
"en"
:
"Add    repo collaborator"
,
"cn"
:
"添加仓库成员"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator add --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Add <user> collaborator to <org>/<repo>. And the permission is push"
,
"cn"
:
"添加 <user> 成员到 <org>/<repo> 之中. 并赋予推送 <push> 权限"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permission|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"collaborator permission"
,
"cn"
:
"成员权限"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
,
"#n"
:
{
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit   repo collaborator role"
,
"cn"
:
"修改仓库成员权限"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo collaborator edit --repo <org>/<repo> --permission push <user>"
,
"en"
:
"Edit <user> collaborator as push permission of <org>/<repo>"
,
"cn"
:
"修改<org>/<repo> 之中的 <user> 成员权限为 push 权限"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permission|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"The permission to grant the collaborator"
,
"cn"
:
"授予仓库成员的权限"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo collaborator"
,
"cn"
:
"移除仓库成员"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"user login path"
,
"cn"
:
"用户空间地址"
}
,
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
,
"#n"
:
{
"#exec"
:
"xrc gh && ___x_cmd_gh___advise_ls_avatar_usename"
}
}
,
"invitation"
:
{
"#desc"
:
{
"en"
:
"repo invitations management"
,
"cn"
:
"仓库成员邀请函管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List invitation for repo or current user"
,
"cn"
:
"罗列仓库或当前用户的邀请函"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<ownerPath>/<RepoPath> (empty is for current user)"
,
"cn"
:
"<所属空间地址>/<仓库地址> (不填写这显示当前用户邀请函列表)"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repository invitation permission"
,
"cn"
:
"修改仓库邀请函权限"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--permissions|-p"
:
{
"#synopsis"
:
"<permission>"
,
"#desc"
:
{
"en"
:
"invitation permission"
,
"cn"
:
"邀请函权限"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID(obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID(可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
}
,
"accept"
:
{
"#desc"
:
{
"en"
:
"Accept invitation for user"
,
"cn"
:
"接受邀请函"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID(obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID(可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Decline invitation for user"
,
"cn"
:
"拒绝并删除邀请函"
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID(obtain by `x gh repo collaborator invitation ls`)"
,
"cn"
:
"邀请函 ID(可通过 `x gh repo collaborator invitation ls` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
,
"cancel"
:
{
"#desc"
:
{
"en"
:
"Cancel the invitation by the repository"
,
"cn"
:
"取消仓库发出的邀请函"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Invitation ID(obtain by `x gh repo collaborator invitation ls --repo <owner>/<repo>`)"
,
"cn"
:
"邀请函 ID(可通过 `x gh repo collaborator invitation ls --repo <owner>/<repo>` 获取)"
}
}
,
"#n"
:
{
"#desc"
:
{
"en"
:
"Invitation ID"
,
"cn"
:
"邀请函 ID"
}
}
}
}
}
,
"file"
:
{
"#desc"
:
{
"en"
:
"repo collaborator management"
,
"cn"
:
"仓库文件管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo file ls --repo <owner/repo>"
,
"en"
:
"List repository root directory contents"
,
"cn"
:
"罗列仓库根目录的文件"
}
,
{
"cmd"
:
"x gh repo file ls --repo <owner/repo> <dir>"
,
"en"
:
"List repository specified directory <dir> contents"
,
"cn"
:
"罗列仓库指定目录 <dir> 的文件"
}
,
{
"cmd"
:
"x gh repo file upload --repo <owner/repo> --message <commit> --file <base_file_path> <target_file_path>"
,
"en"
:
"Upload local <base_file_path> file <owner/repo> github repository default branch <target_file_path>"
,
"cn"
:
"上传本地 <base_file_path> 文件到 <owner/repo> github 仓库默认分支的 <target_file_path>"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repository directory contents"
,
"cn"
:
"罗列仓库目录的文件"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--ref"
:
{
"#synopsis"
:
"<refs>"
,
"#desc"
:
{
"en"
:
"The name of the commit/branch/tag. Default using default branch"
,
"cn"
:
"提交/分支/标签的名称. 默认使用默认分支"
}
}
,
"--all"
:
{
"#desc"
:
{
"en"
:
"Default max limit list 1000 files. Add the flag can list all files"
,
"cn"
:
"默认最大罗列 1000 个文件信息. 添加该标记可以罗列所有文件"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"repo dirname path. Default is root path"
,
"cn"
:
"仓库目录路径. 默认为根目录"
}
,
"#exec"
:
"___x_cmd_advise__dir"
}
}
,
"upload"
:
{
"#desc"
:
{
"en"
:
"Upload file to repository"
,
"cn"
:
"上传文件到仓库"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo file upload --repo <owner/repo> --message <commit> --file <base_file_path> <target_file_path>"
,
"en"
:
"Upload local <base_file_path> file <owner/repo> github repository default branch <target_file_path>"
,
"cn"
:
"上传本地 <base_file_path> 文件到 <owner/repo> github 仓库默认分支的 <target_file_path>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--file"
:
{
"#synopsis"
:
"<path>"
,
"#desc"
:
{
"en"
:
"base upload file path (stdin -)"
,
"cn"
:
"上传本地文件路径 (标准输入 -)"
}
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"--message"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"The commit message"
,
"cn"
:
"提交信息"
}
}
,
"--branch"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"The branch name. Default using default branch"
,
"cn"
:
"分支名称. 默认使用默认分支"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--file"
,
"--message"
]
,
"#option:Optional"
:
[
"--branch"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target upload repo path"
,
"cn"
:
"目标上传仓库路径"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"download"
:
{
"#desc"
:
{
"en"
:
"Download file from repo"
,
"cn"
:
"从仓库下载文件"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--ref"
:
{
"#synopsis"
:
"<refs>"
,
"#desc"
:
{
"en"
:
"The name of the commit/branch/tag. Default using default branch"
,
"cn"
:
"提交/分支/标签的名称. 默认使用默认分支"
}
}
,
"--endpoint"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"Download endpoint. Provide private deployment"
,
"cn"
:
"下载的 URL endpoint. 提供私有部署"
}
}
,
"#option:Required"
:
[
"--repo"
]
,
"#option:Optional"
:
[
"--ref"
,
"--endpoint"
]
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore overwrite prompt interception"
,
"cn"
:
"忽略命令行覆盖拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target repo file path"
,
"cn"
:
"目标仓库文件路径"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
,
"#2"
:
{
"#desc"
:
{
"en"
:
"Download to the specified local file path. (Optional current directory)"
,
"cn"
:
"下载到指定本地文件路径. (可选 下载到当前目录)"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
}
,
"pr"
:
{
"#desc"
:
{
"en"
:
"repo pull request management"
,
"cn"
:
"仓库 pull request 管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr ls --repo <owner/repo>"
,
"en"
:
"List <owner/repo> state is open PR"
,
"cn"
:
"罗列出状态为开启的 pull request 列表"
}
,
{
"cmd"
:
"x gh repo pr merge --repo <owner/repo> --merge_method squash <pr_number>"
,
"en"
:
"Squash Merge <pr_number> PR on <owner/repo>"
,
"cn"
:
"扁平化合并 <pr_number> pull request 于 <owner/repo>"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List pull requests"
,
"cn"
:
"罗列仓库 pull requests"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr ls --repo <owner/repo>"
,
"en"
:
"List state is open pull requests"
,
"cn"
:
"罗列出状态为开启的 pull request 列表"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"Filter pulls by base branch name"
,
"cn"
:
"根据目标分支名称过滤 pull request"
}
}
,
"--head"
:
{
"#synopsis"
:
"<ref>"
,
"#desc"
:
{
"en"
:
"Filter pulls by base branch name"
,
"cn"
:
"根据目标分支名称过滤 pull request"
}
}
,
"--state"
:
{
"#synopsis"
:
"<state>"
,
"#desc"
:
{
"en"
:
"Filter pulls by state"
,
"cn"
:
"根据状态过滤 pull request"
}
}
,
"--sort"
:
{
"#synopsis"
:
"<way>"
,
"#desc"
:
{
"en"
:
"Sort pull requests"
,
"cn"
:
"排序方式"
}
}
,
"--direction"
:
{
"#synopsis"
:
"<direction>"
,
"#desc"
:
{
"en"
:
"Sort pull requests"
,
"cn"
:
"排序方向"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--base"
,
"--head"
,
"--state"
,
"--sort"
,
"--direction"
,
"--page"
,
"--per_page"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"merge"
:
{
"#desc"
:
{
"en"
:
"Merge pull request"
,
"cn"
:
"合并 pull request"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo pr merge --repo <owner/repo> --merge_method squash <pr_number>"
,
"en"
:
"Squash Merge <pr_number> PR on <owner/repo>"
,
"cn"
:
"扁平化合并 <pr_number> pull request 于 <owner/repo>"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--merge_method"
:
{
"#synopsis"
:
"<merge_method>"
,
"#desc"
:
{
"en"
:
"merge method"
,
"cn"
:
"合并方式"
}
}
,
"--commit_title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"Title for the automatic commit message"
,
"cn"
:
"合并的 commit message"
}
}
,
"--commit_message"
:
{
"#synopsis"
:
"<body>"
,
"#desc"
:
{
"en"
:
"Extra detail to append to automatic commit message"
,
"cn"
:
"commit message 的额外更多信息 commit message body"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--merge_method"
,
"--commit_title"
,
"--commit_message"
]
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create pull request"
,
"cn"
:
"创建仓库 pull request"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"pull request title"
,
"cn"
:
"pull request 标题"
}
}
,
"--head"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"source branch"
,
"cn"
:
"源分支"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"target branch"
,
"cn"
:
"提交目标分支的名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<content>"
,
"#desc"
:
{
"en"
:
"pull request content"
,
"cn"
:
"pull request 内容"
}
}
,
"--issue"
:
{
"#synopsis"
:
"<issue>"
,
"#desc"
:
{
"en"
:
"association issue"
,
"cn"
:
"关联 issue"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--title"
,
"--head"
,
"--base"
]
,
"#option:Optional"
:
[
"--body"
,
"--issue"
]
,
"--draft"
:
{
"#desc"
:
{
"en"
:
"set pr as draft"
,
"cn"
:
"设置为草稿"
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
{
"en"
:
"Not allow maintainers modify the pull request"
,
"cn"
:
"不允许维护者修改 pull request"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit pull request"
,
"cn"
:
"修改仓库 pull request"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--state"
:
{
"#synopsis"
:
"<open,closed>"
,
"#desc"
:
{
"en"
:
"pr state"
,
"cn"
:
"pull request 状态"
}
}
,
"--title"
:
{
"#synopsis"
:
"<title>"
,
"#desc"
:
{
"en"
:
"pull request title"
,
"cn"
:
"pull request 标题"
}
}
,
"--base"
:
{
"#synopsis"
:
"<branch>"
,
"#desc"
:
{
"en"
:
"target branch"
,
"cn"
:
"提交目标分支的名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<content>"
,
"#desc"
:
{
"en"
:
"pull request content"
,
"cn"
:
"pull request 内容"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--state"
]
,
"#option:Optional"
:
[
"--title"
,
"--base"
,
"--body"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
{
"en"
:
"Not allow maintainers modify the pull request"
,
"cn"
:
"不允许维护者修改 pull request"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show pull request info"
,
"cn"
:
"输出仓库 pull request 信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"PR number"
,
"cn"
:
"PR 序号"
}
}
}
}
,
"hook"
:
{
"#desc"
:
{
"en"
:
"repo webhooks management"
,
"cn"
:
"仓库钩子管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo webhook"
,
"cn"
:
"罗列仓库钩子"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create repo webhook"
,
"cn"
:
"创建仓库钩子"
}
,
"#tip"
:
[
{
"en"
:
"events: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
,
"cn"
:
"事件列表: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--url"
:
{
"#synopsis"
:
"<url>"
,
"#desc"
:
{
"en"
:
"The URL to which the payloads will be delivered"
,
"cn"
:
"钩子触发的远程 URL"
}
}
,
"--events"
:
{
"#synopsis"
:
"<events(separator ,)>"
,
"#desc"
:
{
"en"
:
"events the hook is triggered for"
,
"cn"
:
"触发钩子的事件"
}
}
,
"--name"
:
{
"#synopsis"
:
"<webhook_name>"
,
"#desc"
:
{
"en"
:
"webhook name"
,
"cn"
:
"webhook 名字"
}
}
,
"--content_type"
:
{
"#synopsis"
:
"<content_type>"
,
"#desc"
:
null
,
"en"
:
"Requtest content_type"
,
"cn"
:
"请求参考传递类型"
}
,
"--secret"
:
{
"#synopsis"
:
"<secret>"
,
"#desc"
:
{
"en"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"cn"
:
"该密钥将用作生成 HMAC 十六进制摘要的密钥"
}
}
,
"--token"
:
{
"#synopsis"
:
"<token>"
,
"#desc"
:
{
"en"
:
"set token"
,
"cn"
:
"设置token"
}
}
,
"--digest"
:
{
"#synopsis"
:
"<digest>"
,
"#desc"
:
{
"en"
:
"digest information"
,
"cn"
:
"摘要信息"
}
}
,
"--insecure_ssl"
:
{
"#synopsis"
:
"<insecure_ssl>"
,
"#desc"
:
{
"en"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads"
,
"cn"
:
"在传送有效负载时验证 url 主机的 SSL 证书"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--url"
]
,
"#option:Optional"
:
[
"--events"
,
"--name"
,
"--content_type"
,
"--secret"
,
"--token"
,
"--digest"
,
"--insecure_ssl"
]
,
"--active"
:
{
"#desc"
:
{
"en"
:
"Determines if notifications are sent when the webhook is triggered"
,
"cn"
:
"在触发 Webhook 时发送通知"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo webhook configure"
,
"cn"
:
"修改仓库钩子"
}
,
"#tip"
:
[
{
"en"
:
"events: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
,
"cn"
:
"事件列表: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--events"
:
{
"#synopsis"
:
"<events(separator ,)>"
,
"#desc"
:
{
"en"
:
"events the hook is triggered for"
,
"cn"
:
"触发钩子的事件"
}
}
,
"--name"
:
{
"#synopsis"
:
"<webhook_name>"
,
"#desc"
:
{
"en"
:
"webhook name"
,
"cn"
:
"webhook 名字"
}
}
,
"--secret"
:
{
"#synopsis"
:
"<secret>"
,
"#desc"
:
{
"en"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"cn"
:
"该密钥将用作生成 HMAC 十六进制摘要的密钥"
}
}
,
"--token"
:
{
"#synopsis"
:
"<token>"
,
"#desc"
:
{
"en"
:
"set token"
,
"cn"
:
"设置 token"
}
}
,
"--insecure_ssl"
:
{
"#synopsis"
:
"<insecure_ssl>"
,
"#desc"
:
{
"en"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads"
,
"cn"
:
"在传送有效负载时验证 url 主机的 SSL 证书"
}
}
,
"--active"
:
{
"#desc"
:
{
"en"
:
"Determines if notifications are sent when the webhook is triggered"
,
"cn"
:
"在触发 Webhook 时发送通知"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show repo webhook detailed information"
,
"cn"
:
"输出仓库钩子信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"钩子的唯一标识符"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo webhook"
,
"cn"
:
"删除仓库钩子"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略删除提示拦截"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"webhooks ID (obtain by `x gh repo hook ls`)"
,
"cn"
:
"仓库钩子 ID (可通过 `x gh repo hook ls` 获取)"
}
}
}
}
,
"branch"
:
{
"#desc"
:
{
"en"
:
"repo branch management"
,
"cn"
:
"仓库分支管理"
}
,
"app"
:
{
"#desc"
:
{
"en"
:
"Interactive UI show repo branch"
,
"cn"
:
"交互式表格显示仓库分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--protected"
:
{
"#desc"
:
{
"en"
:
"returns only protected branches"
,
"cn"
:
"仅返回受保护的分支"
}
}
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo branch list"
,
"cn"
:
"罗列仓库分支列表"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--protected"
:
{
"#desc"
:
{
"en"
:
"returns only protected branches"
,
"cn"
:
"仅返回受保护的分支"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show the branch detail info"
,
"cn"
:
"输出仓库分支详细信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"default"
:
{
"#desc"
:
{
"en"
:
"Setup repo default branch"
,
"cn"
:
"设置仓库默认分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"rename"
:
{
"#desc"
:
{
"en"
:
"rename the repo branch"
,
"cn"
:
"仓库分支重命名"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--new_name"
:
{
"#synopsis"
:
"<name>"
,
"#desc"
:
{
"en"
:
"branch rename"
,
"cn"
:
"分支重命名"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"target branch name"
,
"cn"
:
"目标分支名称"
}
}
}
,
"protection"
:
{
"#desc"
:
{
"en"
:
"repo protection branch management"
,
"cn"
:
"仓库保护分支管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"protection branch list"
,
"cn"
:
"罗列保护分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"protection branch info"
,
"cn"
:
"获取保护分支信息"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"set"
:
{
"#desc"
:
{
"en"
:
"Set repo protection branch"
,
"cn"
:
"设置仓库保护分支"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--strict"
:
{
"#desc"
:
{
"en"
:
"Require branches to be up to date before merging"
,
"cn"
:
"要求分支在合并之前保持最新"
}
}
,
"--admins"
:
{
"#desc"
:
{
"en"
:
"enforce required status checks for repository administrators"
,
"cn"
:
"对存储库管理员强制实施所需的状态检查"
}
}
,
"--history"
:
{
"#desc"
:
{
"en"
:
"Require branches to be up to date before merging"
,
"cn"
:
"防止将合并提交推送到匹配的分支"
}
}
,
"--force_push"
:
{
"#desc"
:
{
"en"
:
"Permit force pushes for all users with push access"
,
"cn"
:
"允许所有具有推送访问权限的用户进行强制推送"
}
}
,
"--deletions"
:
{
"#desc"
:
{
"en"
:
"Allow users with push access to delete matching branches"
,
"cn"
:
"允许具有推送访问权限的用户删除匹配的分支"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名称"
}
}
}
,
"unset"
:
{
"#desc"
:
{
"en"
:
"Remove repo protection branch strategy"
,
"cn"
:
"移除仓库保护分支策略"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"branch name"
,
"cn"
:
"分支名"
}
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
}
}
,
"release"
:
{
"#desc"
:
{
"en"
:
"repo release management"
,
"cn"
:
"仓库发布管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo release"
,
"cn"
:
"罗列仓库所有发行版本"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create repo release"
,
"cn"
:
"创建仓库发行版本"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--tag"
:
{
"#synopsis"
:
"<tag_name>"
,
"#desc"
:
{
"en"
:
"Please provide tag name"
,
"cn"
:
"目标标签名称"
}
}
,
"--name"
:
{
"#synopsis"
:
"<release_name>"
,
"#desc"
:
{
"en"
:
"Release name"
,
"cn"
:
"发行名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<release_desc>"
,
"#desc"
:
{
"en"
:
"Release Description"
,
"cn"
:
"发行描述"
}
}
,
"--target_commitish"
:
{
"#synopsis"
:
"<target_commitish>"
,
"#desc"
:
{
"en"
:
"release branch(Default is main)"
,
"cn"
:
"发行的分支(默认 is main)"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--tag"
]
,
"#option:Optional"
:
[
"--name"
,
"--body"
,
"--target_commitish"
]
,
"--draft"
:
{
"#desc"
:
{
"en"
:
"set as draft"
,
"cn"
:
"设置为草稿"
}
}
,
"--prerelease"
:
{
"#desc"
:
{
"en"
:
"release as a prerelease."
,
"cn"
:
"设置为预览版本"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Update release information"
,
"cn"
:
"编辑仓库发行版本信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--tag_name"
:
{
"#synopsis"
:
"<tag_naem>"
,
"#desc"
:
{
"en"
:
"Please provide tag name"
,
"cn"
:
"目标标签名称"
}
}
,
"--target_commitish"
:
{
"#synopsis"
:
"<target_commitish>"
,
"#desc"
:
{
"en"
:
"release branch(Default is main)"
,
"cn"
:
"发行的分支(默认 is main)"
}
}
,
"--name"
:
{
"#synopsis"
:
"<release_name>"
,
"#desc"
:
{
"en"
:
"Release name"
,
"cn"
:
"发行名称"
}
}
,
"--body"
:
{
"#synopsis"
:
"<release_desc>"
,
"#desc"
:
{
"en"
:
"Release Description"
,
"cn"
:
"发行描述"
}
}
,
"--draft"
:
{
"#desc"
:
{
"en"
:
"set as draft"
,
"cn"
:
"设置为草稿"
}
}
,
"--prerelease"
:
{
"#desc"
:
{
"en"
:
"release as a prerelease."
,
"cn"
:
"设置为预览版本"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Release ID (obtain by `x gh repo release ls`)"
,
"cn"
:
"发行ID (可通过 `x gh repo release ls` 获取)"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Show detailed information of repo"
,
"cn"
:
"输出仓库发行版本信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Release ID (obtain by `x gh repo release ls`)"
,
"cn"
:
"发行ID (可通过 `x gh repo release ls` 获取)"
}
}
}
,
"latest"
:
{
"#desc"
:
{
"en"
:
"Show latest release"
,
"cn"
:
"输出仓库最后一次发行版本信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove repo release"
,
"cn"
:
"删除仓库发行版本"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Release ID (obtain by `x gh repo release ls`)"
,
"cn"
:
"发行ID (可通过 `x gh repo release ls` 获取)"
}
}
}
,
"attachment|asset"
:
{
"#desc"
:
{
"en"
:
"repo release attachment management"
,
"cn"
:
"仓库发行附件资源管理"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo release attachment ls --repo <owner/repo> --release_id <releaese_id>"
,
"en"
:
"List <releaese_id> release attachments on <owner/repo> repo"
,
"cn"
:
"罗列 <owner/repo> 仓库中 <releaese_id> 发行版本中的所有附件资源"
}
,
{
"cmd"
:
"x gh repo release attachment upload --repo <owner/repo> --release_id <releaese_id> <file_path>"
,
"en"
:
"Upload <file_path> file as <releaese_id> release attachments on <owner/repo> repo"
,
"cn"
:
"上传 <file_path> 文件作为 <owner/repo> 仓库中 <releaese_id> 发行版本的附件资源"
}
]
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List repo release attachments"
,
"cn"
:
"罗列仓库附件资源"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--release_id"
:
{
"#synopsis"
:
"<id>"
,
"#desc"
:
{
"en"
:
"Release ID (obtain by `x gh repo release ls`)"
,
"cn"
:
"发行版本 ID (可通过 `x gh repo release ls` 获取)"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--release_id"
]
,
"#option:Optional"
:
[
"--page"
,
"--per_page"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"info"
:
{
"#desc"
:
{
"en"
:
"Get a repo release attachment information"
,
"cn"
:
"获取仓库附件资源详细信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Attachment ID (obtain by `x gh repo release attachment ls`)"
,
"cn"
:
"附件资源 ID (可通过 `x gh repo release attachment ls` 获取)"
}
}
}
,
"upload"
:
{
"#desc"
:
{
"en"
:
"Upload a repo release attachment"
,
"cn"
:
"上传仓库附件资源"
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh repo release attachment upload --repo <owner/repo> --release_id <releaese_id> <file_path>"
,
"en"
:
"Upload <file_path> file as <releaese_id> release attachments on <owner/repo> repo"
,
"cn"
:
"上传 <file_path> 文件作为 <owner/repo> 仓库中 <releaese_id> 发行版本的附件资源"
}
]
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--release_id"
:
{
"#synopsis"
:
"<id>"
,
"#desc"
:
{
"en"
:
"Release ID (obtain by `x gh repo release ls`)"
,
"cn"
:
"发行版本 ID (可通过 `x gh repo release ls` 获取)"
}
}
,
"--name"
:
{
"#synopsis"
:
"<file_name>"
,
"#desc"
:
{
"en"
:
"The file name of the attachment"
,
"cn"
:
"发行资源附件文件名"
}
}
,
"--label"
:
{
"#synopsis"
:
"<desc>"
,
"#desc"
:
{
"en"
:
"An alternate short description of the attachment"
,
"cn"
:
"发行资源附件简短描述"
}
}
,
"--file_type"
:
{
"#synopsis"
:
"<media_type>"
,
"#desc"
:
{
"en"
:
"Target upload attachment media type"
,
"cn"
:
"目标上传附件资源媒体类型"
}
}
,
"--endpoint"
:
{
"#synopsis"
:
"<address>"
,
"#desc"
:
{
"en"
:
"upload endpoint (provide Github enterprise server custom)"
,
"cn"
:
"上传的宿主机端点地址 (提供给 Github 私有化部署)"
}
}
,
"#option:Required"
:
[
"--repo|-r"
,
"--release_id"
]
,
"#option:Optional"
:
[
"--name"
,
"--label"
,
"--file_type"
,
"--endpoint"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Target upload attachment file path, stdin '-'"
,
"cn"
:
"目标上传附件资源文件目录地址, stdin '-'"
}
,
"#exec"
:
"___x_cmd_advise__file"
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Edit repo release attachment information"
,
"cn"
:
"修改仓库附件资源信息"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--name"
:
{
"#synopsis"
:
"<file_name>"
,
"#desc"
:
{
"en"
:
"The file name of the attachment"
,
"cn"
:
"发行资源附件文件名"
}
}
,
"--label"
:
{
"#synopsis"
:
"<desc>"
,
"#desc"
:
{
"en"
:
"An alternate short description of the attachment"
,
"cn"
:
"发行资源附件简短描述"
}
}
,
"#option:Required"
:
[
"--repo|-r"
]
,
"#option:Optional"
:
[
"--name"
,
"--label"
]
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Attachment ID (obtain by `x gh repo release attachment ls`)"
,
"cn"
:
"附件资源 ID (可通过 `x gh repo release attachment ls` 获取)"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Delete repo release attachment"
,
"cn"
:
"删除仓库附件资源"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Attachment ID (obtain by `x gh repo release attachment ls`)"
,
"cn"
:
"附件资源 ID (可通过 `x gh repo release attachment ls` 获取)"
}
}
}
}
}
,
"label"
:
{
"#desc"
:
{
"en"
:
"repo issue labels management"
,
"cn"
:
"仓库 issue 标签管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List all labels for repo"
,
"cn"
:
"罗列仓库的所有标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"create"
:
{
"#desc"
:
{
"en"
:
"Create a label for repo"
,
"cn"
:
"为仓库创建标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--color"
:
{
"#synopsis"
:
"<hex_code>"
,
"#desc"
:
{
"en"
:
"The hexadecimal color code for the label (without #)"
,
"cn"
:
"标签的十六进制颜色代码 (不包含 #)"
}
}
,
"--description"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"A short description of the label"
,
"cn"
:
"标签的描述"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
,
"edit|ed"
:
{
"#desc"
:
{
"en"
:
"Update a label for repo"
,
"cn"
:
"更新仓库的标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--color"
:
{
"#synopsis"
:
"<hex_code>"
,
"#desc"
:
{
"en"
:
"The hexadecimal color code for the label (without #)"
,
"cn"
:
"标签的十六进制颜色代码 (不包含 #)"
}
}
,
"--description"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"A short description of the label"
,
"cn"
:
"标签的描述"
}
}
,
"--new_name"
:
{
"#synopsis"
:
"<str>"
,
"#desc"
:
{
"en"
:
"The new name of the label"
,
"cn"
:
"标签的新名称"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
,
"rm"
:
{
"#desc"
:
{
"en"
:
"Remove a label for repo"
,
"cn"
:
"删除仓库的标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"Label name"
,
"cn"
:
"标签名称"
}
}
}
}
,
"topic"
:
{
"#desc"
:
{
"en"
:
"repo topics management"
,
"cn"
:
"仓库的主题分类管理"
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List all repo topics"
,
"cn"
:
"列出仓库所有的主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"target page"
,
"cn"
:
"目标页码"
}
}
,
"--per_page"
:
{
"#synopsis"
:
"<num>"
,
"#desc"
:
{
"en"
:
"per_page data number"
,
"cn"
:
"每页数据量"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
}
,
"add"
:
{
"#desc"
:
{
"en"
:
"Add repo topics"
,
"cn"
:
"添加仓库主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The topics to add to the repository.(separated by ,)"
,
"cn"
:
"要添加到仓库的主题标签 (以 , 分隔)"
}
}
}
,
"replace"
:
{
"#desc"
:
{
"en"
:
"Replace all repo topics"
,
"cn"
:
"替换仓库所有的主题标签"
}
,
"--repo|-r"
:
{
"#synopsis"
:
"<owner/repo>"
,
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
,
"--json|-j"
:
{
"#desc"
:
{
"en"
:
"output raw JSON data"
,
"cn"
:
"以 JSON 格式输出获取数据"
}
}
,
"--yes|-y"
:
{
"#desc"
:
{
"en"
:
"Ignore remove prompt interception"
,
"cn"
:
"忽略命令行删除拦截提示"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The topics to replace to the repository.(separated by ,)"
,
"cn"
:
"要替换仓库的主题标签 (以 , 分隔)"
}
}
}
}
,
"#subcmd:Main"
:
[
"app"
,
"browse|b"
,
"ls"
,
"info"
,
"create"
,
"edit|ed"
,
"rename"
,
"rm"
,
"cl|clone"
,
"fork"
,
"download"
,
"apply"
,
"tag"
,
"team"
]
,
"#subcmd:Management"
:
[
"collaborator"
,
"file"
,
"pr"
,
"hook"
,
"branch"
,
"release"
,
"label"
,
"topic"
]
}

