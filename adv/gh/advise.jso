{
"#name"
:
{
"gh"
:
null
,
"x gh"
:
null
,
"en"
:
"Manage GitHub work from the command line"
,
"cn"
:
"在命令行管理 GitHub 工作"
}
,
"#desc"
:
{
"en"
:
"Manage GitHub work from the command line"
,
"cn"
:
"在命令行管理 GitHub 工作"
}
,
"#subcmd_help_tip"
:
true
,
"repo"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"cn"
:
"仓库管理"
,
"en"
:
"repository management"
}
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show repo by owner"
,
"--type"
:
{
"#desc"
:
"type"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
}
,
"browse|b"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Open GitHub repo in the web browser"
,
"#1"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo by owner"
,
"--type"
:
{
"#desc"
:
"type"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Show repo detailed information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create repo"
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"private"
,
"public"
]
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
".*"
:
""
}
}
}
,
"--homepage"
:
{
"#desc"
:
"homepage"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignore_template"
:
{
"#desc"
:
"The desired language or platform to apply to the .gitignore."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Actionscript"
,
"Ada"
,
""
,
"Agda"
,
"Android"
,
"Anjuta"
,
"Ansible"
,
"AppEngine"
,
"AppceleratorTitanium"
,
"ArchLinuxPackages"
,
"Archives"
,
"Autotools"
,
"Backup"
,
"Bazaar"
,
"BricxCC"
,
"C++"
,
"CFWheels"
,
"CMake"
,
"CUDA"
,
"CVS"
,
"CakePHP"
,
"Calabash"
,
"ChefCookbook"
,
"Clojure"
,
"Cloud9"
,
"CodeIgniter"
,
"CodeKit"
,
"CommonLisp"
,
"Composer"
,
"Concrete5"
,
"Coq"
,
"CraftCMS"
,
"D"
,
"DM"
,
"Dart"
,
"DartEditor"
,
"Delphi"
,
"Diff"
,
"Dreamweaver"
,
"Dropbox"
,
"Drupal"
,
"EPiServer"
,
"Eagle"
,
"Eclipse"
,
"EiffelStudio"
,
"Elisp"
,
"Elixir"
,
"Elm"
,
"Emacs"
,
"Ensime"
,
"Erlang"
,
"Espresso"
,
"ExpressionEngine"
,
"ExtJs"
,
"Fancy"
,
"Finale"
,
"FlexBuilder"
,
"Flutter"
,
"ForceDotCom"
,
"Fortran"
,
"FuelPHP"
,
"GPG"
,
"GWT"
,
"Gcov"
,
"GitBook"
,
"Go"
,
"Godot"
,
"Gradle"
,
"Grails"
,
"Haskell"
,
"IGORPro"
,
"Idris"
,
"Images"
,
"JBoss"
,
"JDeveloper"
,
"JENKINS_HOME"
,
"JEnv"
,
"Java"
,
"Jekyll"
,
"JetBrains"
,
"Joomla"
,
"Julia"
,
"KDevelop4"
,
"Kate"
,
"KiCad"
,
"Kohana"
,
"Kotlin"
,
"LabVIEW"
,
"Laravel"
,
"Lazarus"
,
"Leiningen"
,
"LemonStand"
,
"LibreOffice"
,
"Lilypond"
,
"Linux"
,
"Lithium"
,
"Lua"
,
"LyX"
,
"MATLAB"
,
"Magento"
,
"Maven"
,
"Mercurial"
,
"Mercury"
,
"MetaProgrammingSystem"
,
"Metals"
,
"MicrosoftOffice"
,
"MiniProgram"
,
"ModelSim"
,
"Momentics"
,
"MonoDevelop"
,
"Nanoc"
,
"NetBeans"
,
"Nim"
,
"Ninja"
,
"Node"
,
"NotepadPP"
,
"OCaml"
,
"Objective-C"
,
"Octave"
,
"Opa"
,
"OpenCart"
,
"OracleForms"
,
"Otto"
,
"PSoCCreator"
,
"Packer"
,
"Patch"
,
"Perl"
,
"Phalcon"
,
"PlayFramework"
,
"Plone"
,
"Prestashop"
,
"Processing"
,
"PuTTY"
,
"PureScript"
,
"Python"
,
"Qt"
,
"R"
,
"ROS"
,
"Rails"
,
"Raku"
,
"Redcar"
,
"Redis"
,
"RhodesRhomobile"
,
"Ruby"
,
"Rust"
,
"SBT"
,
"SCons"
,
"SVN"
,
"Sass"
,
"Scala"
,
"Scheme"
,
"Scrivener"
,
"Sdcc"
,
"SeamGen"
,
"SketchUp"
,
"SlickEdit"
,
"Smalltalk"
,
"Stata"
,
"Stella"
,
"SublimeText"
,
"SugarCRM"
,
"Swift"
,
"Symfony"
,
"SymphonyCMS"
,
"SynopsysVCS"
,
"Tags"
,
"TeX"
,
"Terraform"
,
"TextMate"
,
"Textpattern"
,
"TortoiseGit"
,
"TurboGears2"
,
"Typo3"
,
"Umbraco"
,
"Unity"
,
"UnrealEngine"
,
"VVVV"
,
"Vagrant"
,
"Vim"
,
"VirtualEnv"
,
"Virtuoso"
,
"VisualStudio"
,
"VisualStudioCode"
,
"Waf"
,
"WebMethods"
,
"Windows"
,
"WordPress"
,
"Xcode"
,
"XilinxISE"
,
"Xojo"
,
"Yeoman"
,
"Yii"
,
"ZendFramework"
,
"Zephir"
,
"macOS"
]
}
}
,
"--license_template"
:
{
"#desc"
:
"The license keyword of the open source license for this repository."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"MulanPSL-2.0"
,
"0BSD"
,
"AFL-3.0"
,
"AGPL-3.0"
,
""
,
"Apache-2.0"
,
"Artistic-2.0"
,
"BSD-2-Clause"
,
"BSD-3-Clause"
,
"BSD-3-Clause-Clear"
,
"BSL-1.0"
,
"CC-BY-4.0"
,
"CC-BY-SA-4.0"
,
"CC0-1.0"
,
"ECL-2.0"
,
"EPL-1.0"
,
"EPL-2.0"
,
"EUPL-1.1"
,
"EUPL-1.2"
,
"GPL-2.0"
,
"GPL-3.0"
,
"ISC"
,
"LGPL-2.1"
,
"LGPL-3.0"
,
"LPPL-1.3c"
,
"MIT"
,
"MPL-2.0"
,
"MS-PL"
,
"MS-RL"
,
"MulanPSL-1.0"
,
"MulanPubL-1.0"
,
"MulanPubL-2.0"
,
"NCSA"
,
"OFL-1.1"
,
"OSL-3.0"
,
"PostgreSQL"
,
"UPL-1.0"
,
"Unlicense"
,
"WTFPL"
,
"Zlib"
]
}
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--auto_init"
:
{
"#desc"
:
"auto init README"
}
,
"--is_template"
:
{
"#desc"
:
"can be used to generate new repositories"
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Whether to delete head branches when pull requests are merged"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo names"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Edit repo information"
,
"--name"
:
{
"#desc"
:
"repo alias"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
"public"
,
"internal"
,
""
]
}
}
,
"--default_branch"
:
{
"#desc"
:
"Updates the default branch for this repository."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--homepage"
:
{
"#desc"
:
"homepage"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--advanced_security"
:
{
"#desc"
:
"enable or disable GitHub Advanced Security for this repository."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--scanning"
:
{
"#desc"
:
"enable or disable secret scanning for this repository"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--scanning_push_protection"
:
{
"#desc"
:
"enable or disable secret scanning push protection for this repository"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Whether to delete head branches when pull requests are merged"
}
,
"--allow_forking"
:
{
"#desc"
:
"allow private forks."
}
,
"--archived"
:
{
"#desc"
:
"Mark this repository as archived and read-only."
}
,
"--is_template"
:
{
"#desc"
:
"can be used to generate new repositories"
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore access private prompt interception"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"rename"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Rename repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore rename prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Repo Rename"
}
}
,
"cl|clone"
:
{
"#desc"
:
"Clone repo from github"
}
,
"fork"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Fork repo from github"
,
"--org"
:
{
"#desc"
:
"Forking into an organization"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--name"
:
{
"#desc"
:
"A new name for the fork repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--all_branch"
:
{
"#desc"
:
"Fork with the all branch"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Target repo <ownerPath>/<RepoPath>"
}
}
,
"download"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Download repo archive from github"
,
"#1"
:
{
"#desc"
:
"<ownerPath>/<RepoPath> or <ownerPath>/<RepoPath>@<ref>"
}
,
"#2"
:
{
"#desc"
:
"output file path"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove repo"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
}
}
,
"tag"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo tags"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"team"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repository teams"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"apply"
:
{
"#desc"
:
"Manage repo by declare configure"
}
,
"collaborator"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo collaborator"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show repo of user"
,
"--affiliation"
:
{
"#desc"
:
"Filter collaborators returned by their affiliation."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"outside"
,
"direct"
,
"all"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List collaborator"
,
"--affiliation"
:
{
"#desc"
:
"Filter collaborators returned by their affiliation."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"outside"
,
"direct"
,
"all"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Edit collaborator permission"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--permission|-p"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username"
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9](,[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9])*"
:
""
}
}
}
,
"add"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Add collaborator"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission|-p"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"user login path"
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9](,[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9])*"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove collaborator"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Username list"
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"invitation"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"repo invitations management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List invitation for repo or current user"
,
"--repo|-r"
:
{
"#desc"
:
"<ownerPath>/<RepoPath> (empty is for current user)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Edit repository invitation permission"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--permissions|-p"
:
{
"#desc"
:
"The permissions that the associated user will have on the repository"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"triage"
,
"read"
,
"write"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Invitation ID"
}
}
,
"accept"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Accept invitation for user"
,
"#1"
:
{
"#desc"
:
"Invitation ids"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Decline invitation for user"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Invitation ids"
}
}
,
"cancel"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Cancel the invitation by the repository"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Invitation ids"
}
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"export csv data of collaborator"
,
"--affiliation"
:
{
"#desc"
:
"Filter collaborators returned by their affiliation."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"outside"
,
"direct"
,
"all"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
}
,
"file"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo file"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo files"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--ref"
:
{
"#desc"
:
"The name of the commit/branch/tag. Default using default branch"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo path parameter"
}
}
,
"tree"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo file tree"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--recursive"
:
{
"#desc"
:
"Returns the objects or subtrees referenced by the tree"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"the target tree sha"
}
}
,
"upload"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Upload file to repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--file"
:
{
"#desc"
:
"base upload file path"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--message"
:
{
"#desc"
:
"The commit message"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--branch"
:
{
"#desc"
:
"The branch name. Default is repo default branch"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Upload to repo path"
}
}
,
"download"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Download file from repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--ref"
:
{
"#desc"
:
"The commit/branch/tag name. Default using default branch"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--endpoint"
:
{
"#desc"
:
"Download endpoint"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"https://raw.githubusercontent.com"
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore overwrite prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Download from repo path"
}
,
"#2"
:
{
"#desc"
:
"Output file path"
}
}
}
,
"pr"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo pr"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"list pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--base"
:
{
"#desc"
:
"Filter pulls by base branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"Filter pulls by head user or head organization and branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"Filter pulls by issue state"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"open"
,
"#cand"
:
[
"open"
,
"merged"
,
"closed"
,
"all"
]
}
}
,
"--sort"
:
{
"#desc"
:
"List sort way"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
,
"#cand"
:
[
"created"
,
"updated"
,
"popularity"
,
"long-running"
]
}
}
,
"--direction"
:
{
"#desc"
:
"List direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"pull request info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"create pull request"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue"
:
{
"#desc"
:
"association issue"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--draft"
:
{
"#desc"
:
"is draft"
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
"Not allow maintainers modify the pull request"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"update pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
"Not allow maintainers modify the pull request."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"merge pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method(squash,merge)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"merge"
,
"#cand"
:
[
"squash"
,
"merge"
,
"rebase"
]
}
}
,
"--commit_title"
:
{
"#desc"
:
"Title for the automatic commit message."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--commit_message"
:
{
"#desc"
:
"Extra detail to append to automatic commit message."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"hook"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo webhook"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo webhook"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get webhook info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create webhook"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--events"
:
{
"#desc"
:
"events the hook is triggered for.(array usage,interval)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"webhook name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"form"
}
}
,
"--secret"
:
{
"#desc"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"Set token"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Update webhook"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--events"
:
{
"#desc"
:
"Determines what events the hook is triggered for."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"webhook name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"form"
}
}
,
"--secret"
:
{
"#desc"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"set token"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove webhook"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"branch"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo branch"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show team of user"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--protected"
:
{
"#desc"
:
"returns only protected branches."
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"list repo branch"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--protected"
:
{
"#desc"
:
"returns only protected branches."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get repo branch info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
,
"#regex"
:
{
"[a-zA-z0-9_]+"
:
""
}
}
}
,
"rename"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Rename the repo branch"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--new_name"
:
{
"#desc"
:
"branch new name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
,
"#regex"
:
{
"[a-zA-z0-9_]+"
:
""
}
}
}
,
"default"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Set default branch"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"protection"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"protection branch management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"protection branch list"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"protection branch info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"set"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Set branch to protection branch"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--strict"
:
{
"#desc"
:
"Require branches to be up to date before merging"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--admins"
:
{
"#desc"
:
"enforce required status checks for repository administrators"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"null"
,
"#cand"
:
[
"true"
,
"false"
,
"null"
]
}
}
,
"--history"
:
{
"#desc"
:
"Prevent merge commits from being pushed to matching branches."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--force_push"
:
{
"#desc"
:
"Permit force pushes for all users with push access."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--deletions"
:
{
"#desc"
:
"Allow users with push access to delete matching branches."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
,
"#regex"
:
{
"[a-zA-z0-9_]+"
:
""
}
}
}
,
"unset"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove branch protection"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Export csv data of repo branch"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--protected"
:
{
"#desc"
:
"returns only protected branches."
}
}
}
,
"release"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo release"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo release"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Show detailed information of repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"latest"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get latest release"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create repo release"
,
"--tag"
:
{
"#desc"
:
"Please provide tag name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"Release name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"Release Description"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Default is main"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"main"
}
}
,
"--prerelease"
:
{
"#desc"
:
"Is release version"
}
,
"--draft"
:
{
"#desc"
:
"mark as draft release"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Update release information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--tag_name"
:
{
"#desc"
:
"The name of the tag."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Is release version"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--name"
:
{
"#desc"
:
"The name of the release."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"Text describing the contents of the tag."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--draft"
:
{
"#desc"
:
"true makes the release a draft, and false publishes the release."
}
,
"--prerelease"
:
{
"#desc"
:
"true to identify the release as a prerelease, false to identify the release as a full release."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove repo release"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"attachment|asset"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"release attachment management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo release attachment"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--release_id"
:
{
"#desc"
:
"Release ID"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get repo release attachment information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Release Attachment ID"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"upload"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Upload repo release attachment"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--release_id"
:
{
"#desc"
:
"Release ID"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"The file name of the attachment(URL-encode)(default filename)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--label"
:
{
"#desc"
:
"An alternate short description of the attachment(URL-encode)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--file_type"
:
{
"#desc"
:
"Target upload attachment media type"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"octet-stream"
}
}
,
"--endpoint"
:
{
"#desc"
:
"upload endpoint"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"https://uploads.github.com"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"target upload attachment file path"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Edit repo release attachment information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"The file name of the attachment"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--label"
:
{
"#desc"
:
"An alternate short description of the attachment"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Release Attachment ID"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove repo release attachment"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Release Attachment ID"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
}
,
"label"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo label"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"list a label for repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"create a label for repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--color"
:
{
"#desc"
:
"The hexadecimal color code for the label (without #)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the label"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The name of the label"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"update a label for repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--new_name"
:
{
"#desc"
:
"The new name of the label"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--color"
:
{
"#desc"
:
"The hexadecimal color code for the label. (without #)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the label(Must be 100 characters or fewer)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The name of the label"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"remove a label for repo"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The name of the label"
}
}
}
,
"topic"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Manage repo topics"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List all repo topics"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"replace"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Replace all repo topics"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"An array of topics to add to the repository.(separated by commas)"
}
}
,
"add"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Add repo topics"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Add topics to add to the repository.(separated by commas)"
}
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"export repo csv data"
,
"--type"
:
{
"#desc"
:
"visibility"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"owner"
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
}
,
"$ref"
:
"x-advise://gh/data/repo.jso"
}
,
"action"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"GitHub action management"
,
"cn"
:
"GitHub action 管理"
}
,
"#subcmd_help_tip"
:
true
,
"workflow"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Interacting with workflow files"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show workflow information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Lists workflow run information in a repository."
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"view|v"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"View the summary of a workflow"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"branch_protection_rule"
,
"check_run"
,
"check_suite"
,
"create"
,
"delete"
,
"deployment"
,
"deployment_status"
,
"discussion"
,
"discussion_comment"
,
"fork"
,
"gollum"
,
"issue_comment"
,
"issues"
,
"label"
,
"merge_group"
,
"milestone"
,
"page_build"
,
"project"
,
"project_card"
,
"project_column"
,
"public"
,
"pull_request"
,
"pull_request_comment"
,
"pull_request_comment"
,
"pull_request_review_comment"
,
"push"
,
"registry_package"
,
"release"
,
"repository_dispatch"
,
"schedule"
,
"status"
,
"watch"
,
"workflow_call"
,
"workflow_dispatch"
,
"workflow_run"
]
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Success"
,
"Failure"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response"
}
,
"#1"
:
{
"#desc"
:
"The ID of the workflow"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"run|dispatch"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Run a workflow by creating a workflow_dispatch event"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--ref"
:
{
"#desc"
:
"The git reference for the workflow."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--field|-f"
:
{
"#desc"
:
"Input <key>=<value> parameter in the workflow file"
,
"#multiple"
:
true
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--inputs"
:
{
"#desc"
:
"Input keys and values parameter in the workflow file (json)(stdin -)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"workflow <name> or <relative_file_path> or .id=<workflow_id>"
}
}
,
"disable"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Disable a workflow"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"The ID of the workflow"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"enable"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Enable a workflow"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"The ID of the workflow"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"run"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Interacting with workflow runs"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show workflow runs information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response "
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List workflow runs in a repository"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response "
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"view|v"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List jobs summary for a workflow run"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filters jobs by their completed_at timestamp"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"latest"
,
"#cand"
:
[
"latest"
,
"all"
]
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"browse|b"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Open the action run in the browser"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"cancel"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Cancel a workflow runs"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the workflow run"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rerun"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Re-run a workflow runs"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--fail|-f"
:
{
"#desc"
:
"Re-run failed jobs from a workflow run"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the workflow run"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"log"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"View workflow runs log"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"artifact"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Interacting with workflow artifact"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show artifact by owner"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response "
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List artifacts for a repository"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"Filters artifacts by exact match on their name field"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get workflow run artifacts detail info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"artifact id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove an repo artifact"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"artifact id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"download|install"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Download artifact from repo artifacts"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--output|-o"
:
{
"#desc"
:
"Download to specified output folder"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"artifact id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"$ref"
:
"x-advise://gh/data/action/index.jso"
}
,
"package"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"GitHub packages management"
,
"cn"
:
"GitHub packages 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List packages by owner"
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"--visibility"
:
{
"#desc"
:
"The selected visibility of the packages."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
"public"
,
"internal"
,
""
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get user packages info"
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"#1"
:
{
"#desc"
:
"The name of the package."
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove user packages"
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The name of the package."
}
}
,
"tag"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"packages tag manage"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List packages tag by owner"
,
"--package_name"
:
{
"#desc"
:
"The name of the package."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"get user packages info"
,
"--package_name"
:
{
"#desc"
:
"The name of the package."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"#1"
:
{
"#desc"
:
"Unique identifier of the package version ID"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"remove user packages"
,
"--package_name"
:
{
"#desc"
:
"The name of the package."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--owner"
:
{
"#desc"
:
"Specify an organization or user."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--package_type"
:
{
"#desc"
:
"The type of supported package."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"container"
,
"npm"
,
"maven"
,
"rubygems"
,
"docker"
,
"nuget"
]
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Unique identifier of the package version ID"
}
}
}
,
"$ref"
:
"x-advise://gh/data/package.jso"
}
,
"issue"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"repo issue management"
,
"cn"
:
"仓库 issue 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List repo issue"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"Indicates the state of the issues to return."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"open"
,
"#cand"
:
[
"open"
,
"closed"
,
"all"
]
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--creator"
:
{
"#desc"
:
"The user that created the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--mentioned"
:
{
"#desc"
:
"A user that mentioned in the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sort"
:
{
"#desc"
:
"What to sort results by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"comments"
]
}
}
,
"--direction"
:
{
"#desc"
:
"The direction to sort the results by."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"asc"
,
"desc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"create an issue"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"update an issue"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"State of the issue"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"closed"
]
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"close"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Close issue"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"reopen"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Reopen issue"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"$ref"
:
"x-advise://gh/data/issue.jso"
}
,
"user"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"user management"
,
"cn"
:
"用户管理"
}
,
"#subcmd_help_tip"
:
true
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username, empty is using current user"
}
}
,
"email"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"get user email"
,
"--page"
:
{
"#desc"
:
"page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"per_page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
}
,
"issue"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List all issues"
,
"--filter"
:
{
"#desc"
:
"filter(assigned,created,all)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"assigned"
,
"#cand"
:
[
"all"
,
"assigned"
,
"created"
,
"mentioned"
,
"subscribed"
,
"repos"
]
}
}
,
"--state"
:
{
"#desc"
:
"state(open,progerssing,closed,rejected)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"open"
,
"#cand"
:
[
"open"
,
"closed"
,
"all"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
,
"#cand"
:
[
"created"
,
"updated"
,
"comments"
]
}
}
,
"--labels"
:
{
"#desc"
:
"labels"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--direction"
:
{
"#desc"
:
"direction(asc、desc)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--since"
:
{
"#desc"
:
"updated date"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"per_page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
}
,
"ssh"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"user public SSH key management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List public SSH keys for user"
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"Specify username. default is current user"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create a public SSH key for user"
,
"--title"
:
{
"#desc"
:
"A descriptive name for the new key. default is key prefix"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"The public SSH key. stdin(-)"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Output a public SSH key information"
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"The public SSH key ID"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove a public SSH key for user"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The public SSH key ID"
}
}
}
,
"gpg"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"user GPG key management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List GPG keys for user"
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"Specify username. default is current user"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create a GPG key for user"
,
"--name"
:
{
"#desc"
:
"A descriptive name for the new key"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"A GPG key in ASCII-armored format. stdin(-)"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Output a GPG key information"
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
,
"#1"
:
{
"#desc"
:
"The GPG key ID"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove a GPG key for user"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The GPG key ID"
}
}
}
,
"repo"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"user repo management"
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show repo of user"
,
"--type"
:
{
"#desc"
:
"visibility"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"public"
,
"private"
]
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"owner"
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List all repos"
,
"--type"
:
{
"#desc"
:
"visibility"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"public"
,
"private"
]
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"owner"
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create user repo"
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"private"
,
"public"
]
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
".*"
:
""
}
}
}
,
"--homepage"
:
{
"#desc"
:
"homepage"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignore_template"
:
{
"#desc"
:
"The desired language or platform to apply to the .gitignore."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Actionscript"
,
"Ada"
,
""
,
"Agda"
,
"Android"
,
"Anjuta"
,
"Ansible"
,
"AppEngine"
,
"AppceleratorTitanium"
,
"ArchLinuxPackages"
,
"Archives"
,
"Autotools"
,
"Backup"
,
"Bazaar"
,
"BricxCC"
,
"C++"
,
"CFWheels"
,
"CMake"
,
"CUDA"
,
"CVS"
,
"CakePHP"
,
"Calabash"
,
"ChefCookbook"
,
"Clojure"
,
"Cloud9"
,
"CodeIgniter"
,
"CodeKit"
,
"CommonLisp"
,
"Composer"
,
"Concrete5"
,
"Coq"
,
"CraftCMS"
,
"D"
,
"DM"
,
"Dart"
,
"DartEditor"
,
"Delphi"
,
"Diff"
,
"Dreamweaver"
,
"Dropbox"
,
"Drupal"
,
"EPiServer"
,
"Eagle"
,
"Eclipse"
,
"EiffelStudio"
,
"Elisp"
,
"Elixir"
,
"Elm"
,
"Emacs"
,
"Ensime"
,
"Erlang"
,
"Espresso"
,
"ExpressionEngine"
,
"ExtJs"
,
"Fancy"
,
"Finale"
,
"FlexBuilder"
,
"Flutter"
,
"ForceDotCom"
,
"Fortran"
,
"FuelPHP"
,
"GPG"
,
"GWT"
,
"Gcov"
,
"GitBook"
,
"Go"
,
"Godot"
,
"Gradle"
,
"Grails"
,
"Haskell"
,
"IGORPro"
,
"Idris"
,
"Images"
,
"JBoss"
,
"JDeveloper"
,
"JENKINS_HOME"
,
"JEnv"
,
"Java"
,
"Jekyll"
,
"JetBrains"
,
"Joomla"
,
"Julia"
,
"KDevelop4"
,
"Kate"
,
"KiCad"
,
"Kohana"
,
"Kotlin"
,
"LabVIEW"
,
"Laravel"
,
"Lazarus"
,
"Leiningen"
,
"LemonStand"
,
"LibreOffice"
,
"Lilypond"
,
"Linux"
,
"Lithium"
,
"Lua"
,
"LyX"
,
"MATLAB"
,
"Magento"
,
"Maven"
,
"Mercurial"
,
"Mercury"
,
"MetaProgrammingSystem"
,
"Metals"
,
"MicrosoftOffice"
,
"MiniProgram"
,
"ModelSim"
,
"Momentics"
,
"MonoDevelop"
,
"Nanoc"
,
"NetBeans"
,
"Nim"
,
"Ninja"
,
"Node"
,
"NotepadPP"
,
"OCaml"
,
"Objective-C"
,
"Octave"
,
"Opa"
,
"OpenCart"
,
"OracleForms"
,
"Otto"
,
"PSoCCreator"
,
"Packer"
,
"Patch"
,
"Perl"
,
"Phalcon"
,
"PlayFramework"
,
"Plone"
,
"Prestashop"
,
"Processing"
,
"PuTTY"
,
"PureScript"
,
"Python"
,
"Qt"
,
"R"
,
"ROS"
,
"Rails"
,
"Raku"
,
"Redcar"
,
"Redis"
,
"RhodesRhomobile"
,
"Ruby"
,
"Rust"
,
"SBT"
,
"SCons"
,
"SVN"
,
"Sass"
,
"Scala"
,
"Scheme"
,
"Scrivener"
,
"Sdcc"
,
"SeamGen"
,
"SketchUp"
,
"SlickEdit"
,
"Smalltalk"
,
"Stata"
,
"Stella"
,
"SublimeText"
,
"SugarCRM"
,
"Swift"
,
"Symfony"
,
"SymphonyCMS"
,
"SynopsysVCS"
,
"Tags"
,
"TeX"
,
"Terraform"
,
"TextMate"
,
"Textpattern"
,
"TortoiseGit"
,
"TurboGears2"
,
"Typo3"
,
"Umbraco"
,
"Unity"
,
"UnrealEngine"
,
"VVVV"
,
"Vagrant"
,
"Vim"
,
"VirtualEnv"
,
"Virtuoso"
,
"VisualStudio"
,
"VisualStudioCode"
,
"Waf"
,
"WebMethods"
,
"Windows"
,
"WordPress"
,
"Xcode"
,
"XilinxISE"
,
"Xojo"
,
"Yeoman"
,
"Yii"
,
"ZendFramework"
,
"Zephir"
,
"macOS"
]
}
}
,
"--license_template"
:
{
"#desc"
:
"The license keyword of the open source license for this repository."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"MulanPSL-2.0"
,
"0BSD"
,
"AFL-3.0"
,
"AGPL-3.0"
,
""
,
"Apache-2.0"
,
"Artistic-2.0"
,
"BSD-2-Clause"
,
"BSD-3-Clause"
,
"BSD-3-Clause-Clear"
,
"BSL-1.0"
,
"CC-BY-4.0"
,
"CC-BY-SA-4.0"
,
"CC0-1.0"
,
"ECL-2.0"
,
"EPL-1.0"
,
"EPL-2.0"
,
"EUPL-1.1"
,
"EUPL-1.2"
,
"GPL-2.0"
,
"GPL-3.0"
,
"ISC"
,
"LGPL-2.1"
,
"LGPL-3.0"
,
"LPPL-1.3c"
,
"MIT"
,
"MPL-2.0"
,
"MS-PL"
,
"MS-RL"
,
"MulanPSL-1.0"
,
"MulanPubL-1.0"
,
"MulanPubL-2.0"
,
"NCSA"
,
"OFL-1.1"
,
"OSL-3.0"
,
"PostgreSQL"
,
"UPL-1.0"
,
"Unlicense"
,
"WTFPL"
,
"Zlib"
]
}
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--auto_init"
:
{
"#desc"
:
"auto init README"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Whether to delete head branches when pull requests are merged"
}
,
"--has_downloads"
:
{
"#desc"
:
"Whether downloads are enabled."
}
,
"--is_template"
:
{
"#desc"
:
"can be used to generate new repositories"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo names"
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"export csv data of all repo"
,
"--type"
:
{
"#desc"
:
"visibility"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"public"
,
"private"
]
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"owner"
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
}
}
,
"$ref"
:
"x-advise://gh/data/user.jso"
}
,
"org"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"organization management"
,
"cn"
:
"组织管理"
}
,
"#subcmd_help_tip"
:
true
,
"repo"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"org repo management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List organization repo"
,
"--type"
:
{
"#desc"
:
"Specifies the types of repositories you want returned"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
,
"forks"
,
"sources"
,
"member"
]
}
}
,
"--sort"
:
{
"#desc"
:
"The property to sort the results by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"The order to sort by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create organization repo"
,
"--org"
:
{
"#desc"
:
"organization create repo"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--access"
:
{
"#desc"
:
"Can be public or private."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"private"
,
"public"
,
"internal"
]
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the repository."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
".*"
:
""
}
}
}
,
"--homepage"
:
{
"#desc"
:
"A URL with more information about the repository."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([a-zA-Z0-9]+://)?[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[.][a-z]+(/[-A-Za-z0-9+&@#/%=?~_|]*)?"
:
""
}
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignore_template"
:
{
"#desc"
:
"Desired language or platform"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Actionscript"
,
"Ada"
,
""
,
"Agda"
,
"Android"
,
"Anjuta"
,
"Ansible"
,
"AppEngine"
,
"AppceleratorTitanium"
,
"ArchLinuxPackages"
,
"Archives"
,
"Autotools"
,
"Backup"
,
"Bazaar"
,
"BricxCC"
,
"C++"
,
"CFWheels"
,
"CMake"
,
"CUDA"
,
"CVS"
,
"CakePHP"
,
"Calabash"
,
"ChefCookbook"
,
"Clojure"
,
"Cloud9"
,
"CodeIgniter"
,
"CodeKit"
,
"CommonLisp"
,
"Composer"
,
"Concrete5"
,
"Coq"
,
"CraftCMS"
,
"D"
,
"DM"
,
"Dart"
,
"DartEditor"
,
"Delphi"
,
"Diff"
,
"Dreamweaver"
,
"Dropbox"
,
"Drupal"
,
"EPiServer"
,
"Eagle"
,
"Eclipse"
,
"EiffelStudio"
,
"Elisp"
,
"Elixir"
,
"Elm"
,
"Emacs"
,
"Ensime"
,
"Erlang"
,
"Espresso"
,
"ExpressionEngine"
,
"ExtJs"
,
"Fancy"
,
"Finale"
,
"FlexBuilder"
,
"Flutter"
,
"ForceDotCom"
,
"Fortran"
,
"FuelPHP"
,
"GPG"
,
"GWT"
,
"Gcov"
,
"GitBook"
,
"Go"
,
"Godot"
,
"Gradle"
,
"Grails"
,
"Haskell"
,
"IGORPro"
,
"Idris"
,
"Images"
,
"JBoss"
,
"JDeveloper"
,
"JENKINS_HOME"
,
"JEnv"
,
"Java"
,
"Jekyll"
,
"JetBrains"
,
"Joomla"
,
"Julia"
,
"KDevelop4"
,
"Kate"
,
"KiCad"
,
"Kohana"
,
"Kotlin"
,
"LabVIEW"
,
"Laravel"
,
"Lazarus"
,
"Leiningen"
,
"LemonStand"
,
"LibreOffice"
,
"Lilypond"
,
"Linux"
,
"Lithium"
,
"Lua"
,
"LyX"
,
"MATLAB"
,
"Magento"
,
"Maven"
,
"Mercurial"
,
"Mercury"
,
"MetaProgrammingSystem"
,
"Metals"
,
"MicrosoftOffice"
,
"MiniProgram"
,
"ModelSim"
,
"Momentics"
,
"MonoDevelop"
,
"Nanoc"
,
"NetBeans"
,
"Nim"
,
"Ninja"
,
"Node"
,
"NotepadPP"
,
"OCaml"
,
"Objective-C"
,
"Octave"
,
"Opa"
,
"OpenCart"
,
"OracleForms"
,
"Otto"
,
"PSoCCreator"
,
"Packer"
,
"Patch"
,
"Perl"
,
"Phalcon"
,
"PlayFramework"
,
"Plone"
,
"Prestashop"
,
"Processing"
,
"PuTTY"
,
"PureScript"
,
"Python"
,
"Qt"
,
"R"
,
"ROS"
,
"Rails"
,
"Raku"
,
"Redcar"
,
"Redis"
,
"RhodesRhomobile"
,
"Ruby"
,
"Rust"
,
"SBT"
,
"SCons"
,
"SVN"
,
"Sass"
,
"Scala"
,
"Scheme"
,
"Scrivener"
,
"Sdcc"
,
"SeamGen"
,
"SketchUp"
,
"SlickEdit"
,
"Smalltalk"
,
"Stata"
,
"Stella"
,
"SublimeText"
,
"SugarCRM"
,
"Swift"
,
"Symfony"
,
"SymphonyCMS"
,
"SynopsysVCS"
,
"Tags"
,
"TeX"
,
"Terraform"
,
"TextMate"
,
"Textpattern"
,
"TortoiseGit"
,
"TurboGears2"
,
"Typo3"
,
"Umbraco"
,
"Unity"
,
"UnrealEngine"
,
"VVVV"
,
"Vagrant"
,
"Vim"
,
"VirtualEnv"
,
"Virtuoso"
,
"VisualStudio"
,
"VisualStudioCode"
,
"Waf"
,
"WebMethods"
,
"Windows"
,
"WordPress"
,
"Xcode"
,
"XilinxISE"
,
"Xojo"
,
"Yeoman"
,
"Yii"
,
"ZendFramework"
,
"Zephir"
,
"macOS"
]
}
}
,
"--license_template"
:
{
"#desc"
:
"The license keyword of the open source license for this repository."
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"MulanPSL-2.0"
,
"0BSD"
,
"AFL-3.0"
,
"AGPL-3.0"
,
""
,
"Apache-2.0"
,
"Artistic-2.0"
,
"BSD-2-Clause"
,
"BSD-3-Clause"
,
"BSD-3-Clause-Clear"
,
"BSL-1.0"
,
"CC-BY-4.0"
,
"CC-BY-SA-4.0"
,
"CC0-1.0"
,
"ECL-2.0"
,
"EPL-1.0"
,
"EPL-2.0"
,
"EUPL-1.1"
,
"EUPL-1.2"
,
"GPL-2.0"
,
"GPL-3.0"
,
"ISC"
,
"LGPL-2.1"
,
"LGPL-3.0"
,
"LPPL-1.3c"
,
"MIT"
,
"MPL-2.0"
,
"MS-PL"
,
"MS-RL"
,
"MulanPSL-1.0"
,
"MulanPubL-1.0"
,
"MulanPubL-2.0"
,
"NCSA"
,
"OFL-1.1"
,
"OSL-3.0"
,
"PostgreSQL"
,
"UPL-1.0"
,
"Unlicense"
,
"WTFPL"
,
"Zlib"
]
}
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--auto_init"
:
{
"#desc"
:
"Disable auto init README"
}
,
"--is_template"
:
{
"#desc"
:
"make this repo available as a template,Default:false"
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Either to allow automatically deleting head branches when pull requests are merged,Default:false"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo names"
}
}
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show organization repo"
,
"--type"
:
{
"#desc"
:
"Specifies the types of repositories you want returned"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
,
"forks"
,
"sources"
,
"member"
]
}
}
,
"--sort"
:
{
"#desc"
:
"The property to sort the results by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"The order to sort by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Export repo csv data"
,
"--type"
:
{
"#desc"
:
"return specifies the type of repositories"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"all"
,
"private"
,
"public"
,
"forks"
,
"sources"
,
"member"
]
}
}
,
"--sort"
:
{
"#desc"
:
"The property to sort the results by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"updated"
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
}
}
,
"--direction"
:
{
"#desc"
:
"The order to sort by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
}
,
"membership|member"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"membership management"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filter members returned in the list."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"2fa_disabled"
,
"all"
]
}
}
,
"--role"
:
{
"#desc"
:
"Filter members returned by their role."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"admin"
,
"member"
,
"all"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get org membership user info"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username address"
}
}
,
"add"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Add org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"member"
,
"#cand"
:
[
"admin"
,
"member"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Update org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"admin"
,
"member"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username"
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9](,[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9])*"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"username"
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9](,[A-Za-z0-9][A-Za-z0-9_-]+[A-Za-z0-9])*"
:
""
}
}
}
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show org of user"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filter members returned in the list."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"2fa_disabled"
,
"all"
]
}
}
,
"--role"
:
{
"#desc"
:
"Filter members returned by their role."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"all"
,
"#cand"
:
[
"admin"
,
"member"
,
"all"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"get organizations list"
,
"--user"
:
{
"#desc"
:
"get target user open organization"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"issue"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List organizations issue"
,
"--org"
:
{
"#desc"
:
"organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"filter(assigned,created,all)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"assigned"
,
"#cand"
:
[
"all"
,
"assigned"
,
"created"
,
"mentioned"
,
"subscribed"
,
"repos"
]
}
}
,
"--state"
:
{
"#desc"
:
"state(open,progerssing,closed,rejected)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"open"
,
"#cand"
:
[
"open"
,
"closed"
,
"all"
]
}
}
,
"--labels"
:
{
"#desc"
:
"labels"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sort"
:
{
"#desc"
:
"What to sort results by"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
,
"#cand"
:
[
"created"
,
"updated"
,
"comments"
]
}
}
,
"--direction"
:
{
"#desc"
:
"direction(asc、desc)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--since"
:
{
"#desc"
:
"updated date"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"per_page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output origin json data"
}
}
,
"apply"
:
{
"#desc"
:
"manage org by declare configure"
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"export csv data of organizations"
,
"--user"
:
{
"#desc"
:
"get target user open organization"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
}
}
}
,
"$ref"
:
"x-advise://gh/data/org.jso"
}
,
"team"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"team management"
,
"cn"
:
"团队管理"
}
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show team of user"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"list user or org team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Get team info by name"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team name"
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"To create a team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the team"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
".*"
:
""
}
}
}
,
"--maintainers"
:
{
"#desc"
:
"List organization members username who will become team maintainers"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo|-r"
:
{
"#desc"
:
"The name of repositories to add the team to"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--privacy"
:
{
"#desc"
:
"The level of privacy this team should have"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"secret"
,
"closed"
,
""
]
}
}
,
"--parent_team_id"
:
{
"#desc"
:
"The ID of a team to set as the parent team"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team name"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"To edit a team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"Changed team name(Empty does not change)"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"The description of the team."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
".*"
:
""
}
}
}
,
"--privacy"
:
{
"#desc"
:
"The level of privacy this team should have"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"secret"
,
"closed"
,
""
]
}
}
,
"--parent_team_id"
:
{
"#desc"
:
"The ID of a team to set as the parent team"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"old team name"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"To delete a team"
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team name."
}
}
,
"child"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Lists the child teams of the team specified."
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team name."
}
}
,
"repo"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"manage org team repo"
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Lists a team's repositories visible to the authenticated user."
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"Output json data"
}
}
,
"add"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Add exist repository to team"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission|-p"
:
{
"#desc"
:
"The permission to grant the team on this repo"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The organization repo name"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Update the team's permissions to the repository"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission|-p"
:
{
"#desc"
:
"The permission to grant the team on this repo"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The organization repo name"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"check"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Checks whether a team has permission for a repository."
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"The organization repo name"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"remove org team repo"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The organization repo name"
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
}
,
"export"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"export csv data of user or org team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-]*)?"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"$ref"
:
"x-advise://gh/data/team.jso"
}
,
"secret"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"GitHub secret management"
,
"cn"
:
"GitHub secret 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List secrets"
,
"--app"
:
{
"#desc"
:
"List secrets for a specific application"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"action"
,
"#cand"
:
[
"action"
,
"codespace"
,
"dependabot"
]
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--org"
:
{
"#desc"
:
"The organization name. The name is not case sensitive"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--secret_name"
:
{
"#desc"
:
"Filter by organization secret name to list selected repos"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"set"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Create or Update secrets"
,
"--file|-f"
:
{
"#desc"
:
"Load secret names and values from a dotenv-formatted file"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--app"
:
{
"#desc"
:
"Set the application for a secret"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"action"
,
"#cand"
:
[
"action"
,
"codespace"
,
"dependabot"
]
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--visibility"
:
{
"#desc"
:
"Set visibility for an organization secret"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"private"
,
"#cand"
:
[
"all"
,
"private"
,
"selected"
]
}
}
,
"#1"
:
{
"#desc"
:
"Target secrets. <secret_name>=<secret_value>"
}
}
,
"rm"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Remove secrets"
,
"--app"
:
{
"#desc"
:
"Target the application for a secret"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"action"
,
"#cand"
:
[
"action"
,
"codespace"
,
"dependabot"
]
}
}
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The secret names"
}
}
,
"$ref"
:
"x-advise://gh/data/secret.jso"
}
,
"avatar"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"user addressbook management"
,
"cn"
:
"用户地址薄管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"List all address books for the current session record"
,
"cn"
:
"罗列当前会话记录的所有地址薄"
}
,
"--raw"
:
{
"#desc"
:
{
"en"
:
"output format as key=value"
,
"cn"
:
"输出格式为 键=值"
}
}
}
,
"add|put"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"Add or Edit the key and value in the address book"
,
"cn"
:
"添加或修改地址薄中的 key 和 value"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"address book key"
,
"cn"
:
"地址薄键"
}
}
,
"#2"
:
{
"#desc"
:
{
"en"
:
"address book value"
,
"cn"
:
"地址薄值"
}
}
,
"#synopsis"
:
[
{
"x gh avatar add|put <key> <value>"
:
null
}
]
}
,
"get"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"Get the value of the address book record by key"
,
"cn"
:
"通过 key 获取地址薄记录的 value"
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"address book key"
,
"cn"
:
"地址薄键"
}
}
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh avatar add <key> <user_path>\nx gh repo collaborator add --repo <owner_repo> <key>\n"
,
"en"
:
"Add the user <user_path> to the addressbook of the current session\nUsing <key> recorded in the address book <user_path> to add the user as a repository collaborator\n"
,
"cn"
:
"添加 user <user_path> 到当前会话的 addressbook\n使用用户地址薄 <key> 记录的 <user_path> 来添加为仓库成员\n"
}
]
}
,
"browse|b"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"Open GitHub source in the web browser"
,
"cn"
:
"使用浏览器打开 GitHub 资源"
}
,
"--repo|-r"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
,
"#synopsis"
:
"<owner/repo>"
}
,
"--no_browser|-n"
:
{
"#desc"
:
{
"en"
:
"Print destination URL instead of opening the browser"
,
"cn"
:
"不打开浏览器, 输出目标URL"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"issue or pull request number"
,
"cn"
:
"issue 或 pull request 编号"
}
}
,
"#tldr"
:
[
{
"cmd"
:
"x gh browse"
,
"en"
:
"Use browser to open the GitHub repository of the current directory"
,
"cn"
:
"使用浏览器打开当前目录的 GitHub 仓库"
}
,
{
"cmd"
:
"x gh browse --repo <owner>/<repo>"
,
"en"
:
"Use browser to open the target <owner>/<repo> GitHub repository"
,
"cn"
:
"使用浏览器打开指定 <owner>/<repo> GitHub 仓库"
}
,
{
"cmd"
:
"x gh browse --repo <owner>/<repo> <issue-number>"
,
"en"
:
"Use browser to open the < issue-number > issue of the specified < owner >/< repo > GitHub repository"
,
"cn"
:
"使用浏览器打开指定 <owner>/<repo> GitHub 仓库中编号为 <issue-number> 的issue"
}
]
}
,
"--cfg"
:
{
"#subcmd"
:
true
,
"#desc"
:
{
"en"
:
"manage configuration for gh"
,
"cn"
:
"gh 配置管理"
}
,
"#tip:note"
:
[
{
"en"
:
"Get GitHub access token: https://github.com/settings/tokens"
,
"cn"
:
"获取 GitHub 私人令牌: https://github.com/settings/tokens"
}
]
,
"#tip"
:
[
{
"en"
:
"When you need to switch between the config and profile, Need to use current to switch\n\n`x gh --cur <config|profile>=<switch_val>`\n"
,
"cn"
:
"当你需要切换使用的 config 和 profile 时候, 需要使用 `current` 进行切换\n\n`x gh --cur <config|profile>=<switch_val>`\n"
}
]
,
"#tldr"
:
[
{
"cmd"
:
"x gh --cfg token=<token>"
,
"en"
:
"Setup GitHub access token for default initialization"
,
"cn"
:
"添加私人令牌, 进行默认初始化"
}
]
,
"token="
:
{
"#desc"
:
{
"en"
:
"access token"
,
"cn"
:
"私人令牌"
}
}
,
"owner="
:
{
"#desc"
:
{
"en"
:
"owner"
,
"cn"
:
"默认所属空间地址"
}
}
,
"endpoint="
:
{
"#desc"
:
{
"en"
:
"API endpoint. [default: https://api.github.com]"
,
"cn"
:
"API 访问端点. [默认: https://api.github.com]"
}
}
,
"web_endpoint="
:
{
"#desc"
:
{
"en"
:
"website endpoint. [default: https://github.com]"
,
"cn"
:
"网站访问端点. [默认: https://github.com]"
}
}
,
"#n"
:
{
"#cand"
:
[
{
"token="
:
{
"#desc"
:
{
"en"
:
"access token"
,
"cn"
:
"私人令牌"
}
}
}
,
{
"owner="
:
{
"#desc"
:
{
"en"
:
"owner"
,
"cn"
:
"默认所属空间地址"
}
}
}
,
{
"endpoint="
:
{
"#desc"
:
{
"en"
:
"API endpoint. [default: https://api.github.com]"
,
"cn"
:
"API 访问端点. [默认: https://api.github.com]"
}
}
}
,
{
"web_endpoint="
:
{
"#desc"
:
{
"en"
:
"website endpoint. [default: https://github.com]"
,
"cn"
:
"网站访问端点. [默认: https://github.com]"
}
}
}
]
}
,
"set"
:
{
"#desc"
:
{
"en"
:
"Setting GitHub config"
,
"cn"
:
"设置 GitHub 配置"
}
,
"--config"
:
{
"#synopsis"
:
"<path>"
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
,
"#desc"
:
{
"en"
:
"config file path. empty use default"
,
"cn"
:
"配置文件路径. 空使用默认"
}
}
,
"--profile"
:
{
"#synopsis"
:
"<name>"
,
"#1"
:
null
,
"#desc"
:
{
"en"
:
"config profile name. empty use default"
,
"cn"
:
"配置信息名称. 空使用默认"
}
}
,
"token="
:
{
"#desc"
:
{
"en"
:
"access token"
,
"cn"
:
"私人令牌"
}
}
,
"owner="
:
{
"#desc"
:
{
"en"
:
"owner"
,
"cn"
:
"默认所属空间地址"
}
}
,
"endpoint="
:
{
"#desc"
:
{
"en"
:
"API endpoint. [default: https://api.github.com]"
,
"cn"
:
"API 访问端点. [默认: https://api.github.com]"
}
}
,
"web_endpoint="
:
{
"#desc"
:
{
"en"
:
"website endpoint. [default: https://github.com]"
,
"cn"
:
"网站访问端点. [默认: https://github.com]"
}
}
,
"#n"
:
{
"#cand"
:
[
{
"token="
:
{
"#desc"
:
{
"en"
:
"access token"
,
"cn"
:
"私人令牌"
}
}
}
,
{
"owner="
:
{
"#desc"
:
{
"en"
:
"owner"
,
"cn"
:
"默认所属空间地址"
}
}
}
,
{
"endpoint="
:
{
"#desc"
:
{
"en"
:
"API endpoint. [default: https://api.github.com]"
,
"cn"
:
"API 访问端点. [默认: https://api.github.com]"
}
}
}
,
{
"web_endpoint="
:
{
"#desc"
:
{
"en"
:
"website endpoint. [default: https://github.com]"
,
"cn"
:
"网站访问端点. [默认: https://github.com]"
}
}
}
]
}
}
,
"get"
:
{
"#desc"
:
{
"en"
:
"Output GitHub config"
,
"cn"
:
"输出 GitHub 配置"
}
,
"--config"
:
{
"#synopsis"
:
"<path>"
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
,
"#desc"
:
{
"en"
:
"config file path. empty use default"
,
"cn"
:
"配置文件路径. 空使用默认"
}
}
,
"--profile"
:
{
"#synopsis"
:
"<name>"
,
"#1"
:
null
,
"#desc"
:
{
"en"
:
"config profile name. empty use default"
,
"cn"
:
"配置信息名称. 空使用默认"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"configure key. empty output all"
,
"cn"
:
"配置名. 空输出所有"
}
,
"#cand"
:
[
"token"
,
"owner"
,
"endpoint"
,
"web_endpoint"
]
}
}
}
,
"--cur"
:
{
"#subcmd"
:
true
,
"#desc"
:
{
"en"
:
"current session default value management"
,
"cn"
:
"当前会话默认值管理"
}
,
"profile="
:
{
"#desc"
:
{
"en"
:
"switch config profile name in current session"
,
"cn"
:
"切换当前会话的配置信息名称"
}
}
,
"config="
:
{
"#desc"
:
{
"en"
:
"switch config file in current session"
,
"cn"
:
"切换当前会话的配置文件"
}
}
,
"repo="
:
{
"#desc"
:
{
"en"
:
"switch default repo in current session"
,
"cn"
:
"切换当前会话的默认仓库"
}
}
,
"owner="
:
{
"#desc"
:
{
"en"
:
"switch default owner in current session"
,
"cn"
:
"切换当前会话的默认代码所有者地址"
}
}
,
"clear"
:
{
"#desc"
:
{
"en"
:
"Clear all setting default in the current session and reback the default value of the config record"
,
"cn"
:
"清除当前会话设置的默认值, 恢复为配置记录默认值"
}
}
,
"ls"
:
{
"#desc"
:
{
"en"
:
"List all current value in the session"
,
"cn"
:
"罗列当前会话设置的所有默认值"
}
}
,
"#subcmd:Main"
:
[
"profile="
,
"config="
,
"repo="
,
"owner="
]
,
"#subcmd:Management"
:
[
"ls"
,
"clear"
]
,
"#n"
:
{
"#cand"
:
[
{
"profile="
:
{
"#desc"
:
{
"en"
:
"switch config profile name in current session"
,
"cn"
:
"切换当前会话的配置信息名称"
}
}
}
,
{
"repo="
:
{
"#desc"
:
{
"en"
:
"switch default repo in current session"
,
"cn"
:
"切换当前会话的默认仓库"
}
}
}
,
{
"owner="
:
{
"#desc"
:
{
"en"
:
"switch default owner in current session"
,
"cn"
:
"切换当前会话的默认代码所有者地址"
}
}
}
,
{
"config="
:
{
"#desc"
:
{
"en"
:
"switch config file in current session"
,
"cn"
:
"切换当前会话的配置文件"
}
}
}
]
}
}
,
"wf"
:
{
"#desc"
:
{
"en"
:
"shortcut for `x gh action workflow`"
,
"cn"
:
"`x gh action workflow` 的简写别名"
}
,
"$ref"
:
"x-advise://gh/data/action/workflow.jso"
}
,
"run"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"shortcut for `x gh action run`"
,
"cn"
:
"`x gh action run` 的简写别名"
}
,
"#subcmd_help_tip"
:
true
,
"--app"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#subcmd"
:
true
,
"#desc"
:
"Interactive UI show workflow runs information"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response "
}
}
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List workflow runs in a repository"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9][A-Za-z0-9_]+[A-Za-z0-9]"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
"Not pull requests are omitted from the response "
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"view|v"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"List jobs summary for a workflow run"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filters jobs by their completed_at timestamp"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"latest"
,
"#cand"
:
[
"latest"
,
"all"
]
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
,
"#regex"
:
{
"([0-9]*)"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"browse|b"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Open the action run in the browser"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"cancel"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Cancel a workflow runs"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the workflow run"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rerun"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"Re-run a workflow runs"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--fail|-f"
:
{
"#desc"
:
"Re-run failed jobs from a workflow run"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the workflow run"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"log"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"View workflow runs log"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"Provide run_id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"$ref"
:
"x-advise://gh/data/action/run.jso"
}
,
"art"
:
{
"#desc"
:
{
"en"
:
"shortcut for `x gh action artifact`"
,
"cn"
:
"`x gh action artifact` 的简写别名"
}
,
"$ref"
:
"x-advise://gh/data/action/artifact.jso"
}
,
"pr"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
{
"en"
:
"repo pull request management"
,
"cn"
:
"仓库 pull request 管理"
}
,
"#subcmd_help_tip"
:
true
,
"ls"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"list pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--base"
:
{
"#desc"
:
"Filter pulls by base branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"Filter pulls by head user or head organization and branch name"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"Filter pulls by issue state"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"open"
,
"#cand"
:
[
"open"
,
"merged"
,
"closed"
,
"all"
]
}
}
,
"--sort"
:
{
"#desc"
:
"List sort way"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"created"
,
"#cand"
:
[
"created"
,
"updated"
,
"popularity"
,
"long-running"
]
}
}
,
"--direction"
:
{
"#desc"
:
"List direction"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"desc"
,
"#cand"
:
[
"desc"
,
"asc"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"pull request info"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"create pull request"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue"
:
{
"#desc"
:
"association issue"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--draft"
:
{
"#desc"
:
"is draft"
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
"Not allow maintainers modify the pull request"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"update pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--no_maintainer_modify"
:
{
"#desc"
:
"Not allow maintainers modify the pull request."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#name"
:
{
"gh"
:
null
}
,
"#desc"
:
"merge pull requests"
,
"--repo|-r"
:
{
"#desc"
:
"<owner_path>/<repo_path>"
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/.]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method(squash,merge)"
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"merge"
,
"#cand"
:
[
"squash"
,
"merge"
,
"rebase"
]
}
}
,
"--commit_title"
:
{
"#desc"
:
"Title for the automatic commit message."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--commit_message"
:
{
"#desc"
:
"Extra detail to append to automatic commit message."
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"$ref"
:
"x-advise://gh/data/pr.jso"
}
,
"cl"
:
{
"#desc"
:
{
"en"
:
"shortcut for `x gh repo clone`"
,
"cn"
:
"`x gh repo clone` 的简写别名"
}
,
"$ref"
:
"x-advise://git/data/clone.jso"
,
"#1"
:
{
"#desc"
:
{
"en"
:
"<owner_path>/<repo_path>"
,
"cn"
:
"<所属空间地址>/<仓库地址>"
}
}
}
,
"#useparam"
:
true
,
"#tip"
:
[
{
"en"
:
"Run command `x gh --cfg token=<token>` add access token. The token will be save local.\nGet GitHub access token: https://github.com/settings/tokens\n"
,
"cn"
:
"运行命令 `x gh --cfg token=<token>` 添加私人令牌, 私人令牌将存放于本地保存\nGitHub 私人令牌获取: https://github.com/settings/tokens\n"
}
]
,
"#tldr"
:
[
{
"cmd"
:
"x gh user info"
,
"en"
:
"Get current user information"
,
"cn"
:
"获取当前用户信息"
}
,
{
"cmd"
:
"x gh repo app"
,
"en"
:
"Interactive UI show current user repositories"
,
"cn"
:
"开启交互式表格查看当前用户仓库"
}
]
,
"--config"
:
{
"#synopsis"
:
"<path>"
,
"#1"
:
{
"#exec"
:
"___x_cmd_advise__file"
}
,
"#desc"
:
{
"en"
:
"The path of the configure file used by the current command"
,
"cn"
:
"当前命令运行所使用配置文件路径"
}
}
,
"--profile"
:
{
"#synopsis"
:
"<name>"
,
"#1"
:
null
,
"#desc"
:
{
"en"
:
"The name of the configure profile used by the current command"
,
"cn"
:
"当前命令运行所使用配置信息名称"
}
}
,
"#subcmd:Main"
:
[
"repo"
,
"issue"
,
"pr"
,
"action"
,
"package"
,
"secret"
,
"user"
,
"org"
,
"team"
,
"browse|b"
]
,
"#subcmd:Shortcut"
:
[
"wf"
,
"run"
,
"art"
,
"cl"
]
,
"#subcmd:Minor"
:
[
"avatar"
,
"--cur"
,
"--cfg"
]
}

