# shellcheck    shell=dash


# # Rely on ll or ls
# # Control the lsversion awk for better showing
# ___x_cmd_pkg_version(){
#     ___x_cmd_pkg___all_info "$@" | awk \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/core.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
#         -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/pkg.lsversion.awk"
# }

# Rely on ll or ls
# Control the lsversion awk for better showing
# ___x_cmd_pkg_version(){
#     local pkg_name="${1:?Provide pkg name}"
#     local osarch="${2:?osarch as filter}"
#     ___x_cmd_pkg___all_info "${pkg_name}" | awk \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/core.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
#         -f "awk/util.awk" \
#         -f "awk/pkg.lsversion.awk"
# }

___x_cmd_pkg___which_p7zip()(
    ___x_cmd_mkdirp "$___X_CMD_PKG_RAW_PATH"
    local file_path="$___X_CMD_PKG_BASE_PATH/$___X_CMD_PKG_VERSION.tar.xz"
    if ! ___x_cmd_httpget_gitx x-cmd pkg main "dist/$___X_CMD_PKG_VERSION.tar.xz" "$file_path" "${1:-86400}"; then # 1-day
        if [ ! -f "$file_path" ]; then
            pkg:error "Unaviable $___X_CMD_PKG_VERSION.tar.xz. Unable to fetch $___X_CMD_PKG_VERSION.tar.xz."
            return 1
        fi
    fi
    if [ "$___X_CMD_HTTPGET_AGE" = 0 ]; then
        ___x_cmd_mkdirp "$___X_CMD_PKG_RAW_PATH"
        pkg:debug "Deflate the $___X_CMD_PKG_VERSION.tar.xz"
        if ! ( x cd "${file_path%/*}" && x cp "$___X_CMD_PKG_VERSION.tar.xz" raw/"$___X_CMD_PKG_VERSION.tar.xz" && x cd raw && x uz "$___X_CMD_PKG_VERSION.tar.xz" 1>/dev/null && x rmrf "$___X_CMD_PKG_VERSION.tar.xz" ); then
            pkg:error "Deflation failure."
            x rmrf "$file_path"
        fi
    fi
)


___x_cmd_pkg_update(){
    case "$1" in
        -h|--help)
            ___x_cmd_pkg_help update #"$@"
            return 1
            ;;
    esac
    pkg:info "Update the $___X_CMD_PKG_VERSION.tar.xz"
    x rmrf "$___X_CMD_PKG_BASE_PATH/$___X_CMD_PKG_VERSION.tar.xz" && x rmrf "$___X_CMD_PKG_RAW_PATH"
    ___x_cmd_pkg___which_p7zip - || return # Force Update
}

___x_cmd_pkg_help(){
    x help -m pkg "$@"  >&2
    return 1
}