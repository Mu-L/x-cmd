# shellcheck    shell=dash disable=SC2034,SC1090
___x_cmd_pkg_update___inner()(
    local file_path="$___X_CMD_PKG_CACHE_PATH/${___X_CMD_PKG_VERSION}.tar.gz"
    local file_hash_path="$___X_CMD_PKG_CACHE_PATH/${___X_CMD_PKG_VERSION}_hash.txt"
    local tmp_file_path="$___X_CMD_PKG_CACHE_PATH/${___X_CMD_PKG_VERSION}.tar.gz.tmp"
    local tmp_file_hash_path="$___X_CMD_PKG_CACHE_PATH/${___X_CMD_PKG_VERSION}_hash.txt.tmp"
    local x_url_tar=
    local x_url_hash=

    if [ -n "$___X_CMD_PKG_DEV_MOD" ]; then
        pkg:warn "update inner release ${___X_CMD_PKG_VERSION}.tar.gz; ___X_CMD_PKG_DEV_MOD=1"
        x_url_tar="https://github.com/x-cmd-pkg/release/raw/main/dist/${___X_CMD_PKG_VERSION}.tar.gz"
        x_url_hash="https://raw.githubusercontent.com/x-cmd-pkg/release/main/dist/${___X_CMD_PKG_VERSION}_hash.txt"
    elif [ "$___X_CMD_WEBSRC_REGION" != cn ]; then
        x_url_tar="https://github.com/x-cmd/pkg/raw/main/dist/${___X_CMD_PKG_VERSION}.tar.gz"
        x_url_hash="https://raw.githubusercontent.com/x-cmd/pkg/main/dist/${___X_CMD_PKG_VERSION}_hash.txt"
    else
        x_url_tar="https://oss.resource.x-cmd.com/x-cmd/pkg/dist/${___X_CMD_PKG_VERSION}.tar.gz"
        x_url_hash="https://oss.resource.x-cmd.com/x-cmd/pkg/dist/${___X_CMD_PKG_VERSION}_hash.txt"
    fi


    pkg:info --url "$x_url_tar" "Download ${___X_CMD_PKG_VERSION}.tar.gz"
    x curl -L -sS --speed-time 5 --speed-limit 100 "$x_url_tar" --output "$tmp_file_path" || {
        pkg:warn "Please check your network status; Or use 'x websrc set cn' and open a new session to run 'x pkg update'"
        return 1
    }

    pkg:info --url "$x_url_hash" "Download ${___X_CMD_PKG_VERSION}_hash.txt"
    x curl -L -sS --speed-time 5 --speed-limit 100 "$x_url_hash" --output "$tmp_file_hash_path" || {
        pkg:error "Download ${___X_CMD_PKG_VERSION}_hash.txt failed"
        return 1
    }

    local hash_value
    local file_hash
    hash_value="$( < "$tmp_file_hash_path" ___x_cmd_awk___inner '{print $1}')"
    file_hash="$(x sha512 "$tmp_file_path")"


    [ "$hash_value" = "$file_hash" ] || {
        pkg:error "File corrupted; Please check your network status; Or use 'x websrc set cn' and open a new session to run 'x pkg update' "
        x rmrf "$tmp_file_path" "$tmp_file_hash_path"
        return 1
    }

    ! [ -d "$___X_CMD_PKG_METADATA_PATH/tmp" ] || {
        x rmrf "$___X_CMD_PKG_CACHE_PATH/tmp"
        x mv "$___X_CMD_PKG_METADATA_PATH/tmp" "$___X_CMD_PKG_CACHE_PATH"
    }

    x rmrf "$file_path" "$file_hash_path"
    x mv "$tmp_file_path" "$file_path"
    x mv "$tmp_file_hash_path" "$file_hash_path"

    x rmrf "$___X_CMD_PKG_METADATA_PATH"
    x mkdirp "$___X_CMD_PKG_METADATA_PATH"
    pkg:debug --tgt "$___X_CMD_PKG_METADATA_PATH" "Deflate the $file_path"
    ( ___x_cmd_cmds_cd "$___X_CMD_PKG_METADATA_PATH" && ___X_CMD_ZUZ_QUIET=1 x uz "$file_path" ) || {
        pkg:error "Deflation $file_path failure."
        return 1
    }

    ! [ -d "$___X_CMD_PKG_CACHE_PATH/tmp" ] || x mv "$___X_CMD_PKG_CACHE_PATH/tmp" "$___X_CMD_PKG_METADATA_PATH"
    local timefile="$___X_CMD_PKG_METADATA_PATH/.x-cmd/timefile"
    x ensurefp "$timefile"
    printf "%s\n" "" > "$timefile"
)

# 86400
___x_cmd_pkg_update___check(){
    [ -f "$___X_CMD_PKG_METADATA_PATH/.x-cmd/timefile" ] || x fslock run pkg_update_check ___x_cmd_pkg_update___check_inner
}

___x_cmd_pkg_update___check_inner(){
    [ -f "$___X_CMD_PKG_METADATA_PATH/.x-cmd/timefile" ] || ___x_cmd_pkg_update___inner
}

___x_cmd_pkg_update(){
    local X_help_cmd='x help -m pkg update'; help:arg:parse
    ___x_cmd_pkg_update___inner || {
        pkg:error "Update the $___X_CMD_PKG_VERSION.tar.gz failed"
        return 1 # Force Update
    }
    pkg:info "Update the $___X_CMD_PKG_VERSION.tar.gz success"
}
