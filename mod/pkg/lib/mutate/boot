# shellcheck    shell=dash disable=SC2034,SC1090

___x_cmd_pkg_boot(){
    local X_help_cmd='___x_cmd_pkg_help boot';   help:arg-null:parse
    ___x_cmd_pkg_boot___inner boot "$@"
}

___x_cmd_pkg_unboot(){
    local X_help_cmd='___x_cmd_pkg_help unboot';   help:arg-null:parse
    ___x_cmd_pkg_boot___inner unboot "$@"
}

___x_cmd_pkg_boot___inner(){
    local op="${1:-boot}"; shift

    local name="${1}";  [ -n "$name" ] || M='Provide a package name' N=pkg log:ret:1
    local version="${2:-$(___x_cmd_pkg_default_version "$name")}"
    local sphere_version=
    ___x_cmd_pkg___attr "$name" "$version" "" "sphere_version"
    sphere_version="${sphere_version:-"X"}"
    local ___X_CMD_PKG___META_TGT="${3:-"$___X_CMD_PKG_ROOT_SPHERE/$sphere_version/populate/$name/$version"}"

    local script_path
    if ! script_path="$(___x_cmd_pkg___get_script_path "$name" "$version" "" "$op")"; then
        return 1
    fi
    [ -n "$script_path" ] || return 0
    pkg:debug "Running $name $version boot.sh"

    local ___X_CMD_PKG___META_NAME="$name"
    local ___X_CMD_PKG___META_VERSION="$version"
    . "$script_path" || N=pkg M="Source $script_path failed" log:ret:1
    [ -n "$X_PKG_BOOT_NOTIP" ] || pkg:warn "Other sessions need to ${op} \`x pkg ${op} ${name} ${version}\`"
}

