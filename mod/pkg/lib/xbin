# shellcheck    shell=sh            disable=SC3043,2155      # xrc

# Section: xbin

___x_cmd_pkg_xbin(){
    x:trace pkg/xbin
    case "$1" in
        init)       shift; ___x_cmd_pkg_xbin_init "$@" ;;
        path)       shift; ___x_cmd_pkg_xbin_path "$@" ;;
        -h|--help)  shift; ___x_cmd_pkg_help xbin "$@" ;return 1 ;;
        *)          return 1 ;;
    esac
}

___x_cmd_pkg_xbin_path(){
    local bin_mod_name="${1:?Provide bin mod name}"
    local pkg_name="$(___x_cmd_pkg___get_binmod_name "$bin_mod_name" )"
    [ -n "$pkg_name" ] || return 1
    local version="${2:-$(___x_cmd_pkg_default_version "${pkg_name}")}"
    local osarch="${3:-$(___x_cmd_pkg_osarch)}"
    local tgt="${4:-"$___X_CMD_PKG_POPULATE_PATH/$pkg_name/$version"}"
    [ -n "$version" ] || return

    pkg:debug "{ INSTALL_PATH: $tgt }"

    ___x_cmd_pkg___all_info --non-version "$pkg_name" "$version" "$osarch"  | awk \
        -v INSTALL_PATH="$tgt" \
        -v BIN_MOD_NAME="${bin_mod_name:-$pkg_name}" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/core.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/j/json.awk"   \
        -f "$___X_CMD_ROOT_MOD/awk/lib/j/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.xbin.awk"
}

___x_cmd_pkg_xbin_init(){
    local bin_mod_name="${1:?Provide bin mod name}"
    ___x_cmd_pkg___which_p7zip 86400 || return

    local pkg_name="$(___x_cmd_pkg___get_binmod_name "$bin_mod_name" )"
    [ -n "$pkg_name" ] || return 1
    local version="${2:-$(___x_cmd_pkg_default_version "${pkg_name}")}"
    [ -n "$version" ] || return
    local bin_path
    local install_path="$___X_CMD_PKG_POPULATE_PATH/$pkg_name/$version"
    bin_path="$(___x_cmd_pkg_xbin_path "$bin_mod_name" "$version")"
    pkg:debug --bin_mod_name "$bin_mod_name" --package "$pkg_name" --version "$version" --binpath "$bin_path" xbin_init

    [ -f "$bin_path" ] || {
        [ ! -d "$install_path" ] || x rmrf "$install_path"
        x pkg download "$pkg_name" "$version" || {
            pkg:error Download "$pkg_name" "$version" failure
            return 1
        }
        x pkg populate "$pkg_name" "$version" || {
            pkg:error populate "$pkg_name" "$version" failure
            return 1
        }
    }
    if [ ! -x "$bin_path" ]; then
        if ! chmod +x "$bin_path"; then
            pkg:error "chmod: $bin_path - Operation not permitted "
            return 1
        fi
    fi

    local bin_mod_func_name="${3:-___x_cmd_${bin_mod_name}}"
    local bin_mod_path_name="${4}"
    eval "
        $bin_mod_func_name(){
            $bin_path \"\$@\"
        }
        if [ -n \"\$bin_mod_path_name\" ]; then
            $bin_mod_path_name=\"$bin_path\"
        fi
    "
}

___x_cmd_pkg___get_binmod_name(){
    local bin_mod_name="${1:?Provide bin mod name}"
    if [ -z "$___X_CMD_PKG_BINMOD_MAP" ]; then
        ___X_CMD_PKG_BINMOD_MAP="$(cat "$___X_CMD_PKG_RAW_PATH/binmod.txt")"
    fi

    local pkg_name="${___X_CMD_PKG_BINMOD_MAP#*:"$bin_mod_name":}"
    if [ "$pkg_name" = "${___X_CMD_PKG_BINMOD_MAP}" ]; then
        pkg:error "Not found - ${bin_mod_name}"
        return 1
    fi

    pkg_name="${pkg_name%%
*}"

    printf "%s" "$pkg_name"
}

### EndSection
