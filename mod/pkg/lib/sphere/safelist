# shellcheck shell=dash
# safelist is a diretory
# 1. to avoid conflicts
# 2. suitable performance for all

# ___x_cmd_pkg_safelist --sphere X add <pkg name>_<version>
___x_cmd_pkg_safelist(){
    local op="$1"; shift
    sphere:parse:args

    case "$op" in
        add|rm) ___x_cmd_pkg_sphere_safelist --sphere "$sphere_name" --sphereroot "$___X_CMD_PKG_ROOT_SPHERE" "$op" "${name}_$version" ;;
        *)      N=pkg M="safelist no such subcmd '$op'" log:ret:1 ;;
    esac
}


# ___x_cmd_pkg_sphere_safelist --sphere X add [<pkg>_<vesion>...]
___x_cmd_pkg_sphere_safelist(){
    sphere:parse:option
    sphere_name="${sphere_name:-"X"}"

    local sphere_safelist_path="$___X_CMD_PKG_ROOT_SPHERE/$sphere_name/.x-cmd/safelist"
    local op="$1";  shift

    # pkg:debug --sphere_safelist_path "$sphere_safelist_path" --op "$op" --pkg "$*"  safelist
    case "$op" in
        exist|ls)   ___x_cmd_pkg_sphere_safelist_"$op" "$@"             ;;
        rm|add)     x fslock run "pkg_sphere_safelist_${sphere_name}" \
                        ___x_cmd_pkg_sphere_safelist_"$op" "$@"         ;;
        *)          N=pkg M="sphere safelist no such option '$op'" log:ret:1
                    ;;
    esac
}


___x_cmd_pkg_sphere_safelist_ls(){
    x fsiter "$sphere_safelist_path"
}

___x_cmd_pkg_sphere_safelist_rm(){
    [ -d "$sphere_safelist_path" ] || return 0
    while [ $# -gt 0 ]; do
        x rmrf "$sphere_safelist_path/$1"
        shift
    done
}

___x_cmd_pkg_sphere_safelist_add(){
    x mkdirp "$sphere_safelist_path"
    while [ $# -gt 0 ]; do
        printf "" > "$sphere_safelist_path/$1"
        shift
    done
}

___x_cmd_pkg_sphere_safelist_exist(){
    while [ $# -gt 0 ]; do
        [ -f "$sphere_safelist_path/$1" ] || return 1
        shift
    done
}
