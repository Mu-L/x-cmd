# shellcheck shell=dash disable=2034

___x_cmd_pkg_boot(){
    local X_help_cmd='___x_cmd_pkg_help boot';   help:arg-null:parse
    sphere:parse:args

    ___x_cmd_pkg_boot___inner boot "$name" "$version" "$osarch" "$sphere_name" "$___X_CMD_PKG_ROOT_SPHERE"
    local exitcode="$?"
    case "$exitcode" in
        0)      pkg:warn "Other sessions need to boot \`x pkg boot ${name} ${version}\`" ;;
        127)    return 0 ;;
        *)      return "$exitcode" ;;
    esac
}

___x_cmd_pkg_unboot(){
    local X_help_cmd='___x_cmd_pkg_help unboot';   help:arg-null:parse
    sphere:parse:args

    ___x_cmd_pkg_boot___inner unboot "$name" "$version" "$osarch" "$sphere_name" "$___X_CMD_PKG_ROOT_SPHERE"
    local exitcode="$?"
    case "$exitcode" in
        0)      pkg:warn "Other sessions need to unboot \`x pkg unboot ${name} ${version}\`" ;;
        127)    return 0 ;;
        *)      return "$exitcode" ;;
    esac
}

___x_cmd_pkg_boot___inner(){
    local op="${1:-boot}"; shift

    sphere:parse:args
    ___x_cmd_pkg_sphere_boot --sphere "$sphere_name" --sphereroot "$___X_CMD_PKG_ROOT_SPHERE" "$op" "$name" "$version"
}



# ___x_cmd_pkg_sphere_boot --sphere X boot <pkg name> <version>
___x_cmd_pkg_sphere_boot(){
    sphere:parse:option
    sphere_name="${sphere_name:-"X"}"

    local op="$1"; shift
    case "$op" in
        boot|unboot)    ___x_cmd_pkg_sphere_boot___inner "$op" "$@" ;;
        *)              N=pkg M="sphere boot no such option '$op'" log:ret:1
                        ;;
    esac
}

___x_cmd_pkg_sphere_boot___inner(){
    local op="$1";
    local name="$2";        [ -n "$name" ] || N=pkg M="Provide a package name" log:ret:1
    local version="$3";     [ -n "$version" ] || N=pkg M="Not found $name version" log:ret:1
    shift 3


    local script_path
    script_path="$(___x_cmd_pkg___get_script_path "$name" "$version" "" "$op")" || return 1
    [ -n "$script_path" ] || {
        pkg:debug "Not found ${name} ${version} ${op}.sh"
        return 127
    }

    pkg:info --script_path "$script_path" "Loading $name $version boot script file"

    ___x_cmd_pkg_osarch_
    local x_treename=; ___x_cmd_pkg_treename_ "$name" "$version" "$___X_CMD_PKG_OSARCH" || return
    local ___X_CMD_PKG___META_OS="${___X_CMD_PKG_OSARCH%%/*}"
    local ___X_CMD_PKG___META_ARCH="${___X_CMD_PKG_OSARCH#*/}"
    local ___X_CMD_PKG___META_TGT="$___X_CMD_PKG_ROOT_SPHERE/$sphere_name/$x_treename/$name/$version"
    local ___X_CMD_PKG___META_NAME="$name"
    local ___X_CMD_PKG___META_VERSION="$version"
    . "$script_path" || N=pkg M="Source $script_path failed" log:ret:1
}
