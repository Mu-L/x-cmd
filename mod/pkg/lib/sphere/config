# shellcheck shell=dash

___x_cmd_pkg_config(){
    local op="$1"; shift
    local sphere_name="${1:-X}"
    local name="$2";
    local version="$3";

    local file="$___X_CMD_PKG_ROOT_SPHERE/$sphere_name/.x-cmd/config"
    case "$op" in
        ls|load)    ___x_cmd_pkg_config___"$op" "$file" ;;
        rm|add)     x fslock run "pkg_sphere_config_${sphere_name}" \
                        ___x_cmd_pkg_config___"$op" "$file" "$name" "$version" ;;
    esac
}

___x_cmd_pkg_config___ls(){
    local file="$1"
    [ -f "$file" ] || return 0
    < "$file" command awk -v FS="=" '($0 != ""){ print $1 "=" $2; }'
}

___x_cmd_pkg_config___rm(){
    local file="$1"
    local name="$2"
    [ -f "$file" ] || return 0
    local x_=;  x rat_ "$file"
    printf "%s\n" "$x_" | command awk -v FS="=" -v name="$name" '
        (name == $1){ next; }
        ($0 != ""){ print $0; }
    ' > "${file}"
}

___x_cmd_pkg_config___add(){
    local file="$1"
    local name="$2"
    local version="$3"
    local boot_file=
    ___x_cmd_pkg_osarch_

    boot_file="$(___x_cmd_pkg___get_script_path "$name" "$version" "$___X_CMD_PKG_OSARCH" boot)" || return 1
    local x_treename=; ___x_cmd_pkg_treename_ "$name" "$version" "$___X_CMD_PKG_OSARCH" || return
    if [ ! -f "$file" ]; then
        x ensurefp "$file"
        printf "%s\n" "${name}=${version}=${boot_file}=${x_treename}" > "$file"
    else
        local x_=;  x rat_ "$file"
        printf "%s\n" "$x_" | command awk -v FS="=" \
            -v name="$name" \
            -v version="$version" \
            -v boot_file="$boot_file" \
            -v treename="$x_treename" '
            (name == $1){ next; }
            ($0 != ""){ print $0; }
            END{ print name "=" version "=" treename "=" boot_file; }
        ' > "${file}"
    fi
}

___x_cmd_pkg_config___load(){
    local file="$1"
    [ -f "$file" ] || return 0

    ___x_cmd_pkg_osarch_
    local ___X_CMD_PKG___META_OS="${___X_CMD_PKG_OSARCH%%/*}"
    local ___X_CMD_PKG___META_ARCH="${___X_CMD_PKG_OSARCH#*/}"
    local l=; local boot_file; local treename=
    local ___X_CMD_PKG___META_NAME=; local ___X_CMD_PKG___META_VERSION=; local ___X_CMD_PKG___META_TGT=
    while read -r l; do
        [ -n "$l" ] || continue
        boot_file="${l##*=}"
        l="${l%"=${boot_file}"}"
        treename="${l##*=}"
        l="${l%"=${treename}"}"

        ___X_CMD_PKG___META_NAME="${l%%=*}"
        ___X_CMD_PKG___META_VERSION="${l#*=}"

        [ -f "$boot_file" ] || {
            pkg:debug "Not found $___X_CMD_PKG___META_NAME $___X_CMD_PKG___META_VERSION boot script file"
            continue
        }

        ___X_CMD_PKG___META_TGT="$___X_CMD_PKG_ROOT_SPHERE/$sphere_name/$treename/$___X_CMD_PKG___META_NAME/$___X_CMD_PKG___META_VERSION"

        pkg:debug "Loading $___X_CMD_PKG___META_NAME $___X_CMD_PKG___META_VERSION boot script file => $boot_file"
        . "$boot_file" || N=pkg M="Source boot script file failed" log:ret:1
    done < "$file"
}
