# shellcheck    shell=dash disable=SC2010
___x_cmd_pkg__smoke() (
    local candidate; candidate="$1"
    local version="${2:-$(___x_cmd_pkg_default_version "$candidate")}"

    pkg:info "Smoke testing candidate=$candidate version=$version"

    pkg:info "Step1 => Checking the active version of $candidate"
    if ! x env try "$candidate"="$version"; then
        pkg:error "Smoke FAIL. Failed to set $candidate=$version"
        return 11
    fi

    pkg:info "Step2 => Checking the install path of $candidate $version"
    local bin_path; local bin_name; local cur
    ___x_cmd_pkg___list_all_bin_path "$candidate" "$version" | while read -r bin_path; do
        bin_name="${bin_path##*/}"
        unset -f "$bin_name"
        unalias "$bin_name" 2>/dev/null || true
        cur="$(command -v "$bin_name")"
        if [ -z "$bin_path" ]; then
            pkg:error "Smoke FAIL. $candidate $version is not installed, command -v $bin_name returned empty"
            return 12
        fi

        local expected_prefix="$___X_CMD_PKG_POPULATE_PATH/$candidate"
        if [  "${cur#"$expected_prefix"}" = "$cur" ] || ! ( printf "%s" "$cur" | grep -q "$version") ; then
            pkg:error "Smoke FAIL. $candidate $version is not installed in $expected_prefix or $cur does not contain $version"
            return 12
        fi
    done

    pkg:info "Step3 => Checking the smoke of $candidate $version"
    local smokepath; smokepath=$(x ls "$___X_CMD_PKG_METADATA_PATH"/*"/$candidate/.x-cmd/smoke.sh") 2>/dev/null
    if ! [ -f "$smokepath" ] || ! . "$smokepath"; then
        pkg:error "Smoke FAIL. Smoke file not found or returned exit code candidate=$candidate version=$version smokepath=$smokepath"
        ! [ -f "$smokepath" ] || {
            cat "$smokepath"; echo
            pkg:error "Smoke FAIL. smoke file end"
        }
        return 13
    fi

    pkg:info "Smoke PASS. $candidate $version "
) >&2

#TODO: remove tobe_remove
