# shellcheck    shell=dash
xrc websrc
___x_cmd_pkg__ls_urls(){
    local name;  local net; local url; local version
    name="${1:?Provide pkg name}"
    version="${2}"
    net="${3:-${internet:-$___X_CMD_WEBSRC_REGION}}"

    for osarch in linux/x64 linux/arm64 darwin/x64 darwin/arm64 win/x64; do
        if [ -n "$version" ]; then
            url=$(___x_cmd_pkg___list "$name" "$version" "$osarch" "url.$net"  2>/dev/null)
            printf "%s\n" $url
        else
            x pkg ls all "$name" |  while read -r version; do
                url=$(___x_cmd_pkg___list "$name" "$all_version" "$osarch" "url.$net"  )
                if [ -z $url ]; then
                    printf "%s\n" "-"
                else
                    printf "%s\n" $url
                fi
            done
        fi
    done
}

___x_cmd_pkg__head_test_urls(){
    local name;  local net
    name="${1:?Provide pkg name}"
    net="${2:-${internet:-$___X_CMD_WEBSRC_REGION}}"
    ___x_cmd_pkg__ls_urls "$@" |  while read -r url; do
        if [ -n "$url"  ]; then
            if eval "$(curl -sSI --max-time 10 -o /dev/null -w "http_code=%{http_code} ; time_total=%{time_total}" "$url" )" 2>/dev/null ; then
                time_total=$(awk 'BEGIN{printf("%d\n",'"$time_total"'*1000)}')
                printf "%s=%s; " "url" "$url"
                printf "  %s=%s;  " "http_code" "$http_code"
                printf "  %s=%sms;\n" "time_total" "$time_total"
            else
                pkg:error "error occurred with curl"
            fi

        fi
    done
}