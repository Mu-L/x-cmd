# shellcheck shell=sh disable=SC3043

___x_cmd_hub_account_login(){
    if [ -n "$(___x_cmd_hub_cfg --get token)" ]; then
        if ! x ui yesno "You're already logged. Do you want to re-authenticate?" ; then
            hub:info "Cancelled"
            return 0
        fi
        ___x_cmd_hub_account_logout
    fi

    local op="$1"
    local _SELECT
    case "$op" in
        *@*)                    ___x_cmd_hub_account_login_email_witharg "$@" ;;
        wx|weixin)              ___x_cmd_hub_account_login_weixin_qr     "$@" ;;
        email)                  ___x_cmd_hub_account_login_email         "$@" ;;
        tg|telegram)            ___x_cmd_hub_account_login_telegram_qr        ;;
        "")
                ___x_cmd_ui_select "_SELECT" \
                    "Login Methods:" \
                        "Open Browser to x-cmd.com, you can login via GitHub/Gitee/Weixin" \
                        "Login With Weixin QR" \
                        "Login With Email Verification"

                        #TODO: unstable
                        # "Login With Telegram" \
                        # "Login With OneTime Password"    # SMS, Telegram, Email, Weixin

                case "$_SELECT" in
                    1)          ___x_cmd_hub_account_login_official_site "$@" ;;
                    2)          ___x_cmd_hub_account_login_weixin_qr     "$@" ;;
                    3)          ___x_cmd_hub_account_login_email         "$@" ;;
                    4)          ___x_cmd_hub_account_login_telegram      "$@" ;;
                    *)          ;;
                esac
                ;;
        *)  ___x_cmd_hub___help account login ;;
    esac
}

# TODO: move to website login
___x_cmd_hub_account_login_telegram(){
    local ticket
    ticket="$(___x_cmd_hub___util_token_generate)"

    printf "Open the url in browser to login: https://hub.x-cmd.com/s/tl/%s\nthen press [Enter] to continue: " "${ticket}"
    ( trap - INT; read -r _  ) || return 1

    ___x_cmd_hub_account_verify "$ticket"
}

___x_cmd_hub_account_login_weixin_qr(){
    local ticket
    ticket="$(___x_cmd_hub___util_token_generate)"

    ___x_cmd_hub_qrcode "$(___x_cmd_hub_weixin_login_url "${ticket}")"
    printf "Please scan the QR code above, then press [Enter] to continue: "
    ( trap - INT; read -r _  ) || return 1

    ___x_cmd_hub_account_verify "$ticket"
}

___x_cmd_hub_account_login_official_site(){

    local ticket
    ticket="$(___x_cmd_hub___util_token_generate)"

    local url; url="https://hub.x-cmd.com/login?ticket=${ticket}"
    hub:debug "Open url: $url"

    # TODO: use tui
    local res
    if res=$(x open "$url" 2>&1) ; then
        printf "Please login to hub.x-cmd.com, then press [Enter] to continue: " >&2
        ( trap - INT; read -r _  ) || return 1
    else
        hub:warn "Failed to open url use browser ($res)"
        printf "Open the url in browser to login: %s\nthen press [Enter] to continue: " "$url" >&2
        ( trap - INT; read -r _  ) || return 1
    fi

    ___x_cmd_hub_account_verify "$ticket"
}

___x_cmd_hub_account_login_email_witharg(){
    local email="${1:?Provide email}"
    local ticket
    ticket="$(___x_cmd_hub___util_token_generate)"

    local res
    if ! res="$(NO_AUTH=1 ___x_cmd_hub___util_curl post /api/v0/account/email/login -- "tokenToActivate=$ticket" "email=$email")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to login with email $email:"
        return 1
    fi
    hub:debug "Login with email: $email, res: $res"
    printf "%s" "Please check your email $email to approve, then press [Enter] to continue: " >&2
    ( trap - INT; read -r _  ) || return 1

    ___x_cmd_hub_account_verify "$ticket"
}

___x_cmd_hub_account_login_email(){
    local email="${1}"
    if [ -z "$email" ]; then
        printf "%s" "Email: "
        read -r email
    fi
    ___x_cmd_hub_account_login_email_witharg "$email"
}
