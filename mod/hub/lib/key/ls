# shellcheck shell=dash

___x_cmd_hub_key_ls(){
    while [ $# -gt 0 ]; do
        case "$1" in
            --help|-h|"")        ___x_cmd_hub___help key ls ; return 1 ;;
            --remote) shift ;    ___x_cmd_hub_key_ls_remote "$@" ; return ;;
            *) break ;;
        esac
    done

    local key_path; key_path="$___X_CMD_HUB_KEY_PATH/$(___x_cmd_hub_cur get userid)"
    if [ ! -d "$key_path" ]; then
        hub:warn "No key found. Use 'x hub key gen' or 'x hub key load' to generate or load a key"
        return 1
    fi

    local name; local type
    # demo_private.pem demo_public.pem <name>_<type>.pem
    # x csv header --add     Type   Name  CreatedAt
    find "$key_path" | grep '\.pem$' | while read -r file; do
        [ -f "$file" ] || continue
        name="${file##*/}"
        name="${name%.*}"
        type="${name##*_}"
        name="${name%_*}"
        printf "%s\n" "$type,$name,$(date -r "$file" "+%Y-%m-%d %H:%M:%S")"
    done | \
        x csv header --add Type Name CreatedAt | \
        ___x_cmd_hub___util_st_tab - 10 100%
}

___x_cmd_hub_key_ls_remote(){
    local res; if ! res="$(___x_cmd_hub___util_curl get /api/v0/key)" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to get key list:"
        return 1
    fi

    printf "%s" "$res" | \
        x jo 2c                .type  .name .createdAt | \
        x csv header --add     Type   Name  CreatedAt  | \
        ___x_cmd_hub___util_st_tab  -      10    100%
}