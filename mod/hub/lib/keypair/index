# shellcheck shell=dash

xrc:mod:lib hub keypair/ls keypair/rm keypair/save keypair/load keypair/gen

___x_cmd_hub_keypair(){
    local op
    while [ $# -gt 0 ] ; do
        op="$1"; shift
        case "$op" in
            --help|-h|"")    ___x_cmd_hub___help key ; return 1 ;;
            gen|save|load|ls|rm)
                "___x_cmd_hub_keypair_$op" "$@" ; return ;;
            *) ___x_cmd_hub___util_subcmd_invalid "key" "$@";  return ;;
        esac
    done
}

___x_cmd_hub_keypair___ensure_key_(){
    local keyname="${1:?keyname is required}"
    # TODO: keytype encrypt type
    local keytype="${2:?keytype is required}"
    local username="${3:-me}"

    local key_path; key_path="$(___x_cmd_hub___util_user_dir "$username" keypair)/${keyname}_${keytype}.pem"
    [ "$username" = "me" ] || {
        if ! ___x_cmd_hub___util_curl get "/api/v0/key/$keyname" type="$keytype" "username=$username" > "$key_path" ; then
            ___x_cmd_hub___util_handle_resp false "$(cat "$key_path")" "Failed to get public key for $username"
            x rmrf "$key_path"
            return
        fi
        hub:debug "Downloaded public key for $key_path to $key_path"
    }

    x_="$key_path"
    if [ -f "$x_" ] ; then
        hub:debug "Found key=$key_path"
        return 0
    fi

    hub:info "No public key '$keyname', try to load from server"
    ___x_cmd_hub_keypair_load "$keyname" 2>/dev/null

    case "$?" in
        4)  ;; # no key found
        0)  return 0 ;;
        *)  hub:error "Failed to load public key"
            return 1 ;;
    esac

    hub:info "No public key '$keyname' found at server, try to generate"
    ___x_cmd_hub_keypair_gen "$keyname"
}
