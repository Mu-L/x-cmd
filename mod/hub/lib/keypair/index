# shellcheck shell=dash

xrc:mod:lib hub keypair/ls keypair/rm keypair/save keypair/load keypair/gen

___x_cmd_hub_keypair(){
    local op
    while [ $# -gt 0 ] ; do
        op="$1"; shift
        case "$op" in
            --help|-h|"")    ___x_cmd_hub___help key ; return 1 ;;
            gen|save|load|ls|rm)
                "___x_cmd_hub_keypair_$op" "$@" ; return ;;
            *) ___x_cmd_hub___util_subcmd_invalid "key" "$@";  return ;;
        esac
    done
}

___x_cmd_hub_keypair___ensure_key_(){
    local key_name="${1:?key_name is required}"
    local key_type="${2:?key_type is required}"
    local username="-"

    local key_path
    case "$key_name" in
        */*)
                username="${key_name%%/*}" ; key_name="${key_name#*/}"
                key_path="$(___x_cmd_hub___util_user_dir "$username" keypair)/${key_name}_${key_type}.pem"
                if ! ___x_cmd_hub___util_curl_v2 get "/api/v0/key/$___X_CMD_HUB_KEYPAIR" type=public "username=$username" > "$key_path" ; then
                    ___x_cmd_hub___util_handle_resp false "$(cat "$key_path")" "Failed to get public key for $username"
                    x rmrf "$key_path"
                    return
                fi
                hub:debug "Downloaded public key for $key_path to $key_path"
            ;;
        *)
            key_path="$(___x_cmd_hub___util_user_dir "$username" keypair)/${key_name}_${key_type}.pem"
    esac

    x_="$key_path"
    if [ -f "$x_" ] ; then
        hub:debug "Found key=$key_path"
        return 0
    fi

    hub:info "No public key=$x_ found, try to load from server"
    ___x_cmd_hub_keypair_load "$key_name" 2>/dev/null

    case "$?" in
        4)  ;; # no key found
        0)  return 0 ;;
        *)  hub:error "Failed to load public key"
            return 1 ;;
    esac

    hub:info "No public key found, try to generate a new one"
    ___x_cmd_hub_keypair_gen "$key_name"
}
