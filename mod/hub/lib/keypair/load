# shellcheck shell=dash

___x_cmd_hub_keypair_load(){
    local X_help_cmd='___x_cmd_hub___help keypair load'
    help:arg:parse

    local ___X_CMD_HUB_PRIKEY_ENC_PATH="$___X_CMD_HUB_PRIVATE_KEY_PATH.enc"
    ___x_cmd_hub_keypair___download || return 1
    ___x_cmd_hub_keypair___decrypt_private_key "$___X_CMD_HUB_PRIKEY_ENC_PATH" "$___X_CMD_HUB_PRIVATE_KEY_PATH" || return 1
}

# TODO: download once curl request
___x_cmd_hub_keypair___download(){
    # Download private key
    local resp=
    resp="$(___x_cmd_hub_u_curl get "/api/v0/key/$___X_CMD_HUB_KEYPAIR_NAME" type==private)" || {
        [ -n "$NO_LOG" ] || ___x_cmd_hub_u_handle_resp false "Failed to get rsakey for $___X_CMD_HUB_KEYPAIR_NAME"
        return 1
    }
    printf "%s" "$resp" | x openssl enc -d -A -base64 > "$___X_CMD_HUB_PRIKEY_ENC_PATH"

    # Download public key
    resp="$(___x_cmd_hub_u_curl get "/api/v0/key/$___X_CMD_HUB_KEYPAIR_NAME" type==public)" || {
        [ -n "$NO_LOG" ] || ___x_cmd_hub_u_handle_resp false "Failed to get rsakey for $___X_CMD_HUB_KEYPAIR_NAME"
        return 1
    }
    printf "%s" "$resp" > "$___X_CMD_HUB_PUBLIC_KEY_PATH"
}

___x_cmd_hub_keypair___decrypt_private_key(){
    hub:info "Please input password for encrypt private key"
    local password=
    while true ; do
        if ! ___x_cmd_is_interactive_tty ; then
            hub:error "Password required, but not in interactive tty"
            return 1
        fi

        ___X_CMD_TUI_FORM_FINAL_COMMAND=""
        x tui form password      "Password"           ""  '=~*'  '^.*$' || return 1
        [ -n "$___X_CMD_TUI_FORM_FINAL_COMMAND" ] || {
            hub:info "Canceled"
            return 1
        }

        hub:debug "x openssl enc -d -aes-256-cbc -in $___X_CMD_HUB_PRIKEY_ENC_PATH -out $___X_CMD_HUB_PRIVATE_KEY_PATH -pbkdf2 -pass pass:$password"
        x openssl enc -d -aes-256-cbc -in "$___X_CMD_HUB_PRIKEY_ENC_PATH" -out "$___X_CMD_HUB_PRIVATE_KEY_PATH" -pbkdf2 -pass "pass:$password" || {
            hub:error "Failed to decrypt private key, or password not match, please try again"
        }
        break
    done
}
