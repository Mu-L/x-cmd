# shellcheck shell=dash disable=SC2030,SC2031

___x_cmd_hub___util_curl_header(){
    local key="${1:?Provide key}"

    < "$___X_CMD_HUB_TMP/header.$$.out" awk -v key="$key" '
        BEGIN { FS=": "; }
        $1 == key { print $2; exit 0; }
    '
}

___x_cmd_hub___util_curl()(
    local method="${1:?Provide method}"
    local url_path="${2:?Provide url_path}"; shift 2

    local json_header="-H 'Content-Type: application/json'"
    local file=""; local header=""; local body=""
    local ___X_CMD_HUB_RAW_BODY
    while [ $# -gt 0 ]; do
        case "$1" in
            -F) file="$file -F '$2'"; json_header="" ; shift 2 ;;
            -H) header="$header -H '$2'"; shift 2 ;;
            --raw-body) body="-d '$2'"; ___X_CMD_HUB_RAW_BODY=true; shift 2 ;;
            *)  break ;;
        esac
    done

    local resp_path="$___X_CMD_HUB_TMP/resp.$$.out"
    local header_path="$___X_CMD_HUB_TMP/header.$$.out"
    x rmrf "$resp_path" "$header_path"

    local token; token="$(___x_cmd_hub___util_get_token)" || return
    [ -z "$token" ] || header="$header -H 'Authorization: $token'"

    hub:debug "Command " "$url_path" "$@"

    local cmd="x curl -sSL"
    case "$method" in
        get)    cmd="$cmd -X GET" ;;
        put)    cmd="$cmd -X PUT" ;;
        post)   cmd="$cmd -X POST" ;;
        patch)  cmd="$cmd -X PATCH" ;;
        delete) cmd="$cmd -X DELETE" ;;
        *)      hub:error "Unknown method: $method" ;;
    esac

    local query;
    ___x_cmd_hub___util_curl_handle_query_and_body_ "$@"
    cmd="$cmd -o '$resp_path' -D '$header_path' -w '%{http_code}' \
        $header $json_header $body $file \
        '$___X_CMD_HUB_SERVICE_URL$url_path$query'"

    hub:debug "Exec cmd: $cmd"
    local http_code; http_code="$(eval "$cmd")" || return 1
    command cat "$resp_path"

    case "$http_code" in
        2*)  return 0 ;;
        404) return 4 ;;
        *)   return 1 ;;
    esac
)

# "$@" is type=public aa=nnn dd=eee -- type=public aa=nnn dd=eee
___x_cmd_hub___util_curl_handle_query_and_body_(){
    for arg in "$@"; do
        shift
        [ "$arg" != "--" ] || break
        query="${query}&$arg"
    done
    [ -z "$query" ] || query="?${query#&}"

    [ -z "$___X_CMD_HUB_RAW_BODY" ] || return 0
    body=""
    for arg in "$@"; do
        shift
        body="${body},\"${arg%%=*}\":\"${arg#*=}\""
    done
    [ -z "$body" ] || body="-d '{${body#?}}'"
}