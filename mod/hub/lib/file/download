# shellcheck shell=dash

___x_cmd_hub_file_download(){
    local X_help_cmd='___x_cmd_hub___help file download'
    help:arg-null:parse

    local force
    while [ $# -gt 0 ]; do
        case "$1" in
            --force|-f)     force=true; shift ;;
            *) break ;;
        esac
    done

    local remotefp="${1:?Provide remotefp}"
    remotefp="$(___x_cmd_hub_file_normalize_respath "$remotefp")"
    local localfp="${2}"
    localfp="$(____x_cmd_hub_file___localfp "$remotefp" "$localfp")"
    x mkdirp "$(dirname "$localfp")" || return 1

    if [ -z "$force" ] && [ -f "$localfp" ] ; then
        ___x_cmd_hub___util_handle_resp false "" "File already exists => $localfp"
        return 1
    fi

    ___x_cmd_hub_file_cat "$remotefp" > "$localfp" || {
        ___x_cmd_hub___util_handle_resp false "" "Failed to download file => $remotefp"
        return 1
    }
    hub:debug "Downloaded file => $remotefp -> $localfp"
}

# ""  "" -> "$filename"
# "a" -> "a"
# "a/" -> "a/filename"
____x_cmd_hub_file___localfp(){
    local remotefp="${1:?Provide remotefp}"
    local localfp="${2}"

    local filename="${remotefp##*/}"
    [ -n "$localfp" ] || localfp="$filename"
    [ "${localfp%/}" = "$localfp" ] || localfp="${localfp}${filename}"
    printf "%s" "$localfp"
    hub:debug "____x_cmd_hub_file___localfp: $remotefp -> $localfp"
}