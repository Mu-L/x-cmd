# shellcheck shell=dash

___x_cmd_hub_file___encrypt_file(){
    local filekey_path="${1:? filekey path is required}"
    hub:debug "encrypt file => filekey_path=$filekey_path"
    x openssl rand -hex 32 > "$filekey_path" || return 1
    x openssl enc -aes-256-cbc -salt -in - -out - -pbkdf2 -pass file:"$filekey_path"
    # TODO: maybe it can use 7z to encrypt file
}

___x_cmd_hub_file___decrypt_file(){
    local filekey_path="${1:? filekey path is required}"
    hub:debug "decrypt file => filekey_path=$filekey_path"
    x openssl enc -d -aes-256-cbc -in -  -pbkdf2 -out - -pass file:"$filekey_path"
}

___x_cmd_hub_file___encrypt_filekey(){
    local keyname="${1:? public_key path is required}"
    local x_ ; ___x_cmd_hub_keypair___ensure_key_ "$keyname" public || return 1
    x openssl pkeyutl -encrypt -pubin -inkey "$x_" -in - -out -
}

___x_cmd_hub_file___decrypt_filekey(){
    local keyname="${1:? private_key name}"
    local x_ ; ___x_cmd_hub_keypair___ensure_key_ "$keyname" private || return 1
    x openssl pkeyutl -decrypt -inkey "$x_" -in - -out -
}
