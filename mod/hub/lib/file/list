# shellcheck shell=dash

___x_cmd_hub_file_ls(){
    local X_help_cmd='___x_cmd_hub___help file ls'
    help:arg:parse
    local json; local recurse; local long
    while [ $# -gt 0 ] ; do
        case "$1" in
            --json|-j)      json=true; shift ;;
            --recurse|-R)   recurse=true; shift ;;
            --long|-l)      long=detail; shift ;;
            *) break ;;
        esac
    done

    local remotefp="$1"
    remotefp="$(___x_cmd_hub_file_normalize_remotefp "$remotefp")"

    local resp
    resp="$(___x_cmd_hub_u_curl get "/api/v0/file?res=${remotefp}&type=${long}&recurse=${recurse}")" || {
        ___x_cmd_hub_u_handle_resp false "Failed to ls file:"
        return 1
    }

    [ -z "$json" ] || { printf "%s\n" "$resp"; return 0; }
    if [ -n "$long" ] ; then
        printf "%s" "$resp" | \
            x jo 2c                .path  .isPublic .userList .isDir .size  .createdAt | \
            x csv header --add     PATH   IS_PUBLIC USER_LIST IS_DIR SIZE  CREATE_AT  | \
            ___x_cmd_hub_u_st_tab  30%,10,-,10,10,100%
    else
        local code; code="$(xrc cat awk/lib/core.awk awk/lib/j/json.awk awk/lib/j/jiter.awk )"
        printf "%s" "$resp" | awk "$code"'
            { jiget_after_tokenize_unquote($0, ".") }'
    fi
}
