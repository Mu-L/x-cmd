# shellcheck shell=dash

___x_cmd_hub_file_ls(){
    local json; local recurse; local long
    while [ $# -gt 0 ] ; do
        case "$1" in
            --json|-j)      json=true; shift ;;
            --help|-h)      ___x_cmd_hub___help file ls ; return 1;;
            --recurse|-R)   recurse=true; shift ;;
            --long|-l)      long=detail; shift ;;
            *) break ;;
        esac
    done

    local respath="${1:-"me:"}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    local res
    if ! res="$(___x_cmd_hub___util_curl_v2 get /api/v0/file res="${respath}" type="${long}" recurse="${recurse}")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to ls file:"
        return 1
    fi

    [ -z "$json" ] || { printf "%s\n" "$res"; return 0; }
    if [ "$long" = "detail" ] ; then
        printf "%s" "$res" | \
            x jo 2c                .path  .isPublic .userList .isDir .size  .createdAt | \
            x csv header --add     PATH   IS_PUBLIC USER_LIST IS_DIR .SIZE  CREATE_AT  | \
            ___x_cmd_hub___util_st_tab  -,10,-,10,10,100%
    else
        local code; code="$(xrc cat awk/lib/core.awk awk/lib/j/json.awk awk/lib/j/jiter.awk )"
        printf "%s" "$res" | awk "$code"'
            { jiget_after_tokenize_unquote($0, ".") }'
    fi
}