# shellcheck shell=dash

___x_cmd_hub_file_cat(){
    while [ $# -gt 0 ] ; do
        case "$1" in
            --help|-h|"")    ___x_cmd_hub___help file cat ; return 1 ;;
            *) break ;;
        esac
    done

    local respath="${1:?Provide respath}"; respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    local fp_enc; local username
    username="${respath%%":"*}"
    fp_enc="$(___x_cmd_hub___util_user_dir "$username" encdata)/${respath#*/}.enc" || return 1
    x mkdirp "${fp_enc%/*}"

    if ! NO_AUTH=1 ___x_cmd_hub___util_curl get /api/v0/file/cat "res=${respath}" token="$(___x_cmd_hub_cur get token)" > "$fp_enc"; then
        ___x_cmd_hub___util_handle_resp false "$(cat "$fp_enc")" "Please check the respath $respath: "
        x rmrf "$fp_enc"
        return 1
    fi

    local filekey_base64; filekey_base64="$(___x_cmd_http resp header encryption-filekey-base64)"
    [ -n "$filekey_base64" ] || {
        < "$fp_enc" ___x_cmd_hub_file_parse_stream
        return
    }

    local filekey_path
    filekey_path="$(___x_cmd_hub___util_user_dir "$username" datakey)/${respath#*/}/filekey"  || return 1
    x mkdirp "${filekey_path%/*}"

    printf "%s" "$filekey_base64" | base64 -d | ___x_cmd_hub_file___decrypt_filekey "$___X_CMD_HUB_KEYPAIR"  > "$filekey_path" || {
        ___x_cmd_ui_tf false "Failed to decrypt filekey to $filekey_path" >&2
        return 1
    }

    < "$fp_enc" ___x_cmd_hub_file_parse_stream || {
        ___x_cmd_ui_tf false "Failed to decrypt $fp_enc" >&2
        return 1
    }
}