# shellcheck shell=sh disable=SC3043

___x_cmd_hub_share(){
    local op="$1"
    case "$op" in
        -h|--help) shift ; x advise gen_help "$___X_CMD_ROOT_MOD/hub/res/advise.jso" share >&2 ; return 1 ;;
        add|rm|ls) shift
            "___x_cmd_hub_share_$op" "$@"                         ;;
        *) ___x_cmd_hub___util_subcmd_invalid "share" "$@"        ;;
    esac
}

___x_cmd_hub_share_ls(){
    local json
    case "$1" in
        --json|-j)    json=true; shift ;;
        --help|-h)    x advise gen_help "$___X_CMD_ROOT_MOD/hub/res/advise.jso" share ls >&2 ; return 1 ;;
    esac

    local res
    if ! res="$(___x_cmd_hub___util_curl get /api/v0/share)" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to list shares : "
        return 1
    fi

    if [ -t 1 ] && [ -z "$json" ] ; then
        x ui table json PATH=.path IS_PUBLIC=.isPublic LINK_LIMIT=.linkLimit CREATE_AT=.createdAt UPDATE_AT=.updateAt \
            -- 'printf "%s" "$res"'
    else
        printf "%s\n" "$res"
    fi
}

___x_cmd_hub_share_add(){
    local public
    case "$1" in
        --public|-P)    public=true; shift ;;
        --help|-h)      x advise gen_help "$___X_CMD_ROOT_MOD/hub/res/advise.jso" share add >&2 ; return 1 ;;
    esac

    local respath="${1:?Provide respath}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    local res
    res="$(___x_cmd_hub___util_curl put /api/v0/share -- "res=$respath" "isPublic=${public:-false}")" || {
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to add share:"
        return 1
    }

    [ -z "$json" ] || { printf "%s\n" "$res" ; return 0 ; }
    ___x_cmd_hub___util_handle_resp true "" "Success to add share for $respath:"
    printf "%s" "[$res] " | x j2y | x str ml pwrap "  "
}

___x_cmd_hub_share_rm(){
    case "$1" in
        --help|-h)    x advise gen_help "$___X_CMD_ROOT_MOD/hub/res/advise.jso" share rm >&2 ; return 1 ;;
    esac

    local respath="${1:?Provide respath}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    local res
    if ! res="$(___x_cmd_hub___util_curl delete /api/v0/share "res=$respath")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to remove share: "
        return 1
    fi

    [ -z "$json" ] || { printf "%s\n" "$res" ; return 0 ; }
    ___x_cmd_hub___util_handle_resp true "$res" "Success to rm share for $respath: "
}
