# shellcheck shell=sh disable=SC3043

___x_cmd_hub_token(){
    local op="$1"
    case "$op" in
        -h|--help) shift ; ___x_cmd_hub___help token ; return 1 ;;
        info|ls|rm|clear|gen) shift
            "___x_cmd_hub_token_$op" "$@"                         ;;
        "") ___x_cmd_hub___util_get_token "$@"                    ;;
        *)  ___x_cmd_hub___help token ; return 1 ;;
    esac
}

___x_cmd_hub_token_info(){
    local json
    case "$1" in
        --json|-j)    json=true; shift ;;
        --help|-h)    ___x_cmd_hub___help token info; return ;;
    esac

    local token; token="$(___x_cmd_hub___util_get_token)" || return
    local res
    if ! res="$(___x_cmd_hub___util_curl_v2 get "/api/v0/token/$token")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to get token info:"
        return 1
    fi
    [ -z "$json" ] || { printf "%s\n" "$res" ; return 0 ; }
    ___x_cmd_hub___util_handle_resp true "" "Get token info successfully"
    printf "[%s]" "$res" | x yml j2y | x str ml pwrap '  '
}

___x_cmd_hub_token_ls(){
    local json
    case "$1" in
        --json|-j)    json=true; shift ;;
        --help|-h)    ___x_cmd_hub___help token ls ; return 1 ;;
    esac

    local res
    if ! res="$(___x_cmd_hub___util_curl_v2 get /api/v0/token)" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to list tokens:"
        return 1
    fi
    [ -z "$json" ] || { printf "%s\n" "$res" ; return 0 ; }
    ___x_cmd_hub___util_handle_resp true "" "List tokens successfully"
    printf "%s" "$res" | x yml j2y | x str ml pwrap '  '
}

___x_cmd_hub_token_rm(){
    local json
    case "$1" in
        --json|-j)    json=true; shift ;;
        --help|-h)    ___x_cmd_hub___help token rm ; return 1 ;;
    esac

    local token="${1:?Provide token}"
    local res
    if ! res="$(___x_cmd_hub___util_curl_v2 delete "/api/v0/token/$token")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to remove token:"
        return 1
    fi
    ___x_cmd_hub___util_handle_resp true "$res" "Remove token successfully"
}

___x_cmd_hub_token_clear(){
    local res
    if ! res="$(___x_cmd_hub___util_curl_v2 get /api/v0/token/invalid/other)" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to clear token:"
        return 1
    fi
    ___x_cmd_hub___util_handle_resp true "$res" "Clear token successfully:"
}

___x_cmd_hub_token_gen(){
    local json; local body="" ; local prefix; local acl
    while [ $# -gt 0 ]; do
        case "$1" in
            --json|-j)    json=true; shift ;;
            --help|-h)    ___x_cmd_hub___help token gen ; return 1 ;;
            --policy|-p)  shift ;
                prefix="${1:?Provide prefix}"; shift
                acl="${1:?Provide acl}"; shift
                body="$body,$(x jo dict "prefix:/${prefix#/}" acl)"
                ;;
            *)            break ;;
        esac
    done

    hub:debug "body=>$body"

    local res
    if ! res="$(___x_cmd_hub___util_curl post /api/v0/token "[${body#,}]")" ; then
        ___x_cmd_hub___util_handle_resp false "$res" "Failed to generate token:"
        return 1
    fi
    [ -z "$json" ] || { printf "%s" "$res" ; return 0 ; }
    ___x_cmd_hub___util_handle_resp true "" "Generate token successfully"
    printf "[%s]" "$res" | x yml j2y | x str ml pwrap '  '
}