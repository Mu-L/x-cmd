# shellcheck shell=dash disable=SC2016
# Reference: https://gist.github.com/yunga/99d04694e2466e017c5502d7c828d4f4
# https://docs.chocolatey.org/en-us/choco/setup#installing-to-a-different-location

___x_cmd_choco___install(){
    ChocolateyInstall="${ChocolateyInstall:-"${ProgramData:+"${ProgramData}/chocolatey"}"}"
    case "$1" in
        # "Set the folder you want Chocolatey to install"
        --ChocolateyInstall)
            ChocolateyInstall="$2"
    esac

    if [ -n "$ChocolateyInstall" ]; then
        export WSLENV="${WSLENV}:ChocolateyInstall/p"
        export ChocolateyInstall="$ChocolateyInstall"
    else
        local x_=
        x pwsh path win_to_linux_ "$( x pwsh -Command 'Write-Host -NoNewline $env:PROGRAMDATA' )/chocolatey"
        ChocolateyInstall="$x_"
    fi

    choco:info --ChocolateyInstall "$ChocolateyInstall" 'Installing download choco'
    x pwsh admin '
Set-Location $env:USERPROFILE;
If ( ! ( Test-Path $PROFILE ) ) { New-Item -Force -ItemType File -Path $PROFILE; Add-Content -Path $PROFILE -Encoding UTF8 -Value "# Powershell Profile"; };
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
iex ((New-Object System.Net.WebClient).DownloadString("https://chocolatey.org/install.ps1"));
$env:PATH += ";$env:ChocolateyInstall\bin"
'
# Set-ExecutionPolicy -ExecutionPolicy RemoteSigned;
# Set-ExecutionPolicy Bypass -Scope Process -Force;
}

___x_cmd_choco_install(){
    if [ "$#" -eq 0 ]; then
        ___x_cmd_choco___nv
        return 0
    fi

    local name="$1"
    ___x_cmd_choco___bin_admin "install" "$name"
}


___x_cmd_choco___lsraw(){
    x ccmd 1d -- ___x_cmd_choco___bin find | ___x_cmd_cmds awk '{if((last_pkg ~ "^[a-zA-z].*")&& ($1 !~ "[a-zA-Z]")) exit(1)
                                                    print $1; last_pkg=$1;}'
}


___x_cmd_choco___nv(){
    { [ -t 1 ] && ___x_cmd_is_interactive; } \
        || {
            ___x_cmd_choco___lsraw
            return 0
        }

    local software=
    software="$(___x_cmd_choco___lsraw | x pick --width 40 --col 10)" \
        || {
            install:info "Exit because no software is selected."
            return 0
        }

    [ -n "$software" ] || return 1
    local id=
    x ui select id "What to do NEXT"                        \
        "x choco install $software"                         \
        "x choco info $software"                            \
        "EXIT"     || return

    case "$id" in
        1)      ___x_cmd_choco___bin_admin "install" "$software"  ;;

        2)     ___x_cmd_choco___bin "info" "$software" ;;
        3)          return 0 ;;

    esac

}


