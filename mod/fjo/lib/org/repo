# shellcheck shell=bash disable=SC2034,SC2154
# shellcheck disable=SC2039,3043
___x_cmd_fjo_org_repo(){
    param:subcmd ___x_cmd_fjo_org_repo                        \
        ls                  "list repo"                       \
        create              "org repo create"                 \
        ll                  "List organization repo"
    param:subcmd:try
    param:run

    ___x_cmd_fjo_org_repo _param_help_doc
    return 1
}

___x_cmd_fjo_org_repo_ll() {
    param:scope     ___x_cmd_fjo
    param:dsl       <<A
options:
    #1         "org space address"                              <>:Address
    --limit     "Results per page"                              <>:Numbers="30"
    --page      "Page number of the results to fetch."          <>:Numbers="1"

    --json|-j   "output origin json data"
    --csv       "output csv data"
    --yml       "output yml data"
A
    param:run

    param:run
    local Address="${1%%/*}"
    if ___x_cmd_gx_output_is_format; then
        ___x_cmd_fjo_get_multi  "/orgs/$Address/repos" limit page | ___x_cmd_gx_output_format
    else
        ___x_cmd_fjo_get_multi  "/orgs/$Address/repos"  limit page | \
            x jo 2c            .name  .full_name .private .url | \
            x csv header --add  Name  RepoPath  Private  Url | \
            if [ -n "$csv" ]; then  ___x_cmd_cmds cat
            else                    ___x_cmd csv static_tab
            fi

    fi
}

# Section: org repo ls
# https://gitea.com/api/swagger#/organization/orgListRepos
___x_cmd_fjo_org_repo_ls() {

    if ___x_cmd_gx_has_format_args "$@"; then
        ___x_cmd_fjo_org_repo_ll "$@"
        return
    fi

    param:scope     ___x_cmd_fjo
    param:dsl       <<A
options:
    #1              "org space address"                         <>:Address
    --limit         "Results per page"                          <>:Numbers="30"
    --page          "Page number of the results to fetch."      <>:Numbers="1"
A
    param:run


    local Address="${1%%/*}"
    if ___x_cmd_gx_is_interactive_env; then
        local ___X_CMD_TUI_TABLE_FINAL_COMMAND
        local ___X_CMD_TUI_TABLE_CUR_LINE
        local ___X_CMD_TUI_TABLE_CUR_ITEM
        ___x_cmd_fjo_tui_app --Address "$Address" --limit "$limit" --page "$page" --___X_CMD_FCT_API_VENDOR "$___X_CMD_FCT_API_VENDOR" \
            --request-code '___x_cmd_fjo_get_multi  "/orgs/$Address/repos" limit page' \
            --error-msg "Couldn't find any data by ${Address}" \
            --end ___x_cmd_fjo_org_repo_app_status_handler \
            "org.repo.app.awk"
    else
        ___x_cmd_fjo_get_multi  "/orgs/$Address/repos" limit page | \
            x jo 2c    .full_name
    fi

}

___x_cmd_fjo_org_repo_app_status_handler(){
    if [ "$___X_CMD_TUI_TABLE_FINAL_COMMAND" = "c" ]; then
        ___x_cmd_fjo_org_repo_create --org "$Address"
    fi
}

# EndSection

# Section: org repo create
# https://gitea.com/api/swagger#/organization/createOrgRepo
___x_cmd_fjo_org_repo_create() {
    param:scope     ___x_cmd_fjo
    param:dsl       '
type:
    access  =   private public
option:
    --org                "organization create repo"                                                         <>   =  /[-A-Za-z0-9_/]+/
    #1                   "repo names"
    --access             "private,public"                                                                   <>:access=private
    --readme             "Readme of the repository to create"                                               <>=""
    --license            "License to use"                                                                   <>=""
    --description        "Description of the repository to create"                                          <>=""
    --gitignores         "Gitignores to use"                                                                <>=""
    --issue_labels       "Label-Set to use"                                                                 <>=""
    --trust_model        "TrustModel of the repository"                                                     <>=""      = default collaborator committer collaboratorcommitter
    --default_branch     "DefaultBranch of the repository (used when initializes and in template)"          <>=""
    --template           "Whether the repository is template"
    --auto_init          "Whether the repository should be auto-initialized"
    --json|-j            "output json data"
'
    param:run

    local private=true
    [ "$access" = "public" ] && private=false

    local name="${___X_CMD_TX}"
    local gen_fjo_json
    gen_fjo_json="$(param:option2json -access +private +name )"

    for name in "$@"; do
        fjo:debug "___x_cmd_fjo_repo_create_data:$(x tmpl "$gen_fjo_json"  "${name##%/}")"
        x tmpl "$gen_fjo_json"  "${name##%/}" | \
        ___x_cmd_fjo_curl post "/orgs/$org/repos" "@-" | (
            ___x_cmd_fjo_repo____ui_handler Creating
        )
    done
}
# EndSection
