# shellcheck shell=dash

___X_CMD_GITHOOK_VERSION="v0.0.1" # If upgrade the version. The `gitconfig/lib/main` also need to upgrade

___x_cmd_githook___main(){
    [ -n "$1" ] || set -- "--help"
    local op="$1"; shift
    case "$op" in
        apply|clear)      ___x_cmd_githook_"$op" "$@" ;;
        --apply|--clear)  ___x_cmd_githook_"${op#--}" "$@" ;;
        -h|--help)        ___x_cmd_githook_help ;;
    esac
}

# shellcheck disable=2120
___x_cmd_githook_help(){
    x help -m githook "$@"
    return 1
}

___x_cmd_githook_apply(){
    local fp="${1:-"$(x wsroot)/.x-cmd/git/hook.yml"}"
    local git_hook_cache_dir="${2:-"$(x wsroot)/.git/.x-cmd/hooks/${___X_CMD_GITHOOK_VERSION}"}"

    [ -d "$git_hook_cache_dir" ] || {
        local tgt_hook_path="$___X_CMD_ROOT_GDATA/githook/hooks/${___X_CMD_GITHOOK_VERSION}"
        [ -d "$tgt_hook_path" ] || {
            x mkdirp "$___X_CMD_ROOT_GDATA/githook/hooks"
            x cp -r "$___X_CMD_ROOT_MOD/githook/lib/hooks/${___X_CMD_GITHOOK_VERSION}" "$tgt_hook_path"
        }

        command git config --local core.hooksPath "$tgt_hook_path"
        # command git config --local x-cmd.githook.init ""
    }

    x rmrf "$git_hook_cache_dir"
    x mkdirp "$git_hook_cache_dir"

    [ -f "$fp" ] || return 0

    x y2j "$fp" | x ja t | ___x_cmd_cmds_awk            \
        -v GIT_HOOKS_DIR="$git_hook_cache_dir"          \
        -f "$___X_CMD_ROOT_MOD/awk/lib/core.awk"        \
        -f "$___X_CMD_ROOT_MOD/awk/lib/shx.awk"         \
        -f "$___X_CMD_ROOT_MOD/awk/lib/j/json.awk"      \
        -f "$___X_CMD_ROOT_MOD/awk/lib/j/jiter.awk"     \
        -f "${___X_CMD_ROOT_MOD}/githook/lib/awk/apply.awk"

}

___x_cmd_githook_clear(){
    local git_hook_cache_dir="${1:-"$(x wsroot)/.git/.x-cmd/hooks"}"

    x rmrf "${git_hook_cache_dir}"
    command git config --local --unset core.hooksPath
}


