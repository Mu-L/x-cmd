# shellcheck shell=dash

___X_CMD_ASDF_DIR="${___X_CMD_ROOT_DATA}/asdf"

x log init asdf

___x_cmd_asdf___main(){
    local X_help_cmd='___x_cmd_asdf___help'
    help:arg-null:parse

    local op="$1"; shift
    case "$op" in
        --install)    ___x_cmd_asdf___install "$@" ;;
        --uninstall)  ___x_cmd_asdf___uninstall "$@" ;;
        --activate)   ___x_cmd_asdf___activate "$@" ;;
        --deactivate) ___x_cmd_asdf___deactivate "$@" ;;
        --help|-h)    ___x_cmd_asdf___help "$@" ;;
        *)            ___x_cmd_asdf___bin "$op" "$@" ;;
    esac
}

___x_cmd_asdf___install(){
    asdf:info "installing asdf"
    ___x_cmd_hascmd git || {
        x env use git || return
    }

    ___x_cmd_hascmd curl || {
        x env use curl || return
    }

    git clone https://github.com/asdf-vm/asdf.git "$___X_CMD_ASDF_DIR" --branch v0.13.1 || return
}

___x_cmd_asdf___uninstall(){
    asdf:info "uninstalling asdf"
    x rmrf "$___X_CMD_ASDF_DIR"
}

# TODO: uncertain
___x_cmd_asdf___activate(){
    local cmd="export ASDF_DIR='$___X_CMD_ASDF_DIR' ; export ASDF_DATA_DIR='$___X_CMD_ASDF_DIR'; . '$___X_CMD_ASDF_DIR/asdf.sh'"
    eval "$cmd"
    asdf:info "asdf activated, if you want to deactivate, run 'x asdf --deactivate'"
    x boot rc add asdf-activate "$cmd"
}

___x_cmd_asdf___deactivate(){
    x path rm "$___X_CMD_ASDF_DIR/shims"
    unset ASDF_DIR
    unset ASDF_DATA_DIR
    x boot rc del asdf-activate
}

___x_cmd_asdf___bin(){
    if [ ! -f "$___X_CMD_ASDF_DIR/bin/asdf" ]; then
        ___x_cmd_asdf___install || return
        ___x_cmd_asdf___activate || return
    fi

    asdf "$@"
}

___x_cmd_asdf___help(){
    x help -m asdf "$@"
}

# Make asdf better
