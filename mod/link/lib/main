# shellcheck shell=dash

___x_cmd_link___main(){
    [ "$#" -gt 0 ] ||       set - --help
    local op="$1"; shift
    case "$op" in
        dump)               ___x_cmd_link___exec -dump "$@" ;;
        browse)             ___x_cmd_link___exec "$@" ;;
        source)             ___x_cmd_link___exec -source "$@" ;;

        url|url_)
                            ___x_cmd_link___"$op"   "$@" ;;
        -h|--help)          N=link M="help" log:ret:1 ;;
    esac
}

___x_cmd_link___exec(){
    local cmd='x cosmo links'
    local proxy=
    while [ $# -gt 0 ]; do
        case "$1" in
            --http_proxy)   proxy=1; cmd="$cmd -http-proxy ${2#*://}" ; shift 2; ;;
            --https_proxy)  proxy=1; cmd="$cmd -https-proxy ${2#*://}"; shift 2; ;;
            --socks_proxy)  proxy=1; cmd="$cmd -socks-proxy ${2#*://}"; shift 2; ;;
            *)              break
        esac
    done

    # We can sense the environment also ...
    # cosmox

    if [ -z "$proxy" ]; then
        if   [ -n "${proxy:=${HTTPS_PROXY:-$https_proxy}}" ]; then
            cmd="$cmd -https-proxy ${proxy#*://}"
        elif [ -n "${proxy:="${HTTP_PROXY:-$http_proxy}"}" ]; then
            cmd="$cmd -http-proxy ${proxy#*://}"
        elif [ -n "${proxy:="${ALL_PROXY:-$all_proxy}"}"   ]; then
            cmd="$cmd -socks-proxy ${proxy#*://}"
        fi
    fi

    cmd="$cmd \"\$@\""
    eval "$cmd"
}

# ___x_cmd_link___proxy(){
#     --http_proxy)
#                 case "$2" in
#                     http://*)   cmd="$cmd -http-proxy ${2#*://}"   ;;
#                     https://*)  cmd="$cmd -https-proxy ${2#*://}"  ;;
#                     socks://*)  cmd="$cmd -socks-proxy ${2#*://}"  ;;
#                     *)          N=link M="proxy must be http://host:<port> https://host:<port> sock://[user@]<host>:<port>" log:ret:64 ;;
#                 esac
#             ;;
# }
