
___x_cmd_cfgy_obj_set(){
    local X_help_cmd="${X_help_cmd:-x help -m cfgy obj set}";
    cfgy:arg:config-profile:all

    profile="${profile:-X}"

    [ -z "$config" ] || {
        # You have to reloaded.
        ___x_cmd_cfgy_obj___fset "$profile" "$config" "$@"
        return
    }

    if ___x_cmd_cfgy_obj_isloaded; then
        ___x_cmd_cfgy_obj___set "$profile" "$@"
    else
        ___x_cmd_cfgy_obj___fset "$profile" "$___X_CMD_CFGY_OBJ_DEFAULT_CONFIG" "$@"
    fi
}


___x_cmd_cfgy_obj___set(){
    [ "$#" -gt 1 ] || {
        cfgy:error "Provide profile name, and at least one key value pair"
        return 64
    }

    local profile="$1"; shift

    local x_
    ___x_cmd_cfgy_inner_get_profile_idx_ "$___X_CMD_CFGY_OBJ_PREFIX" "$profile"

    while [ $# -gt 0 ]; do
        case "$1" in
            *=*)
                eval "${___X_CMD_CFGY_OBJ_PREFIX}_${x_}_${1%%=*}=\"\${1#*=}\""
                shift
                ;;
            *)
                eval "${___X_CMD_CFGY_OBJ_PREFIX}_${x_}_$1=\"\$2\""
                shift 2
        esac
    done
}

___x_cmd_cfgy_obj___fset(){
    [ "$#" -gt 2 ] || {
        cfgy:error "Provide profile name and config-filepath, and at least one key value pair"
        return 64
    }

    local profile="$1"
    local fp="$2"
    shift 2

    [ -f "$fp" ] || printf "%s\n" "profile: []" >"$fp"

    local data; data="$(
        <"$fp" ___x_cmd_cfgy___yml2json_and_tokenize | (
        local IFS="$___X_CMD_UNSEENCHAR_NEWLINE"
        profile="$profile" op="$*" command awk              \
            -v prefix="$___X_CMD_CFGY_OBJ_PREFIX"           \
            -f "$___X_CMD_ROOT_MOD/awk/lib/core.awk"        \
            -f "$___X_CMD_ROOT_MOD/awk/lib/sh.awk"          \
            -f "$___X_CMD_ROOT_MOD/awk/lib/j/json.awk"      \
            -f "$___X_CMD_ROOT_MOD/awk/lib/j/jiter.awk"     \
            -f "$___X_CMD_ROOT_MOD/cfgy/lib/awk/set.awk"
    ))" || {
        cfgy:error "Fail to set config"
        return 1
    }

    printf "%s\n" "$data" | ___x_cmd_yml_j2y >"$fp"
}


