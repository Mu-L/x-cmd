

# This will only invoked when xonsh is activate on interactive mode ...

if "$HOME/.x-cmd.root/bin" not in $PATH:
    $PATH.append('/home/scopatz/.x-cmd.root/bin')

if "$HOME/.x-cmd.root/global/data/bin/l/j/h/bin" not in $PATH:
    $PATH.append('/home/scopatz/.x-cmd.root/global/data/bin/l/j/h/bin')


# def x(args):
#     ___x_cmd(args)

# def ___x_cmd(args):
#     $___X_CMD_XBINEXP_FP=$HOME/.x-cmd.root/local/data/xbinexp/fish/"  + os.getpid() + "/" + random.randint(0,32767)
#     mkdir -p $___X_CMD_XBINEXP_FP

#     bash "$HOME/.x-cmd.root/bin/xbinexp" $argv

#     $errorcode = _.rtn

#     if p"$___X_CMD_XBINEXP_FP/PWD".exists():
#         cd "@$(cat $___X_CMD_XBINEXP_FP/PWD)"
#         rm "$___X_CMD_XBINEXP_FP/PWD"

#     alist = []
#     for file in gp`$___X_CMD_XBINEXP_FP/*`:
#         alist.append(file)

#     rm ""

#     return $errorcode


# xonsh defaults all variables exported
$___X_CMD_IS_INTERACTIVE_FORCE = 1
$___X_CMD_THEME_RELOAD_DISABLE = 1

$xbinexp = "$HOME/.x-cmd.root/bin/xbin"

# interecept this function, so we could export the environment
aliases["x"]    = [ $xbinexp ]

aliases["xw"]   = [ "x", "ws" ]
aliases["xg"]   = [ "x", "git" ]
aliases["c"]    = [ "x", "cd" ]

# on_postcommand(cmd: str, rtn: int, out: str or None, ts: list) -> None
@events.on_postcommand
def fff(cmd: str, rtn: int, out: str or None, ts: list):
    # intercept x, xw, xg, c
    if str.startswith(cmd, "x ") or str.startswith(cmd, "xw ") or str.startswith(cmd, "g ") or str.startswith(cmd, "c"):
        # print(cmd)
        :
# if the command is $xbinexp, then try to export the environment
