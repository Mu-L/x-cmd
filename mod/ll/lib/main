# shellcheck shell=sh disable=SC3043,SC2164     # xrc

# 1. ll local device
# 2. change to different arguments, like ll :ali/ip, means ali ip ll


___x_cmd_ll___main(){
    [ $# -gt 0 ] ||     set -- --fzf

    local op="$1";      shift
    case "$op" in
        :*.zip|:*.7z|:*.tar|:*.tar.Z|:*.tar.gz)     ___x_cmd zuz ls "${op#:}"       ;;
        :cpu)                                       ___x_cmd ls :cpu                ;;
        :mem)                                       ___x_cmd ls :mem                ;;
        :ps)                                        ___x_cmd ps                     ;;
        -h|--help)                                  ___x_cmd help -m ll;   return 0 ;;

        --fzfinfo)                                  "___x_cmd_ll___${op#--}"   "$@" ;;

        --fzf)                                      ___x_cmd_ll_fzf_raw        "$@" ;;
        *)                                          ___x_cmd_ll_fzf_raw "$op"  "$@" ;;
    esac
}

___x_cmd_ll_fzf_raw(){
    case "$1" in
        -h|--help)  ___x_cmd help -m ll --fzf;  return 0;;
    esac

    if [ -t 1 ] && ___x_cmd_is_interactive ; then
        ___x_cmd_ll_fzf "$@"
    else
        ___x_cmd eza -la "$@"
    fi
}

___x_cmd_ll_fzf_(){
    {
        if [ $# -gt 0 ]; then
            # -aa: show the '.' and '..' directories
            ___x_cmd eza --color=always -a "$@"
        else
            ___x_cmd eza --color=always -a .
        fi
    } 2>/dev/null | ___x_cmd_ll___fzfcmd --preview='x ll --fzfinfo {1} 2>/dev/null' --preview-window=right:70%:wrap
}

___x_cmd_ll_fzf(){
    local d=
    d="$(___x_cmd_ll_fzf_ "$@")"
    read -r d <<A
$d
A
    [ -n "$d" ]     || return
    if [ -d "$d" ]; then
        (
            cd "$d"
            ___x_cmd_ll_fzf .
        )
    elif [ -f "$d" ]; then
        ___x_cmd_ll___fzfinfo_file "$d"
    else
        return 0
    fi
}

___x_cmd_ll___fzfinfo_file(){
    local f="${1}"
    case "$f" in
        *.zip|*.7z|*.tar|*.tar.Z|*.tar.gz|*.tar.xz)
                        ___x_cmd zuz ls "${f}"                              || ___x_cmd stat --item "$f" ;;

        *.json)
                        ___x_cmd jq -C . "${f}"                             || ___x_cmd stat --item "$f" ;;

        # *.csv)
        #                 ___x_cmd jq -C . "${f}"                             || ___x_cmd stat --item "$f" ;;

        \.*)            ___x_cmd bat --language bash  --style=plain --color always "$f" || ___x_cmd stat --item "$f" ;;
        *\.*)           ___x_cmd bat                  --style=plain --color always "$f" || ___x_cmd stat --item "$f" ;;
        *)              ___x_cmd bat --language bash  --style=plain --color always "$f" || ___x_cmd stat --item "$f" ;;
    esac
}

# x stat --item .

___x_cmd_ll___fzfinfo(){
    local f="${1:-.}"
    if [ -d "$f" ]; then
        ___x_cmd eza --color=always -alh --git "$f"
    elif [ -f "$f" ]; then
        ___x_cmd_ll___fzfinfo_file "$f"
    else
        ___x_cmd eza --color=always -alh --git "$f"
    fi
}

___x_cmd_ll___fzfcmd(){

    FZF_DEFAULT_OPTS="
--ansi
--reverse
--height='80%'
--bind='alt-w:toggle-preview-wrap'
--bind='alt-r:change-preview-window(right,70%|down,40%,99%,border-horizontal|hidden|right)'
--bind='left:print(..)+accept'
--bind='right:accept'
"   ___x_cmd fzf "$@"

}
