


___x_cmd_sed___fzf(){
    ___x_cmd_sed___fzfapp "$@"
}

___x_cmd_sed___fzfapp(){
    [ $# -gt 0 ] || set -- -

    local fp="$1"
    local pidofsubshell; pidofsubshell="$(___x_cmd pidofsubshell)"

    local ___X_CMD_SED_FZF_APP_DIR=
    case "${fp}" in
        -)
            ___X_CMD_SED_FZF_APP_DIR="$___X_CMD_ROOT_TMP/sed.${pidofsubshell}.d"
            ___x_cmd mkdirp "$___X_CMD_SED_FZF_APP_DIR"
            ___x_cmd_cmds cat               > "$___X_CMD_SED_FZF_APP_DIR/source"
            ;;
        *)
            ___X_CMD_SED_FZF_APP_DIR="${fp}.sed.${pidofsubshell}.d"
            ___x_cmd mkdirp "$___X_CMD_SED_FZF_APP_DIR"
            ___x_cmd_cmds cat "${fp}"       > "$___X_CMD_SED_FZF_APP_DIR/source"
    esac

    (
    trap '___x_cmd rmrf "$___X_CMD_SED_FZF_APP_DIR";' EXIT

    fpfolder="$___X_CMD_SED_FZF_APP_DIR"        \
    ___x_cmd fzf                                \
        --header="<Please type sed arguments>"  \
        --reverse --no-info --height='80%'      \
        --query="" --print-query               \
        --preview-window='down,99%'             \
        --preview='x sed --fzfapppreview "$fpfolder" {q} 2>/dev/null' <<A
A
    )

}

___x_cmd_sed___fzfapppreview(){
    local fp="$1";  shift
    {
        eval ___x_cmd_cmds sed "$1" <"$fp/source" || {
            printf "\n\n=== %s ===\n\n" "Content of file : $fp/source"
            ___x_cmd_cmds cat "$fp/source"
        }
    } 2>&1 | ___x_cmd_cmds head -n 2000
}

