# shellcheck shell=sh disable=SC3043

# https://cargo.budshome.com/reference/source-replacement.html#:~:text=目前国内%20cargo,镜像源有：中国科学技术大学源、上海交通大学源、清华大学源，以及%20rustcc%20社区源%E3%80%82

___x_cmd_proxy_cargo(){
    param:subcmd ___x_cmd_proxy_cargo \
        url             "Provide url of mirror candidates" \
        get             "Get current mirror" \
        "replace|set"   "Set the download mirror" \
        rollback        "Rollback the download mirror"
    param:subcmd:try
    param:run
    
    if ! command -v cargo >/dev/null; then
        proxy:error "command not found. cargo, you should install cargo in your system."
        return 1
    else
        ___x_cmd_proxy___util_current_mirror cargo
    fi
}

___x_cmd_proxy_cargo_url(){
    param:dsl <<A
option:
    #1    "Mirror name"       <mirror-name>=tuna    = tuna sjtu
A
    param:run
    
    case "$1" in
        tuna)       printf "https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git" ;;
        # FIXME: ustc is not working
        # ustc)       printf "https://mirrors.ustc.edu.cn/crates.io-index"                  ;;
        sjtu)       printf "https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/"       ;;
    esac
}

___x_cmd_proxy_cargo_get(){
    param:void
    local res
    if res="$(< "$HOME/.cargo/config" grep registry)" && [ -n "$res" ]; then
        printf "%s\n" "$res" | awk -F '"' '{print $2}'
    else
        proxy:error "No mirror is set. You can use 'proxy cargo replace <mirror-name>' to set a mirror."
        return 1
    fi
}

___x_cmd_proxy_cargo_replace() {
    param:dsl <<A
option:
    #1    "Mirror name"       <mirror-name>=tuna    = tuna sjtu
A
    param:run

    local src_path
    src_path="$HOME/.cargo/config"
    if [ ! -f "$src_path" ]; then
        printf "" > "$src_path"
    fi
    ___x_cmd_proxy___backup "$src_path" cargo

    local url
    local src
    src="${1}"

    if url="$(___x_cmd_proxy_cargo_url "$src")"; then
        proxy:info "Setting cargo mirror $url"
        printf "[source.crates-io]\nreplace-with='%s'\n[source.%s]\nregistry=\"%s\"" "$src" "$src" "$url" > "$src_path"
    else
        proxy:error "Failed to get url of mirror: $src"
    fi
}

___x_cmd_proxy_cargo_rollback() {
    param:dsl <<A
advise:
    #1          xrc proxy/lib/advise && ___x_cmd_proxy___advise_rollback_ls cargo
option:
    #1          "use the selected file to rollback"
subcommand:
    ls          "list all file you can rollback"
A
    param:run

    if [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_cargo_rollback_"${PARAM_SUBCMD}" "$@"
        return
    else
        ___proxy_rollback "$HOME/.cargo/config" cargo "$1"
    fi    
}

___x_cmd_proxy_cargo_rollback_ls() {
    param:void
    ___proxy_rollback_ls cargo
}
