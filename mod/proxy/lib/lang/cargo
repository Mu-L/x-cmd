# shellcheck shell=sh disable=SC3043

# https://cargo.budshome.com/reference/source-replacement.html#:~:text=目前国内%20cargo,镜像源有：中国科学技术大学源、上海交通大学源、清华大学源，以及%20rustcc%20社区源%E3%80%82

___x_cmd_proxy_cargo(){
    param:subcmd ___x_cmd_proxy_cargo \
        ls              "List all the mirrors" \
        current         "Get current mirror" \
        "replace|set"   "Set the download mirror" \
        rollback        "Rollback the download mirror"
    param:subcmd:try
    param:run

    x hascmd cargo || N=proxy M="[command=cargo] not found." log:ret:1
    [ "$#" -eq 0 ] || {
        ___x_cmd_proxy___util_subcmd_invalid cargo "$@"
        return 1
    }

    local _SELECT
    x ui select "_SELECT" \
        "Methods:" \
            "Set cargo mirror (default is tuna)" \
            "Get current cargo mirror" \
            "List all the cargo mirror candidates" \
            "Rollback the cargo mirror to the original official"
    
    case "$_SELECT" in
        1)  ___x_cmd_proxy_cargo_replace       ;;
        2)  ___x_cmd_proxy_cargo_get           ;;
        3)  ___x_cmd_proxy_cargo_ls            ;;
        4)  ___x_cmd_proxy_cargo_rollback      ;;
        *)  proxy:info "Canceled" ; return 1 ;;
    esac

}

___x_cmd_proxy_cargo_ls(){
    param:void

    printf "%s\n" \
        "Code          Url                                                                Name"                 \
        "tuna          https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git       清华大学开源软件镜像站"  \
        "sjtu          https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/             上海交通大学开源软件镜像站"
}

___x_cmd_proxy_cargo_current(){
    param:void
    local res
    if res="$(< "$HOME/.cargo/config" grep registry)" && [ -n "$res" ]; then
        printf "%s\n" "$res" | ___x_cmd_cmds_awk -F '"' '{print $2}'
    else
        proxy:error "No mirror is set. You can use 'proxy cargo replace <mirror-name>' to set a mirror."
        return 1
    fi
}

___x_cmd_proxy_cargo___url(){
    ___x_cmd_proxy_cargo_ls | \
        ___x_cmd_cmds_awk -v name="$1" 'NR>1 && $1 == name { print $2 ; exit 0;}'
}

# shellcheck disable=SC2120
___x_cmd_proxy_cargo_replace() {
    param:dsl <<A
option:
    #1    "Mirror name"       <mirror-name>=tuna    = tuna sjtu
A
    param:run

    local src_path
    src_path="$HOME/.cargo/config"
    if [ ! -f "$src_path" ]; then
        printf "" > "$src_path"
    fi
    ___x_cmd_proxy___backup "$src_path" cargo

    local url
    local src
    src="${1}"

    if url="$(___x_cmd_proxy_cargo___url "$src")"; then
        #TODO: Ask a question to confirm
        proxy:info "Setting cargo mirror $url"
        printf "[source.crates-io]\nreplace-with='%s'\n[source.%s]\nregistry=\"%s\"" "$src" "$src" "$url" > "$src_path"
        proxy:info "Done"
    else
        proxy:error "Failed to get url of mirror: $src"
    fi
}

# shellcheck disable=SC2120
___x_cmd_proxy_cargo_rollback() {
    param:dsl <<A
option:
    #1          "use the selected file to rollback"
subcommand:
    ls          "list all file you can rollback"
A
    param:run

    if [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_cargo_rollback_"${PARAM_SUBCMD}" "$@"
        return
    else
        ___proxy_rollback "$HOME/.cargo/config" cargo "$1"
    fi    
}

___x_cmd_proxy_cargo_rollback_ls() {
    param:void
    ___proxy_rollback_ls cargo
}
