# shellcheck shell=dash
___X_CMD_SCOOP_IS_AVAILABLE=
___x_cmd_scoop___env_available(){

    [ -z "$___X_CMD_SCOOP_IS_AVAILABLE" ] || return 0

    [ -f "/proc/version" ] || return 1

    local x_=; x os name_

    if [ "$x_" = "win" ]; then
        ___X_CMD_SCOOP_IS_AVAILABLE=1
        return 0
    fi

    local wsl=; read -r wsl </proc/version
    case "$wsl" in
        *WSL2*)
            ___X_CMD_SCOOP_IS_AVAILABLE=1
            return 0 ;;
    esac

    return 1
}

___x_cmd_scoop_path_add___scoop2path(){
    local user_file=; local scoop_path=
    user_file="$(x pwsh -Command Write-Host \$env:USERPROFILE)" 2>/dev/null
    user_file="${user_file##*\\}"

    if [ -d /mnt ]; then
        scoop_path="/mnt/c/Users/$user_file/scoop/shims"
    else
        scoop_path="/c/Users/$user_file/scoop/shims"
    fi
    [ -d "$scoop_path" ] || return 1
    x path add_existed_folder "$scoop_path"
}

___x_cmd_scoop_path_add___scoop(){

    ! ___x_cmd_scoop_path_add___scoop2path || return

    local userprofile
    scoop:info "Loading scoop for the first time"

    userprofile="$(x pwsh "echo \$env:USERPROFILE"|sed 's/^\([A-Z]\):/\L\1/' )"
    userprofile="$(x pwsh path win_to_linux "$userprofile" )"

    if [ -d "/mnt" ]; then
        local scoop_path="/mnt/$userprofile/scoop/shims"
        local scoop_global="/mnt/c/ProgramData/scoop"
    else
        local scoop_path="$userprofile/scoop/shims"
        local scoop_global="c/ProgramData/scoop"
    fi

    for i in "$SCOOP" "$SCOOP_GLOBAL" "$scoop_path" "$scoop_global" ; do
        [ -d "$i" ] || continue
        x path add_existed_folder "$i"
        break
    done

    [ -d "$i" ] || ___x_cmd_scoop___install || return 1
    x path add_existed_folder "$scoop_path"
}

