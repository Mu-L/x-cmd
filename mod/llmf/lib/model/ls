# shellcheck shell=dash

___x_cmd_llmf_model_ls(){
    local scope=all
    local format=app
    while [ $# -gt 0 ]; do
        case "$1" in
            -j|--json)      format=json     ;;
            -c|--csv)       format=csv      ;;
            --app)          format=app      ;;

            --all)          scope=all       ;;
            --local)        scope=local     ;;
            *)              break ;;
        esac
        shift
    done

    if [ "$scope" = all ]; then
        ___x_cmd_llmf_model_ls___"$format" --all
    else
        ___x_cmd_llmf_model_ls___"$format" --local
    fi
}

# Section: inner
___x_cmd_llmf_model_ls___json(){
    local dir=""
    case "$1" in
        --local) dir="$___X_CMD_ROOT_DATA/llmf/model/data" ;;
        *)       dir="$___X_CMD_PKG_ROOT_PATH/metadata/$___X_CMD_PKG_VERSION/llmf" ;;
    esac
    [ -d "$dir" ] || N=llmf M="Data is empty" log:ret:1
    x fsiter "$dir" | ___x_cmd_llmf_model_ls___json_inner
}

___x_cmd_llmf_model_ls___json_inner(){
    local dir="$___X_CMD_PKG_ROOT_PATH/metadata/$___X_CMD_PKG_VERSION/llmf"
    [ -d "$dir" ] || return
    x cawk  -v dirpath="$dir"       \
            -m j/json,j/jiter,j/jcp \
            -f "$___X_CMD_ROOT_MOD/llmf/lib/awk/parse.awk"
}

___x_cmd_llmf_model_ls___csv(){
    ___x_cmd_llmf_model_ls___json "$@" | x cawk -m j/json,j/jiter,csv -f "$___X_CMD_ROOT_MOD/llmf/lib/awk/json2csv.awk"
}

___x_cmd_llmf_model_ls___app(){
    local op="$1"; [ "$#" -le 0 ] || shift
    local ___X_CMD_CSV_APP_DATA; ___X_CMD_CSV_APP_DATA="$( ___x_cmd_llmf_model_ls___csv "$op" )" || return
    [ -n "$___X_CMD_CSV_APP_DATA" ] || N=llmf M="Data is empty" log:ret:1
    x csv app "$@"
}

# EndSection
