# shellcheck shell=sh disable=SC3043,2097,2012,2098,2181

# In the future. We should use docker to build.
___x_cmd_scotty_mod_build()(
    param:void

    local mod="$1"
    [ -n "$mod" ] || mod="$(___x_cmd_scotty_mod_name)" || {
        scotty:error "Cannot detect module name in PWD=$PWD"
        return 1
    }

    log:sub:init -i "build-$mod" scotty "building mod=$mod"

    ___x_cmd_scotty_mod_build___advise "$mod"
    ___x_cmd_scotty_mod_build___demo "$mod"
)

xrc advise/latest

___x_cmd_scotty_mod_build___advise()(
    local mod="${1:?Provide module name}"
    scotty:info "generate advise.jso for ${mod}"
    if ___x_cmd_advise_gen_advise "$mod" "$PWD"; then
        scotty:info "advise.jso is generated"
    else
        local code="$?"
        scotty:error "Fail to generate jso for ${mod}. Exit Code is $code"
        # TODO: exit 1 in the future
        # x:info "Finish scotty build."
        if [ ! -f "res/advise.jso" ]; then
            scotty:error "Finish scotty build but res/advise.jso NOT found. Please contact the module owner."
            # TODO: Will removed in the future.
            x touch res/advise.jso
            printf "%s\n%s\n" "{" "}" > res/advise.jso
            # exit 1
        fi
    fi
)

___x_cmd_scotty_mod_build___demo()(
    local mod="${1:?Provide module name}"
    local p=adv/demo
    [ -d "$p" ] || {
        scotty:info "return 0 but demo folder not found. "
        return 0
    }

    [ -z "$___X_CMD_SCOTTY_MOD_BUILD_DEMO_FORCE" ] || {  x rmrf ".demo"; x mkdirp ".demo";   }
    local i; for i in "${p}"/*.yml; do
        name="${i##*/}"
        name="${name%.yml}"
        scotty:info "x rmrf .demo/${name}.speg; x script apply $i .demo/${name}.speg 2>/dev/null"
        [ -n "$___X_CMD_SCOTTY_MOD_BUILD_DEMO_FORCE" ] || continue
        x rmrf ".demo/${name}.speg"
        x script apply "$i" ".demo/${name}.speg" 2>/dev/null || N="scotty" M="fail to generate demo for $mod" log:ret:1
    done

    scotty:info "all demo are generated"
)

