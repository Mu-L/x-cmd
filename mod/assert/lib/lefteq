# shellcheck shell=dash disable=SC2016

xrc cama

___x_cmd_assert_main_within(){
    [ "$#" -gt 0 ]                          || M="ERROR: Please provide candidate list."        assert:return 1
    local V="$1"; shift
    ___x_cmd_is_within "$V" "$@"            || M="$V not equal any of [ $* ]"                   assert:return 1
}

___x_cmd_assert_main_case(){
    [ "$#" -gt 0 ]                          || M="ERROR: Please provide candidate list."        assert:return 1
    local V="$1"; shift
    ___x_cmd_cama "$V" "$@"                 || M="$V not match any case [ $* ]"                 assert:return 1
}

___x_cmd_assert_main_regex(){
    [ "$#" -gt 0 ]                          || M="ERROR: Please provide candidate list."        assert:return 1
    local V="$1"; shift 
    ___x_cmd_is_within_regex "$V" "$@"      || M="ERROR: '$V' NOT match any regex defined"      assert:return 1
}

# Using V and SEP
___x_cmd_assert_main_withinlist(){
    [ "$#" -gt 0 ]                            || M="ERROR: Please provide candidate list."        assert:return 1
    local V="$1"; shift
    local e; while ___x_cmd_isplit; do
        [ -n "$e" ] || continue
        ___x_cmd_assert_main_within "$e" "$@" || return
    done
}

___x_cmd_assert_main_incaselist(){
    [ "$#" -gt 0 ]                          || M="ERROR: Please provide case list."             assert:return 1
    local V="$1"; shift
    local e; while ___x_cmd_isplit; do
        [ -n "$e" ] || continue
        ___x_cmd_assert_main_case "$e" "$@" || return
    done
}

___x_cmd_assert_main_reglist(){
    [ "$#" -gt 0 ]                          || M="ERROR: Please provide candidate list."        assert:return 1     
    local V="$1"; shift
    local e; while ___x_cmd_isplit; do
        [ -n "$e" ] || continue
        ___x_cmd_assert_main_regex "$e" "$@" || return
    done
}