
___x_cmd_python_co(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    local user_message="$___X_CMD_CHAT_PROMPT_CODE
        IMPORTANT: ONLY COMMAND LINE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: running the file hi.py
        python hi.py

        Example: running the http server for folder sharing on folder /var/share
        python -m http.server --directory /var/share

        prompt: $*
    "
    local msg; msg='{
        role: user,
        content: '$(x chat --jqu "$user_message")'
    }'

    # Consider refine the code ...
    x chat -n 0 --request co,python "" "$msg"
}

# using the python facility to test the code 

___x_cmd_python_coco(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    local user_message="$___X_CMD_CHAT_PROMPT_CODE
        IMPORTANT: ONLY PYTHON CODE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: create a file named 'test.txt' with the content 'hello world'
        with open('test.txt', 'w') as f:
            f.write('hello world')

        Example: use requests to get the content of a website
        import requests
        r = requests.get('https://www.google.com')
        print(r.text)

        prompt: $*
    "
    local msg; msg='{
        role: user,
        content: '$(x chat --jqu "$user_message")'
    }'

    # Consider refine the code ...
    code=$(x chat -n 0 --request coco,python "" "$msg")

    local feedback
    feedback=$(printf "%s\n" "$code" | x python --compile-pipe) || {
        {
            printf "Linting fail. Here is the feedback:"
            printf "%s\n" "$feedback" 
        } >/dev/tty
        
        while true; do
            x ui select "" "what's next" "Send feedback to ai for better answer" "view the feed back and code" "Exit" || {
                co:error "Recv interrupts. Exit"
                return 130
            }
            case "$___X_CMD_UI_SELECT_RET" in
                1) 
                    # x chat -n 0 --request coco,python "$feedback" "$msg"
                    # 
                    x:error "Unsuported"
                    return 1
                    ;;
                2)  printf "%s\n" "$code" | x bat -l python ;;
                3)  return 1 ;;
            esac
        done
    }

    printf "%s\n" "$code" | x bat -l python 
    x ui yesno "Do you want to run the code" || return 0        # default is no.

    printf "%s\n" "$code" | x python
}
