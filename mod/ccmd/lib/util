
# Section: exection

___x_cmd_ccmd_which_(){
     [ "$#" -ne 0 ] || {
        ccmd:error "Please provide command to locate the cache."
        return 1
    }

    local filepath="${___X_CMD_CCMD_CACHEPATH:-$___X_CMD_CCMD_CACHEPATH_DEFAULT}"
    local IFS=" "; ___X_CMD_CCMD_WHICH_="$filepath/$(___x_cmd_str_md5 "$*")"
    # TODO: whether to find out [ -f "$___X_CMD_CCMD_WHICH_" ] ...
}

___x_cmd_ccmd_which(){
    local ___X_CMD_CCMD_WHICH_
    ___x_cmd_ccmd_which_ "$@" || return
    printf "%s\n" "$___X_CMD_CCMD_WHICH_"
}

___x_cmd_ccmd_invalidate(){
    local ___X_CMD_CCMD_WHICH_
    ___x_cmd_ccmd_which_ "$@" || return

    ccmd:debug "Removing cache file for: $*"
    # printf "%s\n" "$filepath"

    [ ! -f "$___X_CMD_CCMD_WHICH_" ] || rm "$___X_CMD_CCMD_WHICH_"
}

___x_cmd_ccmd_clear(){
    local FILEPATH="${___X_CMD_CCMD_CACHEPATH:-$___X_CMD_CCMD_CACHEPATH_DEFAULT}"
    # zsh rm -f requires confirmation
    [ -d "$FILEPATH" ] || return
    [ -z "$(ls "$FILEPATH")" ] || eval "$(command -v rm) -f $FILEPATH/*"
}

# EndSection

# Section: object

# If you want a new environment for script
___x_cmd_ccmd_setup(){
    ___X_CMD_CCMD_CACHEPATH="${1:-"$(mktemp)"}"
    x mkdirp "$___X_CMD_CCMD_CACHEPATH"
}

# Remember teardown if you have setup
___x_cmd_ccmd_teardown(){
    x rmrf "$___X_CMD_CCMD_CACHEPATH"
    unset ___X_CMD_CCMD_CACHEPATH
}

# EndSection

___x_cmd_str_md5(){
    if command -v md5 >/dev/null 2>&1; then
        ___x_cmd_str_md5(){
            if [ -z "$1" ]; then
                md5 | cut -d ' ' -f 1
            else
                printf "%s" "$1" | md5 | cut -d ' ' -f 1
            fi
        }
    elif command -v md5sum >/dev/null 2>&1; then
        ___x_cmd_str_md5(){
            if [ -z "$1" ]; then
                md5sum | cut -d ' ' -f 1
            else
                printf "%s" "$1" | md5sum | cut -d ' ' -f 1
            fi
        }
    else
        ccmd:error "No MD5 Found."
        return 1
    fi

    ___x_cmd_str_md5 "$@"
}

