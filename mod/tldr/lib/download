# shellcheck shell=dash

# Section: current and download

___x_cmd_tldr_current_or_update_(){
    x_tldr_version="${___X_CMD_TLDR_VERSION:-"$(___x_cmd_tldr_version)"}"
    if [ -n "$x_tldr_version" ]; then
        ___X_CMD_TLDR_VERSION="$x_tldr_version"
    elif ___x_cmd_tldr_update; then
        x_tldr_version="$___X_CMD_TLDR_VERSION"
    else
        ___X_CMD_TLDR_VERSION=
        tldr:error "Fail to show version for tldr pages"
        return 1
    fi
}

___x_cmd_tldr_current_or_update(){
    local x_tldr_version
    ___x_cmd_tldr_current_or_update_
    [ -n "$x_tldr_version" ] || return 1
    printf "%s\n" "$x_tldr_version"
}

___x_cmd_tldr_version___from_yml(){
    arg:init tldr
    [ -f "$1" ] || M="Please provide the tldr version index yml" arg:ret:64
    < "$1" awk '
($2 !~ /v[0-9]+\.[0-9]+(\.[0-9])?/) { exit(1); }
{print($2); exit(0);}
'
}

___x_cmd_tldr_version(){
    local index="$___X_CMD_TLDR_TMP_DATA/index.yml"
    [ -f "$index" ] || return 1

    ___x_cmd_tldr_version___from_yml "$index" || {
        tldr:error --version "$(awk '{print $2; exit(1); }' <"$index")" "Latest version in index.yml is invalid"
        return 1
    }
}

___x_cmd_tldr_update(){
    ___x_cmd___tldr_download index.yml "$___X_CMD_TLDR_TMP_DATA/index.yml" - || return
    ___X_CMD_TLDR_VERSION="$(___x_cmd_tldr_version)"
    ___x_cmd___tldr_download_pages "$___X_CMD_TLDR_VERSION" pages
}

___x_cmd___tldr_download_pages(){
    arg:init tldr
    [ -n "$1" ] || M="Please provide the tldr version" arg:ret:64
    [ -n "$2" ] || M="Please provide the tldr pages" arg:ret:64

    local version="$1"
    local page_lang="$2"
    local data_path="$___X_CMD_TLDR_TMP_DATA/$version/$page_lang"
    local tgz_path="$___X_CMD_TLDR_TMP_CACHE/$version/$page_lang.tgz"
    x mkdirp "$data_path"

    ___x_cmd___tldr_download "$version/$page_lang.tgz" "$tgz_path" "0" || {
        x rmrf "$data_path"
        return 1
    }
    ! x uz "$tgz_path" "$data_path" || tldr:info "Version already UPDATED to $version"
}

___x_cmd___tldr_download(){
    arg:1:nonempty
    local src="$1"
    local dst="${2:-$1}"
    local expiration="${3:-"1"}"
    tldr:info "Download tldr $src from x-cmd/tldr"
    ___x_cmd_httpget_gitx x-cmd tldr main "dist/$src" "$dst" "$expiration" || {
        tldr:error "Fail to download $src from x-cmd/tldr"
        return 1
    }
}

## EndSection
