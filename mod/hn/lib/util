# shellcheck shell=dash

# Section: data

___X_CMD_HN_CACHE___TIMELIMIT=1d

___X_CMD_HN_CACHE___TIMELIMIT_QUICK=1m

___X_CMD_HN_CACHE_STORE="$___X_CMD_ROOT_CACHE/hn/story"
___x_cmd_hn___top_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty"
}

___x_cmd_hn___new_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty"
}

___x_cmd_hn___best_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/beststories.json?print=pretty"
}

___x_cmd_hn___ask_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/askstories.json?print=pretty"
}

___x_cmd_hn___show_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/showstories.json?print=pretty"
}

___x_cmd_hn___job_data(){
    x ccmd "$___X_CMD_HN_CACHE___TIMELIMIT_QUICK" -- x curl -m 2 -L -sS "https://hacker-news.firebaseio.com/v0/jobstories.json?print=pretty"
}

# If the data already exists, then stop

___x_cmd_hn___story_data(){
    ___x_cmd_hn___story_datainbulk "$@" || return
    local arg=""; local datadir="$___X_CMD_HN_CACHE_STORE"; local datafile=""; local x_
    local id; for id in "$@"; do
        datafile="$datadir/${id}.json"; x_=""
        [ ! -f "$datafile" ] || x rat_ "$datafile"
        [ -n "$x_" ] || printf "%s\n" "{}"
        printf "%s\n" "$x_"
    done
}

___x_cmd_hn___story_datainbulk(){
    local arg=""; local datadir="$___X_CMD_HN_CACHE_STORE"; local datafile=""
    local id; for id in "$@"; do
        datafile="$datadir/${id}.json"
        [ ! -f "$datafile" ] || ! x fileage --in "$___X_CMD_HN_CACHE___TIMELIMIT" "$datafile" || continue
        arg="$arg $id"
    done
    [ -n "$arg" ] || return 0
    eval ___x_cmd_hn___story_datainbulk_curl "$arg"
}

___x_cmd_hn___story_datainbulk_curl(){(
    [ "$#" -gt 0 ] || return
    local arg=""; local url=""; local datadir="$___X_CMD_HN_CACHE_STORE";
    x mkdirp "$datadir"
    ___x_cmd_inner_cd "$datadir"  # datadir is where the json stored
    local id; for id in "$@"; do
        url="https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty"
        arg="$arg \"$url\" -o \"${id}.json\""
    done
    hn:info -c "x curl -m 3 -L -sS $arg" "datainbulk" # 2>>"$HOME/hn.log"
    eval x curl -L -sS "$arg"
)}

___x_cmd_hn___browse(){
    local url="https://news.ycombinator.com/item?id=$1"
    hn:info "Open $url with the browser"
    x browse "$url"
}

___x_cmd_hn___browselink(){
    ___x_cmd_hn___story_data "$1" | x jo env . .url -- '
    [ -n "$url" ] || {
        hn:error "No link-git surl for $1"
        return 1
    }
    hn:info "Open $url with the browser"
    x browse "$url"
    '
}

___x_cmd_hn___live_data(){
    local type="${1:-top}"
    case "$type" in
        new|top|best|ask|show|job)  ;;
        *)  N=hn M="Not found such [type=$type]" log:ret:64 ;;
    esac

    local start_num=1; local end_num=30
    case "$2" in
        [1-9]*,[1-9]*)
            start_num="${2%%,*}"
            end_num="${2#*,}"
            ;;
        [1-9]*)
            end_num="${2}"
            ;;
        "") ;;
        *) N=hn M="Please provide an integer num" log:ret:64 ;;
    esac

    start_num=$((start_num + 0))
    end_num=$((end_num + 0))
    hn:info "live data [type=$type] [start=$start_num] [end=$end_num]" # 2>>"$HOME/hn.log"

    local id=""; local arg=""
    ___x_cmd_hn___"$type"_data | x jo list2line | ___x_cmd_cmds sed -n "${start_num},${end_num}p" | {
        while read -r id; do
            hn:debug "[type=$type] [id=$id]"
            arg="$arg $id"
        done
        eval ___x_cmd_hn___story_data "$arg"
    }
}

# EndSection

# Section: style
___x_cmd_hn___json_style(){
    x jo
}

___x_cmd_hn___csv_style(){
    printf "%s\n" "title,score,by,time,id,descendants,url,type,kids,text"
    x ja jl2c .title .score .by .time .id .descendants .url .type .kids .text
}

___x_cmd_hn___preview_style(){
    NO_COLOR="$NO_COLOR" \
    x cawk -m j/json,j/jiter,date,ui/ui \
        -f "$___X_CMD_ROOT_MOD/hn/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/hn/lib/awk/preview.awk"
}

# EndSectionl
