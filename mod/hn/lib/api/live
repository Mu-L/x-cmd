# shellcheck shell=dash

# In 1min ...
___x_cmd_hn_live(){
    local type="${1:-top}"
    local style="${2:-app}"
    local num="${3:-10}"
    case "$style" in
        -h|--help)  x help -m hn "$type" ;;

        app)        ___x_cmd_hn___app "$type" ;;
        csv)        ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_csv_style ;;
        json)       ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_json_style ;;
        *)          ___x_cmd_hn_live___data "$type" "$num" | ___x_cmd_hn___story_preview_style ;;
    esac
}

___x_cmd_hn_item(){
    local X_help_cmd="x help -m hn item"; help:arg-null:parse
    local id="${1}"
    local op="${2}"
    [ -n "$id" ] || N=hn M="Please provide the item id" log:ret:64

    if [ -z "$op" ]; then
        ___x_cmd_is_interactive || N=hn M="Please provide the item [style=preview|browse|json|csv]" log:ret:64
        x ui select op "Select the item style"         \
            "browse: Open Hacker News comment page"    \
            "link: Open the article link page"         \
            "preview: Preview in current terminal"     \
            "json: Output json format"                 \
            "csv: Output csv format"
    fi

    case "$op" in
        browse|1)   ___x_cmd_hn___browse        "$id" ;;
        link|2)     ___x_cmd_hn___browselink    "$id" ;;
        preview|3)  ___x_cmd_hn___story_data    "$id" | ___x_cmd_hn___story_preview_style ;;
        json|4)     ___x_cmd_hn___story_data    "$id" | ___x_cmd_hn___story_json_style ;;
        csv|5)      ___x_cmd_hn___story_data    "$id" | ___x_cmd_hn___story_csv_style ;;
        *)          hn:warn "This display [style=$op] is not supported yet" ;;
    esac
}

___x_cmd_hn_live___data(){
    local type="${1:-top}"
    case "$type" in
        new|top|best|ask|show|job)  ;;
        *)  N=hn M="Not found such [type=$type]" log:ret:64 ;;
    esac

    local start_num=1; local end_num=30
    case "$2" in
        [1-9]*,[1-9]*)  start_num="${2%%,*}";   end_num="${2#*,}"   ;;
        [1-9]*)                                 end_num="${2}"      ;;
        "") ;;
        *)              N=hn M="Please provide an integer num" log:ret:64 ;;
    esac

    start_num=$((start_num + 0))
    end_num=$((end_num + 0))
    hn:info "live data [type=$type] [start=$start_num] [end=$end_num]" # 2>>"$HOME/hn.log"

    local id=""; local arg=""
    ___x_cmd_hn___"$type"_data | x jo list2line | ___x_cmd_cmds sed -n "${start_num},${end_num}p" | {
        while read -r id; do
            hn:debug "[type=$type] [id=$id]"
            arg="$arg $id"
        done
        eval ___x_cmd_hn___story_data "$arg"
    }
}
