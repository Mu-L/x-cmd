# shellcheck shell=dash
___x_cmd_hn___app(){
    local x_=; x tui position get_ hn
    local ___X_CMD_TUI_HN_POSITION="$x_"

    ___x_cmd_tui_app_processer(){ ___x_cmd_hn___app_processer "$@"; }
    local per_page=15
    x tty update
    [ "$LINES" -ge 28 ] || per_page=10

    local type="${1:-top}"
    local style="${2}"
    local ___X_CMD_TUI_TABLE_FINAL_COMMAND=; local ___X_CMD_TUI_TABLE_ID=; local ___X_CMD_TUI_CURRENT_HN_POSITION=
    local _exitcode=0
    hn:info "Fetching Hacker News $type posts info"
    ___X_CMD_TUI_HN_POSITION="$___X_CMD_TUI_HN_POSITION" \
    x tui bigapp --clear-on-exit \
        -f "$___X_CMD_ROOT_MOD/tui/lib/eg.comp/table.comp.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/date.awk" \
        -f "$___X_CMD_ROOT_MOD/hn/lib/awk/app.awk"

    case "$___X_CMD_TUI_TABLE_FINAL_COMMAND" in
        "ENTER")
            [ -z "$___X_CMD_TUI_TABLE_ID" ] || ___x_cmd_hn___item "$___X_CMD_TUI_TABLE_ID" "$style"
            ;;
    esac

    _exitcode="$?"
    unset -f ___x_cmd_tui_app_processer
    x tui position store hn "$___X_CMD_TUI_CURRENT_HN_POSITION"
    return "$_exitcode"
}

___x_cmd_hn___app_processer(){
    case "$1" in
        data:total_count)
            local x_=; x str trim_ "$(___x_cmd_hn___"${type}"_data | x jo list2line | ___x_cmd_cmds wc -l)"
            x_=$((x_ + 0))
            printf "%s\n" "data:total_count:${x_}"
            ;;
        data:request:*)
            ___x_cmd_hn___app_datarequest "$type" "${1#*data:request:}" "$per_page"
            ;;
        x:browse:*)
            ___x_cmd_hn___browse "${1#"x:browse:"}"
            ;;
        x:browselink:*)
            ___x_cmd_hn___browselink "${1#"x:browselink:"}"
            ;;
    esac
}

___x_cmd_hn___app_datarequest(){
    local type="${1:-top}"
    local signal="${2:-1}";
    local per_page="${3:-10}"
    local page; local start; local end
    page=$(( (signal-1)/per_page  + 1 ))
    start=$(( (page-1)*per_page  + 1 ))
    end=$((start + per_page - 1))
    local data=; data="$(___x_cmd_hn___live_data "$type" "${start},${end}")" || return
    if [ -n "$data" ]; then
        printf "%s\n%s\n" "data:start:${start}" "$data"
    else
        printf "%s\n" "errexit:Data not found"
    fi
}
