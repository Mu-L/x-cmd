# shellcheck shell=dash
# this is a moduel to honor x-bash/chat module

xrc chat
xrc:mod:lib     moonshot      chat/send chat/exec

___x_cmd_moonshot_chat(){
    local X_help_cmd='x help -m moonshot chat'; help:arg:parse
    local op="$1";
    case "$op" in
        request|preparehistory|exec)
            shift; ___x_cmd_moonshot_chat_"$op" "$@" ;;
        *)  N=moonshot M="Not support such option '$op'" log:ret:64
    esac
}

___x_cmd_moonshot_chat_request(){
    local X_help_cmd='x help -m moonshot chat request'; help:arg:parse
    ___x_cmd chat --exec --provider moonshot "$@"
}

___x_cmd_moonshot_chat_request___launch(){
    local content_dir
    read -r content_dir

    ___x_cmd_moonshot_chat_request___trapexit(){
        moonshot:debug "Remove chat.running file"
        x rmrf "$content_dir/chat.running"
    }

    printf "%s\n" $$ >"$content_dir/chat.running"
    trap '___x_cmd_moonshot_chat_request___trapexit' EXIT

    {
        read -r model

        local requestbody
        read -r requestbody
        if [ -z "$count_token" ]; then
            x retry --max 2 --interval 3 ___x_cmd_moonshot_chat_request___try
        else
            x retry --max 2 --interval 3 ___x_cmd_moonshot_count_token_app "$requestbody"
        fi
    } || {
        ___x_cmd_moonshot_chat_request___trapexit
        return 1
    }
}

___x_cmd_moonshot_chat_request___try(){
    moonshot:debug "Sending request to moonshot server"
    [ -z "$confirm_before_send" ] || {
        printf "%s\n" "$requestbody" | x j2y | x bat -l yml >/dev/tty
        x ui yesno "Do your want to send this message?" || return 0
    }

    {
        ___x_cmd ccmd "$cache_time" -- \
            ___x_cmd_moonshot_request_generaxwtecontent "$requestbody"
    } | {
        local interative=
        if ___x_cmd_is_interactive; then interative=1; fi

        local errcode=0
        x cawk  -E content_dir,interative         \
                -m j/json,j/jiter,j/jcp                                     \
                -f "$___X_CMD_ROOT_MOD/chat/lib/awk/history.awk"            \
                -f "$___X_CMD_ROOT_MOD/chat/lib/awk/util.awk"               \
                -f "$___X_CMD_ROOT_MOD/chat/lib/awk/minion.awk"             \
                -f "$___X_CMD_ROOT_MOD/chat/lib/awk/creq.awk"               \
                -f "$___X_CMD_ROOT_MOD/chat/lib/awk/cres.awk"               \
                -f "$___X_CMD_ROOT_MOD/moonshot/lib/awk/moonshot.awk"       \
                -f "$___X_CMD_ROOT_MOD/moonshot/lib/awk/moonshot_stream_output_util.awk"    \
                -f "$___X_CMD_ROOT_MOD/moonshot/lib/awk/handle_response.awk" || errcode=$?

        case $errcode in
            0)      ;;
            *)  x rmrf "$content_dir/moonshot.response.yml" "$content_dir/chat.response.yml" ;;
        esac
        return "$errcode"
    }
}

