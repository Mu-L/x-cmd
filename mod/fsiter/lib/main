# shellcheck shell=dash disable=2034

xrc arg
xrc:mod:lib     fsiter      ls

___x_cmd_fsiter___main(){
    arg:init fsiter 'x fsiter -h'
    [ "$#" -gt 0 ] || {
        ___x_cmd_fsiter___ls_main
        return
    }

    local op="$1";  shift
    case "$op" in
        --dfs)      ___x_cmd_fsiter___dfs "$@" ;;
        --help|-h)  M='fsiter' help:ret:0 ;;
        *)          ___x_cmd_fsiter___ls_main "$op" "$@" ;;
    esac
}

# TODO: We will add file path in the future.
if [ zsh != "$___X_CMD_SHELL" ]; then
___x_cmd_fsiter___dfs(){
    local ___x_cmd_fsiter_path="$1"
    local ___x_cmd_fsiter_depth="${2:-0}"
    local ___x_cmd_fsiter_maxdepth="${3:-0}"
    local ___x_cmd_fsiter_callback="$4"
    [ -d "$___x_cmd_fsiter_path" ]     || M="Please provide directory path" arg:ret:64
    [ -n "$___x_cmd_fsiter_callback" ] || M="Please provide callback" arg:ret:64

    [ "$___x_cmd_fsiter_depth" -le "$___x_cmd_fsiter_maxdepth" ] || return 0

    local i
    for i in "$___x_cmd_fsiter_path"/*; do
        [ -e "$i" ] || continue
        "$___x_cmd_fsiter_callback" "$i" || return
        [ -d "$i" ] || continue
        ___x_cmd_fsiter___dfs \
            "$i" $((___x_cmd_fsiter_depth + 1)) \
            "$___x_cmd_fsiter_maxdepth" \
            "$___x_cmd_fsiter_callback" || return
    done
}

else
# Section: zsh fsiter dfs
___x_cmd_fsiter___dfs(){
    local ___x_cmd_fsiter_path="$1"
    local ___x_cmd_fsiter_depth="${2:-0}"
    local ___x_cmd_fsiter_maxdepth="${3:-0}"
    local ___x_cmd_fsiter_callback="$4"
    [ -d "$___x_cmd_fsiter_path" ]     || M="Please provide directory path" arg:ret:64
    [ -n "$___x_cmd_fsiter_callback" ] || M="Please provide callback" arg:ret:64

    [ "$___x_cmd_fsiter_depth" -le "$___x_cmd_fsiter_maxdepth" ] || return 0

    local i
    ___x_cmd_fsiter___dfs_print \
        "$___x_cmd_fsiter_path" \
        "$___x_cmd_fsiter_depth" \
        "$___x_cmd_fsiter_maxdepth" | while read -r i ; do
        "$___x_cmd_fsiter_callback" "$i" || return
    done
}

___x_cmd_fsiter___dfs_print()(
    local ___x_cmd_fsiter_path="$1"
    local ___x_cmd_fsiter_depth="${2:-0}"
    local ___x_cmd_fsiter_maxdepth="${3:-0}"
    [ -d "$___x_cmd_fsiter_path" ]     || M="Please provide directory path" arg:ret:64
    [ "$___x_cmd_fsiter_depth" -le "$___x_cmd_fsiter_maxdepth" ] || return 0

    set +o nomatch
    local i
    for i in "$___x_cmd_fsiter_path"/*; do
        [ -e "$i" ] || continue
        printf "%s\n" "$i"
        [ -d "$i" ] || continue
        ___x_cmd_fsiter___dfs_print \
            "$i" $((___x_cmd_fsiter_depth + 1)) \
            "$___x_cmd_fsiter_maxdepth" || return
    done
)

# EndSection

fi

# ___x_cmd_fsiter___list_iter_ "$___X_CMD_ROOT_MOD/*/*"
___x_cmd_fsiter___list_iter_(){
    local search_path="$1";    local prefix="$2"
    [ -n "$search_path" ] || N=fsiter M="Please provide search path" log:ret:64
    x_=; local i; eval "
        for i in $search_path; do
            [ -f \"\$i\" ] || return
            i=\"\${i#\"\$prefix\"}\"
            x_=\"\${x_}\${i}\${___X_CMD_UNSEENCHAR_NEWLINE}\"
        done
    " 2>/dev/null
}
