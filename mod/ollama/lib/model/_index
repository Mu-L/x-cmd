# shellcheck shell=dash
xrc:mod:lib     ollama model/ls

___x_cmd_ollama_model(){
    [ "$#" -gt 0 ] || set -- --help
    ___x_cmd_ollama_is_installed || return
    local op="$1"; shift
    case "$op" in
        ls)                 ___x_cmd_ollama_model_ls           "$@" ;;
        set|get)            "___x_cmd_ollama_model_${op}"      "$@" ;;
        -d|download)        ___x_cmd_ollama_model_download     "$@" ;;
        -h|--help)          x help -m ollama model                  ;;
    esac
}

___x_cmd_ollama_model_set(){
    if [ -t 1 ] && ___x_cmd_is_interactive ; then
        local x_=
        ___x_cmd_storeread_ < "$___X_CMD_ROOT_MOD/ollama/lib/model/model.csv" x csv --app --width "25%,25%,25%,25%" --return print
        local model="${x_%%,*}"
        if [ -n "$model" ] ; then ___x_cmd_ollama_model_download "$model"
        else                     N=ollama M="Not found model"   log:ret:64;
        fi
    else
        local model="$1"
        [ -n "$model" ] || N=ollama M="Please provide a model name"   log:ret:64;

        x ollama --cfg set model="$model" || return

        ollama:info "The model has been set as $1"
    fi
}

___x_cmd_ollama_model_get(){
    local model=
    ___x_cmd_ollama_cur model:=  2>/dev/null
    printf "%s\n" "$model"
}

___x_cmd_ollama_model_download(){
   local model="$1"
    [ -n "$model" ] || N=ollama M="Please provide a model name"   log:ret:64;

    if ___x_cmd_ollama_model_has_model "$model"; then
        ollama:info "Already exists [model=$model]"
        return 0
    else
        ollama:info "Downloading: $model"
        ___x_cmd_ollama___bin pull "$model" || return
        ollama:info "Download sucessfully"
    fi
}
