# shellcheck shell=dash
___x_cmd_shodan_scan(){
    local X_help_cmd='x help -m shodan host';   help:arg-null:parse
    local op="$1";  shift
    case "$op" in
        ls|ll)      ___x_cmd_shodan_host_"$op"        "$@" ;;
        port)       ___x_cmd_shodan_host_port         "$@" ;;
        protocol)   ___x_cmd_shodan_host_protocol     "$@" ;;
        info)       ___x_cmd_shodan_scan_info         "$@" ;;
    esac
}
___x_cmd_shodan_scan_ls(){
    if ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_curl get "/shodan/scans?" | x y2j
    else
        ___x_cmd_shodan_curl get "/shodan/scans?"
    fi
}

___x_cmd_shodan_scan_ll(){
    ___x_cmd_shodan_curl get "/shodan/scans" |\
            x jo .matches.\* |\
            x ja 2c  .id .status .size .status_check  |\
            x csv header --add  Scan ID  Status  Size Timestamp |\
            x csv static_tab
}

___x_cmd_shodan_scan_port(){
    if ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_curl get "/shodan/ports?" | x j2y
    else
        ___x_cmd_shodan_curl get "/shodan/ports?"
    fi
}

___x_cmd_shodan_scan_protocol(){
    if ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_curl get "/shodan/protocols?" | x j2y
    else
        ___x_cmd_shodan_curl get "/shodan/protocols?"
    fi
}

___x_cmd_shodan_scan_create(){
    local ip="$1"; local param=
    [ -n "$ip" ] ||  N=shodan M="Provide a Notifier IP" log:ret:1
    param=" -d 'ips=${ip}'"
    ___x_cmd_shodan_curl post "/shodan/scan" "$param" | x j2y
}

___x_cmd_shodan_scan_add(){
    local ip="$1"; local port=; local port=

    while [ "$#" -gt 0 ]; do
        case "$1" in
            --protocol)
                    protocol="$2"; shift 2
                ;;
            --port)
                port="$2"; shift 2
                ;;
            *)
                N=shodan M="x shodan scan add --port <port> --protocol <protocol>" log:ret:1
                ;;
        esac
    done

       [ -n "$protocol" ] ||  N=shodan M="Provide a protocol" log:ret:1
       [ -n "$port" ] ||  N=shodan M="Provide a port" log:ret:1

    param=" -d 'port=${port}' -d 'protocol=${protocol}'"
    ___x_cmd_shodan_curl post "/shodan/scan/internet" "$param" | x j2y
}

___x_cmd_shodan_scan_info(){
    local id="$1"
    [ -n "$1" ] || N=shodan M="Provide a scan ID" log:ret:1
    if ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_curl get "/shodan/scan/${id}?" | x j2y
    else
        ___x_cmd_shodan_curl get "/shodan/scan/${id}?"
    fi
}
