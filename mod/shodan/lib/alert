# shellcheck shell=dash
___x_cmd_shodan_alert(){
    local op="$1";  shift
    case "$op" in
        ls|ll|info|\
        create|rm|triggers)      ___x_cmd_shodan_alert_"$op"            "$@" ;;
        edit|ed)                 ___x_cmd_shodan_alert_edit             "$@" ;;

        -h|--help)  x help -m shodan host                              "$@" ;;
    esac
}

___x_cmd_shodan_alert_ls(){
    shodan:info "Obtain a listing of all the network alerts that are currently active on the account"

    if  ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_curl get "/shodan/alert/info?"  | x j2y
    else
        ___x_cmd_shodan_curl get "/shodan/alert/info?"
    fi
}

___x_cmd_shodan_alert_ll(){
    shodan:info "Obtain a listing of all the network alerts that are currently active on the account"

    ___x_cmd_shodan_curl get "/shodan/alert/info" |\
        x jo 2c .name .id .filters.ip .has_triggers .expires |\
        x csv header --add  Name  ID  Ip  Has_triggers Expires |\
        x csv static_tab
}

___x_cmd_shodan_alert_info(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_info]"
    return 1
}

# generate for create rm triggers edit ed like ___x_cmd_shodan_alert_info

# This function is used to create a new alert
___x_cmd_shodan_alert_create(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_create]"
    return 1
}

# This function is used to remove an existing alert
___x_cmd_shodan_alert_rm(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_rm]"
    return 1
}

# This function is used to manage triggers for an alert
___x_cmd_shodan_alert_triggers(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_triggers]"
    return 1
}

# This function is used to edit an existing alert
___x_cmd_shodan_alert_edit(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_edit]"
    return 1
}

# This function is an alias for the edit function
___x_cmd_shodan_alert_ed(){
    shodan:error "Unsupported [function=___x_cmd_shodan_alert_ed]"
    return 1
}
