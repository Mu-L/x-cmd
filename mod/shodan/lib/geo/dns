# shellcheck shell=dash
# https://geonet.shodan.io/docs#/default/dns_query_api_dns__hostname__get
___x_cmd_shodan_dnsq(){
    local X_help_cmd='x help -m shodan geo dnsq';   help:arg-null:parse

    local rtype=A; local hostname=
    while [ "$#" -gt 0 ]; do
        case "$1" in
            --rtype)    rtype="$2";      shift 2    ;;
            *)          hostname="$1";   break      ;;
        esac
    done
    [ -n "$rtype" ] || rtype="A"

    if  ___x_cmd_shodan_is_interactive_env; then ___x_cmd_shodan_dnsq___curl  | x j2y
    else                                         ___x_cmd_shodan_dnsq___curl
    fi
}

___x_cmd_shodan_dnsq___curl(){
    x curl -sS "https://geonet.shodan.io/api/dns/${hostname}?rtype=${rtype}"
}

# https://geonet.shodan.io/docs#/default/geo_dns_query_api_geodns__hostname__get
___x_cmd_shodan_geodns(){
    local X_help_cmd='x help -m shodan geo geodns';   help:arg-null:parse

    local rtype=A; local hostname=
    while [ "$#" -gt 0 ]; do
        case "$1" in
            --rtype)    rtype="$2";     shift 2 ;;
            *)          hostname="$1";  break ;;
        esac
    done
    [ -n "$rtype" ] || rtype="A"
    if  ___x_cmd_shodan_is_interactive_env; then
        ___x_cmd_shodan_geodns___curl  |\
        ___x_cmd_shodan_geodns___app  |\
        x csv convert --col |\
        x csv app --return print

    else
        ___x_cmd_shodan_geodns___curl
    fi
}

___x_cmd_shodan_geodns___curl(){
    x curl -sS "https://geonet.shodan.io/api/geodns/${hostname}?rtype=${rtype}"
}


___x_cmd_shodan_geodns___app(){
    x ja -f "$___X_CMD_ROOT_MOD/shodan/lib/awk/geodns.awk"
}
