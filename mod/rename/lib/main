# shellcheck shell=dash
___x_cmd_rename___main(){
    [ "$#" -gt 0 ] || {
        return 64
    }

    case "$1" in
        --parse)    shift; ___x_cmd_rename_parse "$@"; return ;;
        --print)    shift; ___x_cmd_rename_print "$@"; return ;;
        --exec)     shift; ___x_cmd_rename_exec "$@"; return ;;
    esac

    ___x_cmd_rename_exec "$@"
}

___x_cmd_rename_parse(){
    local pat="$1"; shift
    local IFS="
"
    printf "%s\n" "$@" | command sort | ___x_cmd_cmds_awk \
        -v pat="$pat" \
        -f "$___X_CMD_ROOT_MOD/rename/lib/awk/parse.awk"
}

___x_cmd_rename_print(){
    local pat="$1"
    local tgt="$2"; shift 2
    ___x_cmd_rename_parse "$pat" "$@" | (
        while read -r filename; do
            read -r no
            [ "$no" -gt 0 ] || {
                x:info "skip ==> $filename"
                continue
            }
            while [ "$no" -gt 0 ]; do
                read -r code
                eval "$code"
                no=$((no - 1))
            done

            printf "%s\n" "$filename"
            case "$tgt" in
                \"*\")  eval printf '"%s\n"' "$tgt"  ;;
                *)      eval "$tgt"                 ;;
            esac
        done
    )
}

___x_cmd_rename_exec(){
    local recoveryfile="recovery.$(x date vlid)"
    local ttyfile="$(x tty)"

    ___x_cmd_rename_print "$@" | (

        while true; do
            read -r filename || break
            read -r tgt || break

            x ui yesno "rename $filename to $tgt ?" <"$ttyfile" || continue
            ___x_cmd_cmds_mv "$filename" "$tgt"
            printf "mv '%s' '%s'\n" "$tgt" "$filename"
        done >>"$recoveryfile"
    )

    x:info "recovery file => $recoveryfile"
}
