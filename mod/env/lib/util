# shellcheck    shell=sh            disable=SC3043      # xrc

___x_cmd_env___help(){
    x help -m env "$@" >&2
    return 1
}


# TODO: ~
___x_cmd_env_which(){
    case "$1" in
        -h|--help)
            ___x_cmd_env___help which
            return 1
            ;;
    esac

    local bin_path
    local version;  local x_=
    local i; for i in "$@"; do
        x_=; ___x_cmd_pkg_sphere xbin get_binmod_name_ "${i%=*}" || return
        [ -n "$x_" ] || return

        if [ "${i%=*}" != "${i#*=}" ];then
            version="${i#*=}"
        else
            version="$(___x_cmd_pkg default_version "${x_}")"
        fi

        bin_path="$(___x_cmd_pkg xbin path "$x_" "$version")"

        [ -n "$bin_path" ] || return
        bin_path="${bin_path%/*}"
        [ -d "$bin_path" ] || N=env M="Not found bin path: $i" log:ret:1
        printf "%s\n" "${bin_path}"
    done
}

___x_cmd_env_current_version_(){
    ___x_cmd_env_use_version_ "$@"
    [ -n "$x_" ] || ___x_cmd_env_try_version_ "$@"
}

___x_cmd_env_default_version_(){
    x_="$(___x_cmd_pkg default_version "$1")"
}

#       x env sociality python=intrusive
# TODO: x env sociality python=Miniconda3-py310_23.9.0-0=intrusive
# ___x_cmd_env_sociality(){
#     case "$1" in
#         *=*)
#                 local name="${1%%=*}";  local version="${1#*=}"
#                 local x_=; ___x_cmd_env_current_version_ "$name"
#                 [ -z "$x_" ] || {
#                     env:warn "Using $name version $x_, need to cancel it in advance"
#                     return 1
#                 }
#                 ___x_cmd_pkg_sociality set "$name" "$version"
#                 ;;
#         -h|--help)
#                 x help -m env sociality ;;
#         "")     x help -m env sociality >&2; return 64 ;;
#         *)      ___x_cmd_pkg_sociality get "$1" ;;
#     esac
# }
