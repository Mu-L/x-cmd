# shellcheck    shell=sh            disable=SC3043      # xrc

xrc sdict

___x_cmd_env___sdict(){
    local ___X_CMD_SDICT_SEP="$___X_CMD_UNSEENCHAR_NEWLINE"
    local ___X_CMD_SDICT_KVSEP="="
    ___x_cmd_sdict "$@"
}

___x_cmd_env___help(){
    x help -m env "$@" >&2
    return 1
}

___x_cmd_env_get_version(){
    local pkg_name="${1}"
    local version="${2}"
    if [ -n "$version" ]; then
        printf "%s\n" "$version"
    else
        ___x_cmd_pkg default_version "$pkg_name"
    fi
}

# TODO: ~
___x_cmd_env_which(){
    case "$1" in
        -h|--help)
            ___x_cmd_env___help which
            return 1
            ;;
    esac

    local bin_path
    local name=
    local version
    local i; for i in "$@"; do
        name="$(___x_cmd_pkg___get_binmod_name "${i%=*}")"
        [ -n "$name" ] || return 

        if [ "${i%=*}" != "${i#*=}" ];then
            version="${i#*=}"
        else
            version="$(___x_cmd_pkg default_version "${name}")"
        fi

        bin_path="$(___x_cmd_pkg xbin path "$name" "$version")"

        [ -n "$bin_path" ] || return
        bin_path="${bin_path%/*}"
        [ -d "$bin_path" ] || N=env M="Not found bin path: $i" log:ret:1
        printf "%s\n" "${bin_path}"
    done
}

___x_cmd_env_get_current_version(){
    local name="$1"
    local version_and_srcipt=
    local version
    [ -n "$name" ] || return

    if [ ! -f "$___X_CMD_ENV_VERSION_CONFIG_PATH" ]; then
        env:error "Config file is not exist"
        return 1
    fi

    local line; while read -r line; do
        [ -n "$line" ] || continue
        [ ! "$line" = "${line#"$name"}" ] || continue

        version_and_srcipt="${line#"$name"=}"
        version="${version_and_srcipt%%=*}"
        printf "%s" "$version"

        return 0

    done <"$___X_CMD_ENV_VERSION_CONFIG_PATH"

    env:warn "Not found $name was used in your current environment"
    return 1
}

