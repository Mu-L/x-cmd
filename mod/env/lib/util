# shellcheck    shell=sh            disable=SC3043      # xrc

___x_cmd_env___help(){
    x help -m env "$@" >&2
    return 1
}


# TODO: ~
___x_cmd_env_which(){
    case "$1" in
        -h|--help)
            ___x_cmd_env___help which
            return 1
            ;;
    esac

    local bin_path
    local name=
    local version
    local i; for i in "$@"; do
        name="$(___x_cmd_pkg___get_binmod_name "${i%=*}")"
        [ -n "$name" ] || return

        if [ "${i%=*}" != "${i#*=}" ];then
            version="${i#*=}"
        else
            version="$(___x_cmd_pkg default_version "${name}")"
        fi

        bin_path="$(___x_cmd_pkg xbin path "$name" "$version")"

        [ -n "$bin_path" ] || return
        bin_path="${bin_path%/*}"
        [ -d "$bin_path" ] || N=env M="Not found bin path: $i" log:ret:1
        printf "%s\n" "${bin_path}"
    done
}

___x_cmd_env_get_use_version(){
    local name="$1"
    local sphere_name="${2:-X}"
    local version
    [ -n "$name" ] || N=env M="Provide a package name" log:ret:1

    {
        ___x_cmd_pkg_config ls "$sphere_name"
    } | while read -r line; do
        [ -n "$line" ] || continue
        version="${line#"${name}="}"
        [ ! "$line" = "$version" ] || continue
        printf "%s\n" "$version"
        return 0
    done

    env:warn "Not found $name was used in your current environment"
    return 1
}

___x_cmd_env_current_version_(){
    ___x_cmd_env_use_version_ "$@"
    [ -n "$x_" ] || ___x_cmd_env_try_version_ "$@"
}

___x_cmd_env_default_version_(){
    x_="$(___x_cmd_pkg default_version "$1" 2>/dev/null)"
}
