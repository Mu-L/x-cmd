# shellcheck    shell=sh            disable=SC3043      # xrc

___X_CMD_ENV_VERSION_CONFIG_PATH="$___X_CMD_ROOT_DATA/env/version"
xrc path

___x_cmd_env_config_load(){
    if [ ! -f "$___X_CMD_ENV_VERSION_CONFIG_PATH" ]; then
        x touch "$___X_CMD_ENV_VERSION_CONFIG_PATH"
        env:debug "Config file not found then create $___X_CMD_ENV_VERSION_CONFIG_PATH file"
    fi

    local line; while read -r line; do
        [ -n "$line" ] || continue
        local name="${line%%=*}"
        local version_and_srcipt="${line#"$name"=}"
        local version="${version_and_srcipt%%=*}"
        local script_path="${version_and_srcipt#"$version"}"
        script_path="${script_path#=}"

        ___x_cmd_pkg activate  "$name" "$version" "$script_path"

    done <"$___X_CMD_ENV_VERSION_CONFIG_PATH"
}

___x_cmd_env_config_save(){
    ___x_cmd_env_config___write "$___X_CMD_ENV_VERSION_CONFIG"
}

___x_cmd_env_config___write(){
    local configstr="${1:?Provide config string}"
    local tgt="${2:-"$___X_CMD_ENV_VERSION_CONFIG_PATH"}"

    if ! x touch "$tgt"; then
        env:error "Couldn't create file - '${tgt}'"
        return 1
    fi

    printf "%s\n" "$configstr" > "$tgt" || {
        env:error "Couldn't write to file - '${tgt}'"
        return 1
    }

    env:info "Config file saved to $tgt"
}

___x_cmd_env___configstr_set_(){
    ___X_CMD_ENV___CONFIGSTR_SET_="${1:-""}";   shift

    local name
    local value

    local IFS=" "; local pkg_name_version; for pkg_name_version in "$@"; do
        name="${pkg_name_version%%=*}"
        value="${pkg_name_version#*=}"

        if [ -z "$value" ] || [ "$value" = "$pkg_name_version" ]; then
            ___x_cmd_env___sdict rm     ___X_CMD_ENV___CONFIGSTR_SET_ "$name"
        else
            ___x_cmd_env___sdict put    ___X_CMD_ENV___CONFIGSTR_SET_ "$name" "$value"
        fi
    done
}

