# shellcheck    shell=dash

xrc:mod cama/latest cosmo/latest    # Preload module
xrc:mod:lib     x-cmd           eclist ldev pwd meta concurrent cond whichbin util engine/index hashsum while_read ymljson while_read vareq bgsingleton fskv shengine/_index
xrc alias

___X_CMD_ENGINE_SUBCMD_NAME=__enginerun

___x_cmd_main_otherwise(){
    local subcmd="$1";  shift

    local ___x_cmd_main_otherwise_code

    ___x_cmd_alias_exec ___x_cmd "$subcmd" "$@"
    ___x_cmd_main_otherwise_code=$?
    if [ -n "$___X_CMD_ALIAS_EXEC_EXIST" ]; then
        return $?
    fi

    # reference: https://github.com/x-bash/pkg/pull/59
    local ___X_CMD_STR___DASH2UNDERLINE=; ___x_cmd_str___dash2underline "$subcmd"
    if command -v "___x_cmd_${___X_CMD_STR___DASH2UNDERLINE}" 2>/dev/null 1>&2; then
        "___x_cmd_${___X_CMD_STR___DASH2UNDERLINE}" "$@"
        return
    fi

    local ___X_CMD_WHICH_ONE_RESULT
    local ___X_CMD_WHICH_ONE_RESOURCE_TYPE
    if ___X_CMD_NO_LOCAL=1 ___x_cmd_which_one "$subcmd" 2>/dev/null; then
        x:debug "Executing Resource: [type=$___X_CMD_WHICH_ONE_RESOURCE_TYPE] [file=$___X_CMD_WHICH_ONE_RESULT]"
        case "$___X_CMD_WHICH_ONE_RESOURCE_TYPE" in
            # workspace)      ___x_cmd_exe_workspace  "$___X_CMD_WHICH_ONE_RESULT" "$@" ;;
            local)          ___x_cmd_engine_run                 "$___X_CMD_WHICH_ONE_RESULT" "$@" ;;
            hub|http)       ___x_cmd_engine_run                 "$___X_CMD_WHICH_ONE_RESULT" "$@" ;;
            # FIXME
            official)       ___x_cmd_engine_run_main    xrc     "$___X_CMD_WHICH_ONE_RESULT" "$@" ;;
        esac
        ___x_cmd_main_otherwise_code=$?
        x:debug "Resource Executed: [type=$___X_CMD_WHICH_ONE_RESOURCE_TYPE] [file=$___X_CMD_WHICH_ONE_RESULT] [code=$___x_cmd_main_otherwise_code]"
        return "$___x_cmd_main_otherwise_code"
    fi

    # TODO: If we fail to introduct from xbin. Please provide the interface, ask user for what he/she wants and whether set the alias for that module globally.
    ___x_cmd_main_otherwise_code=$?
    if x pkg xbin init "$subcmd"; then
        "___x_cmd_${___X_CMD_STR___DASH2UNDERLINE}" "$@"
        return
    fi

    # Only llama file, or other file
    if ___x_cmd_cosmo___hasbin "$subcmd"; then
        x:warn "Using cosmo equivalent ==> $subcmd"
        ___x_cmd_cosmo___run "$subcmd" "$@"
        return
    fi

    x:error "___x_cmd_main_otherwise(): ___x_cmd_which_one fail [code: ${___x_cmd_main_otherwise_code}]"
    return 1
}

___x_cmd_alias_init ___x_cmd
___x_cmd_main(){        # x:trace x     # TODO: will effect x log

    local subcmd="$1"
    case "$subcmd" in
        log)                                    shift;  ___x_cmd_log "$@" ;;        # For efficiency

        "="*)                                   shift;  ___x_cmd_defaultassignvar "${subcmd#=}" "$@" ;;

        *:=)                                    shift;  ___x_cmd_varset "${subcmd%:=}" "$@" ;;
        *=)                                     shift;  ___x_cmd_varset_without_end "${subcmd%=}" "$@" ;;
        *=if)                                   ___x_cmd_eqifelse "$@" ;;
        *=case)                                 ___x_cmd_eqcase "$@" ;;
        *=join*)                                ___x_cmd___varjoin "$@" ;;

        readl|rl)                               shift;  ___x_cmd_readl "$@"     ;;
        readeval|reval)                         shift;  ___x_cmd_reval "$@"     ;;

        *.jar)                                  shift;  ___x_cmd_java_jar "$@"  ;;

        js)                                     shift;  xrc node ; ___x_cmd_node "$@"      ;;
        js=*|node=*)                            shift;  xrc node ; ___X_CMD_PKG_XBIN_DEFAULT_node="${subcmd#*=}" ___x_cmd_node "$@"      ;;
        ts|ts-node)                             shift;  x tsnode "$@"        ;;

        py)                                     shift;  xrc python ; ___x_cmd_python "$@"    ;;
        python=*|py=*)                          shift;  xrc python ; ___X_CMD_PKG_XBIN_DEFAULT_python="${subcmd#*=}" ___x_cmd_python "$@"    ;;

        sh|bash|zsh|ksh|dash|ash)               shift;  ___x_cmd_shellengine "$subcmd" "$@" ;;
        run)                                    shift;  ___x_cmd_engine_run "$@"       ;;

        login)                                  shift;  xrc hub/latest && ___x_cmd_hub login "$@" ;;
        token)                                  shift;  xrc hub/latest && ___x_cmd_hub token "$@" ;;

        z|uz|uzr)                                       ( xrc zuz && ___x_cmd_zuz "$@" ) ;;   # zl)  ( xrc zuz && ___x_cmd_zuz_ls "$@"        ) ;;       # Using ls to replace
        wsroot)                                 shift;  ___x_cmd_wsroot "$@" ;;

        upgrade|clear)                          xrc "$@" ;;
        "")                                             x helpapp "$@" ;;
        help|--help|-h)                         shift;  x helpapp "$@" ;;

        *.wx)                                           x wx run "$@" ;;
        *.speg)                                         x script play "$(x which "$@")" ;;

        :*)                                     shift;  x xdk "${subcmd#:}" "$@" ;;
        *)                                              ___x_cmd_main_otherwise "$@" ;;
    esac
}

___x_cmd_source(){
    local ___x_cmd___source_run_filepath="${1:?filepath}";        shift
    . "$___x_cmd___source_run_filepath" "$@"
}

# subshell rc
___x_cmd_ssrc(){
    ( ___x_cmd_source "$@" )
}

___x_cmd_showwebsite(){
    local website="$1"
    local msg="${2:-For more info}"
    x open "$website" || {
        x qrencode "$website" || {
            x echo "$msg ==> $website"
        }
    }
}
