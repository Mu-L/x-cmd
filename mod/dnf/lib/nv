# shellcheck shell=dash

___x_cmd_dnf___nv(){
    local X_help_cmd='x help -m dnf nv'
    help:arg:parse

    [ -d "/var/cache/dnf" ] || {
        dnf:warn "The first time you use dnf, you need to update your local software list repository."
        x dnf update -y || {
            dnf:error "dnf update fail"
            x rmrf "/var/cache/dnf"
            return 1
        }
        x ccmd 1d -- ___x_cmd_dnf___lsraw > /dev/null 1>&2
    }

    { [ -t 1 ] && ___x_cmd_is_interactive; } \
        || {
            x ccmd 1d -- ___x_cmd_dnf___lsraw
            return 0
        }

    local software
    software="$(x ccmd 1d -- ___x_cmd_dnf___lsraw | x pick --width 40 --col 10)"
    [ -n "$software" ] || {
        dnf:info "Exit because no software is selected."
        return 0
    }

    local id
    x ui select id "What to do NEXT"    \
        "x dnf install   $software"     \
        "x dnf reinstall $software"     \
        "x dnf info      $software"     \
        "browse repo of  $software"      \
        "dnf --help"                    \
        "EXIT"     || return
    case "$id" in
        1)      x dnf install   "$software" ;;
        2)      x dnf reinstall "$software" ;;
        3)      x dnf info      "$software" ;;
        # 4)      x install       "$software" ;;
        5)      ___x_cmd_dnf___repo_browse "$software" ;;
        6)      x help -m dnf ;;
        7)      return 0 ;;
    esac
}

___x_cmd_dnf___lsraw(){
    ___x_cmd_cmds dnf list --all | ___x_cmd_cmds awk 'NR>2{ print $1}' | ___x_cmd_cmds sort -u | while read -r line; do
        local line="${line%.*}"
        printf "%s\n" "$line"
    done
}
