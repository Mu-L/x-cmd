# shellcheck shell=dash disable=SC2016

___x_cmd_dnf___nv(){
    local X_help_cmd='x help -m dnf nv'
    help:arg:parse

    local dnffp=; dnffp="$(___x_cmd_cmds ls -1 /var/cache/dnf/*.solv 2>/dev/null | head -n 1)"
    [ -f "$dnffp" ] || {
        dnf:info "Update the software in the repository."
        x dnf upgrade -y || {
            dnf:error "dnf update fail"
            # x dnf clean metadata
            return 1
        }
        dnffp="$(___x_cmd_cmds ls -1 /var/cache/dnf/*.solv 2>/dev/null | head -n 1)"
    }

    local ccmdfp=; ccmdfp="$(x ccmd which ___x_cmd_dnf___lsraw)"
    [ "$ccmdfp" -nt "$dnffp" ] || {
        x rmrf "$ccmdfp"
    }

    { [ -t 1 ] && ___x_cmd_is_interactive; } \
        || {
            x ccmd 3d -- ___x_cmd_dnf___lsraw
            return 0
        }

    local software
    software="$(x ccmd 3d -- ___x_cmd_dnf___lsraw | x pick --width 40 --col 10)"
    [ -n "$software" ] || {
        dnf:info "Exit because no software is selected."
        return 0
    }

    local id
    x ui select id "What to do NEXT"    \
        "x dnf install   $software"     \
        "x dnf reinstall $software"     \
        "x dnf info      $software"     \
        "browse repo of  $software"      \
        "dnf --help"                    \
        "EXIT"     || return
    case "$id" in
        1)      x dnf install   "$software" ;;
        2)      x dnf reinstall "$software" ;;
        3)      x dnf info      "$software" ;;
        # 4)      x install       "$software" ;;
        5)      ___x_cmd_dnf___repo_browse "$software" ;;
        6)      x help -m dnf ;;
        7)      return 0 ;;
    esac
}

___x_cmd_dnf___lsraw(){
    dnf:info "running command  →  dnf list"
    ___x_cmd_cmds dnf list -y --all | ___x_cmd_cmds awk '
    NR>2{
        l = $1
        sub("\\.[^\\.]*$", "", l)

        if ((arr[l] != 1) && (l != "Available") && (l != "可安装的软件包")) print l
        arr[l] = 1
    }
    ' | ___x_cmd_cmds sort -u
}
