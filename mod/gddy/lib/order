# shellcheck shell=dash disable=SC2034

___x_cmd_gddy_order(){
    param:subcmd ___x_cmd_gddy_order                                                                                    \
        ls            "Retrieve a list of orders for the authenticated shopper(Only one filter may be used at a time)"  \
        get           "Retrieve details for specified order"
    param:subcmd:try
    param:run

    ___x_cmd_gddy_order _param_help_doc
    return 1
}

___x_cmd_gddy_order_ls(){
        param:dsl    '
options:
    --periodstart        "Start of range indicating what time-frame should be returned. Inclusive"                  <>=""
    --periodend          "End of range indicating what time-frame should be returned. Inclusive"                    <>=""
    --domain             "Domain name to use as the filter of results"                                              <>=""
    --productgroupid     "Product group id to use as the filter of results"                                         <>=""
    --paymentprofileid   "Payment profile id to use as the filter of results"                                       <>=""
    --parentorderid      "Parent order id to use as the filter of results"                                          <>=""
    --offset             "Number of results to skip for pagination"                                                 <>=0
    --limit              "Maximum number of items to return"                                                        <>=25
    --sort               "Property name that will be used to sort results. '-' indicates descending"                <>="-createdAt"  = createdAt orderId -orderId pricing.total -pricing.total
    --shopper_id         "Shopper ID to be operated on, if different from JWT"                                      <>=""
    --market_id          "Unique identifier of the Market in which the request is happening"                        <>="en-US" = da-DK de-AT de-CH de-DE el-GR en-AE en-AU en-CA en-GB en-HK en-IE en-IL en-IN en-MY en-NZ en-PH en-PK en-SG en-US en-ZA es-AR es-CL es-CO es-ES es-MX es-PE es-US es-VE fi-FI fr-BE fr-CA fr-CH fr-FR hi-IN id-ID it-CH it-IT ja-JP ko-KR mr-IN nb-NO nl-BE nl-NL pl-PL pt-BR pt-PT ru-RU sv-SE ta-IN th-TH tr-TR uk-UA vi-VN zh-HK zh-SG zh-TW

    --json|-j            "output raw JSON data"
'
    param:run
    local header=
    [ -z "$shopper_id" ] ||  header=" -H 'X-Shopper-Id: ${shopper_id}' "
    [ -z "$market_id" ] ||   header="${header} -H 'X-Market-Id: ${market_id}' "

    local cmd=

    [ -z "$periodstart" ] || cmd="${cmd}periodStart=${periodstart}&"
    [ -z "$periodend" ] || cmd="${cmd}periodEnd=${periodend}&"
    [ -z "$domain" ] || cmd="${cmd}domain=${domain}&"
    [ -z "$productgroupid" ] || cmd="${cmd}productGroupId=${productgroupid}&"
    [ -z "$paymentprofileid" ] || cmd="${cmd}paymentProfileId=${paymentprofileid}&"
    [ -z "$parentorderid" ] || cmd="${cmd}parentorderid=${parentorderid}&"
    [ -z "$offset" ] || cmd="${cmd}offset=${offset}&"
    [ -z "$limit" ] || cmd="${cmd}limit=${limit}&"
    [ -z "$sort" ] || cmd="${cmd}sort=${sort}"

    ___x_cmd_gddy_curl get "/v1/orders?" | ___x_cmd_gddy_order___handle_ui ls
}

___x_cmd_gddy_order_get(){
        param:dsl    '
options:
    #1                 "Order id whose details are to be retrieved"                                                <>
    --shopper_id       "Shopper ID to be operated on, if different from JWT"                                       <>=""
    --market_id        "Unique identifier of the Market in which the request is happening"                         <>="en-US"  = da-DK de-AT de-CH de-DE el-GR en-AE en-AU en-CA en-GB en-HK en-IE en-IL en-IN en-MY en-NZ en-PH en-PK en-SG en-US en-ZA es-AR es-CL es-CO es-ES es-MX es-PE es-US es-VE fi-FI fr-BE fr-CA fr-CH fr-FR hi-IN id-ID it-CH it-IT ja-JP ko-KR mr-IN nb-NO nl-BE nl-NL pl-PL pt-BR pt-PT ru-RU sv-SE ta-IN th-TH tr-TR uk-UA vi-VN zh-HK zh-SG zh-TW

    --json|-j          "output raw JSON data"
'
    param:run
    local header=
    [ -z "$shopper_id" ] ||   header=" -H 'X-Shopper-Id: ${shopper_id}' "
    [ -z "$market_id" ]  ||   header="${header} -H 'X-Market-Id: ${market_id}' "


    ___x_cmd_gddy_curl get "/v1/orders/${1}" | ___x_cmd_gddy_order___handle_ui get
}

___x_cmd_gddy_order___handle_ui(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        ___x_cmd_cmds cat
        ___x_cmd_gddy_http_error
        return
    fi
    if ___x_cmd_gddy_http_error; then
        case "$1" in

            ls)
                x ja jl2c .orders.1.orderId .orders.1.parentOrderId .orders.1.pricing.total | \
                x csv header --add  OrderId    ParentOrderId  Pricing_total | \
                x csv static_tab
                ;;

            get)
                x ja jl2c .email   x ja jl2c .orderId .billTo.contact.email .billTo.contact.jobTitle .items.1.pricing.discount .items.1.pricing.fees.total | \
                x csv header --add  CustomerId   OrderId  BillTo_Email  BillTo.JobTitle Pricing_Discount Total_fees | \
                x csv static_tab
                ;;
        esac
    fi
}
