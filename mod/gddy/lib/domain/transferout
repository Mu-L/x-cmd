# shellcheck shell=dash disable=SC2034,SC2154
___x_cmd_gddy_domain_customer_transferout(){
    param:subcmd ___x_cmd_gddy_domain_customer_transferout                                      \
        init             "Initiate transfer out to another registrar for a .uk domain"          \
        accept           "Accept transfer out"                                                  \
        reject           "Reject transfer out"
    param:subcmd:try
    param:run
}

___x_cmd_gddy_domain_customer_transferout_init(){
        param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    --customerid        "The Customer identifier"                                                      <>
    --request_id        "A client provided identifier for tracking this request"                       <>=""
    --domain            "Domain to initiate the transfer out for"                                      <>
    --registrar         "Registrar tag to push transfer to"                                            <>

    --json|-j          "output raw JSON data"
'
    param:run

    [ -z "$request_id" ]  ||   header="${header} -H 'X-Request-Id: ${request_id}' "
    ___x_cmd_gddy_curl post "/v2/customers/${customerid}/domains/${domain}/transferOut?registrar=${registrar}"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: transferout initiate $domain"
    else
        ___x_cmd_ui_tf false "transferout initiate failure:" >&2
    fi
}

___x_cmd_gddy_domain_customer_transferout_accept(){
        param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    --customerid        "The Customer identifier"                                                      <>
    --request_id        "A client provided identifier for tracking this request"                       <>=""
    --domain            "Domain to accept the transfer out for"                                        <>

    --json|-j          "output raw JSON data"
'
    param:run

    [ -z "$request_id" ]  ||   header="${header} -H 'X-Request-Id: ${request_id}' "
    ___x_cmd_gddy_curl post "/v2/customers/${customerid}/domains/${domain}/transferOutAccept"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: transferout accept $domain"
    else
        ___x_cmd_ui_tf false "transferout accept failure:" >&2
    fi
}


___x_cmd_gddy_domain_customer_transferout_reject(){
        param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    --customerid        "The Customer identifier"                                                      <>
    --request_id        "A client provided identifier for tracking this request"                       <>=""
    --domain            "Domain to reject the transfer out for"                                        <>
    --reason            "Transfer out reject reason"                                                   <>     = EVIDENCE_OF_FRAUD URDP_ACTION COURT_ORDER DISPUTE_OVER_IDENTITY NO_PAYMENT_FOR_PREVIOUS_REGISTRATION_PERIOD WRITTEN_OBJECTION TRANSFERRED_WITHIN_SIXTY_DAYS

    --json|-j          "output raw JSON data"
'
    param:run

    [ -z "$request_id" ]  ||   header="${header} -H 'X-Request-Id: ${request_id}' "
    ___x_cmd_gddy_curl post "/v2/customers/${customerid}/domains/${domain}/transferOutReject?reason=${reason}"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: transferout reject $domain"
    else
        ___x_cmd_ui_tf false "transferout reject" >&2
    fi
}
