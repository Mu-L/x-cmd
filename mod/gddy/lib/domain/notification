# shellcheck shell=dash disable=SC2034,SC2154
___x_cmd_gddy_domain_notification(){
    param:subcmd ___x_cmd_gddy_domain_notification                                                            \
        next             "Retrieve the next domain notification"                                              \
        ls               "Retrieve a list of notification types that are opted in"                            \
        optin            "Opt in to recieve notifications for the submitted notification types"               \
        search_schema    "Retrieve the schema for the notification data for the specified notification type"  \
        acknowledge      "Acknowledge a domain notification"


    param:subcmd:try
    param:run
    return 1
}

___x_cmd_gddy_domain_notification_next(){
    param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    #1                   "The Customer identifier"                                                        <>
    --request_id         "A client provided identifier for tracking this request"                         <>=""

    --json|-j            "output raw JSON data"
'
    param:run
    [ -z "$request_id" ] || local header="-H 'X-Request-Id: $request_id'"
    ___x_cmd_gddy_curl get "/v2/customers/${1}/domains/notifications"   |  ___x_cmd_gddy_domain_notification___handle_ui next
}

___x_cmd_gddy_domain_notification_ls(){
param:dsl    '
options:
    #1                   "The Customer identifier"                                                        <>
    --request_id         "A client provided identifier for tracking this request"                         <>=""

    --json|-j            "output raw JSON data"
'
    param:run
    [ -z "$request_id" ] || local header="-H 'X-Request-Id: $request_id'"
    ___x_cmd_gddy_curl get "/v2/customers/${1}/domains/notifications/optIn" |  ___x_cmd_gddy_domain_notification___handle_ui next

}

___x_cmd_gddy_domain_notification_optin(){
param:dsl    '
options:
    #1                   "The Customer identifier"                                     <>
    --request_id         "A client provided identifier for tracking this request"      <>=""
    --types              "The notification types that should be opted in"              <>     = AUTH_CODE_PURCHASE  AUTH_CODE_REGENERATE  AUTO_RENEWAL  BACKORDER  BACKORDER_PURCHASE  BACKORDER_DELETE  BACKORDER_UPDATE  CONTACT_CREATE  CONTACT_DELETE  CONTACT_UPDATE  DNS_VERIFICATION  DNSSEC_CREATE  DNSSEC_DELETE  DOMAIN_DELETE  DOMAIN_UPDATE  DOMAIN_UPDATE_CONTACTS  DOMAIN_UPDATE_NAME_SERVERS  EXPIRY  HOST_CREATE  HOST_DELETE  ICANN_VERIFICATION  MIGRATE  MIGRATE_IN  PREMIUM  PRIVACY_FORWARDING_UPDATE  PRIVACY_PURCHASE  PRIVACY_DELETE  REDEEM  REGISTER  RENEW  RENEW_UNDO  TRADE  TRADE_CANCEL  TRADE_PURCHASE  TRADE_PURCHASE_AUTH_TEXT_MESSAGE  TRADE_RESEND_AUTH_EMAIL  TRANSFER  TRANSFER_IN  TRANSFER_IN_ACCEPT  TRANSFER_IN_CANCEL  TRANSFER_IN_RESTART  TRANSFER_IN_RETRY  TRANSFER_OUT  TRANSFER_OUT_ACCEPT  TRANSFER_OUT_REJECT  TRANSFER_OUT_REQUESTED  TRANSIT

    --json|-j            "output raw JSON data"
'
    param:run
    [ -z "$request_id" ] || local header="-H 'X-Request-Id: $request_id'"
    ___x_cmd_gddy_curl get "/v2/customers/${1}/domains/notifications/optIn"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: opt command successful"
    else
        ___x_cmd_ui_tf false "opt command failure" >&2
    fi
}

___x_cmd_gddy_domain_notification_search_schema(){
    param:dsl    '
options:
    #1                    "The Customer identifier"                                     <>
    --request_id          "A client provided identifier for tracking this request"      <>=""
    --types               "The notification type whose schema should be retrieved"      <>     = AUTO_RENEWAL BACKORDER BACKORDER_PURCHASE EXPIRY PREMIUM PRIVACY_PURCHASE REDEEM REGISTER RENEW TRADE TRANSFER

    --json|-j             "output raw JSON data"
'
    param:run
    [ -z "$request_id" ] || local header="-H 'X-Request-Id: $request_id'"
    ___x_cmd_gddy_curl get "/v2/customers/qwe/domains/notifications/schemas/AUTO_RENEWAL" |  ___x_cmd_gddy_domain_notification___handle_ui schema
}

___x_cmd_gddy_domain_notification_acknowledge(){
param:dsl    '
options:
    #1                    "The Customer identifier"                                                        <>
    --request_id          "A client provided identifier for tracking this request"                         <>=""
    --notificationid      "The notification ID to acknowledge"                                             <>

    --json|-j             "output raw JSON data"
'
    param:run
    [ -z "$request_id" ] || local header="-H 'X-Request-Id: $request_id'"
    ___x_cmd_gddy_curl get "/v2/customers/${1}/domains/notifications/324/${notificationId}"


    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: Message acknowledged successful"
    else
        ___x_cmd_ui_tf false "Message acknowledged failure" >&2
    fi

}


___x_cmd_gddy_domain_notification___handle_ui(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gddy_http_error
        return
    fi
    if ___x_cmd_gddy_http_error; then
        case "$1" in

            next)
                x ja jl2c    .notificationId .type .status .requestId | \
                x csv header --add  NotificationId    Type  Status RequestId | \
                x csv static_tab
                ;;

            ls)
                x jo 2c    .notificationId .type .status .requestId | \
                x csv header --add  NotificationId    Type  Status RequestId | \
                x csv static_tab
                ;;
            schema)
                x ja jl2c  .id .require | \
                x csv header --add  ID  Require  | \
                x csv static_tab
                ;;
            info)
                x ja jl2c .billingState |\
                x csv header --add  BillingState | \
                x csv static_tab
                ;;
        esac
    else
        cat
        ___x_cmd_gddy_http_error
    fi
}

