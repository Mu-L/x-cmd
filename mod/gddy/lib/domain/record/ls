# shellcheck shell=dash disable=SC2034,SC2154

# https://developer.godaddy.com/doc/endpoint/domains#/v1/recordGet
___x_cmd_gddy_domain_record_ls(){
    ___x_cmd_gx_is_interactive_env || { ___x_cmd_gddy_domain_record_ll "$@"; return; }
    param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    #1             "Domain whose DNS Records are to be retrieved"                       <>
    --shopper_id   "Shopper ID which owns the domain"                                   <>=""
    --type         "DNS Record Type for which DNS Records are to be retrieved"          <>=""     = A AAAA CNAME MX NS SOA SRV TXT
    --name         "DNS Record Name for which DNS Records are to be retrieved"          <>=""
    --offset       "Number of results to skip for pagination"                           <>="0"
    --limit        "Maximum number of items to return"                                  <>=""

    --json|-j      "output raw JSON data"
'
    param:run
    [ -z "$shopper_id" ] || local header="-H 'X-Shopper-Id: $shopper_id'"

    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ] ; then
        ___x_cmd_gddy_curl get "/v1/domains/$1/records/${type}/${name}" offset limit
    else
        ___x_cmd_gddy_curl get "/v1/domains/$1/records/${type}/${name}" offset limit | \
            x ja 2c .data .name  .ttl .type | \
            x csv header --add  Data Name  ttl Type | \
            x csv app
    fi
}


alias arg:param:init='
local format="${app:-${csv:-${tsv:$-json}}}"
[ -n "$format" ] || { [ ! -t 1 ] || ! ___x_cmd_is_interactive_env; } || format="app"
'

ARG_PARAM_STRING='
-j|--json   "Output in json format"
--csv       "Output in csv format"
--tsv       "Output in tsv format"
--app       "Open app"
'

___x_cmd_gddy_domain_record_ls___csv(){
    :
}

