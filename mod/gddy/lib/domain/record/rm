# shellcheck shell=dash disable=SC2034,SC2154
# https://developer.godaddy.com/doc/endpoint/domains#/v1/recordDeleteTypeName
___x_cmd_gddy_domain_record_rm(){
    param:scope     ___x_cmd_gddy
    param:dsl    '
options:
    #1             "Domain whose DNS Records are to be deleted"                    <>
    --shopper_id   "Shopper ID which owns the domain"                              <>=""
    --type         "DNS Record Type for which DNS Records are to be deleted"       <>=""  = A AAAA CNAME MX NS SOA SRV TXT
    --name         "DNS Record Name for which DNS Records are to be deleted"       <>

    --yes          "Ignore remove prompt interception"
    --json|-j      "output raw JSON data"
'
    param:run
    gddy:arg:format:raw:json2app:all

    [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure to delete dns record for the specified [domain=$(___x_cmd_ui bold red "$name")] ?" \
                        || return

    ___x_cmd_gddy_domain_record_rm "$@"

}

___x_cmd_gddy_domain_record_rm___app(){
    local err_msg=
    local data; data="$( ___x_cmd_gddy_domain_record_rm___raw "$@" )" || gddy:data:ret
    ___x_cmd_pipevar    data     x jo env err_msg=.message

    if  ! ___x_cmd_gddy_http_error; then
        ___x_cmd_ui_tf false "Domain delete Dns failure [error msg=$msg]"
        return 1
    else
        ___x_cmd_ui_tf true "[Success]: Domain delete Dns successful"
    fi
}


___x_cmd_gddy_domain_record_rm___json(){
    local data; data="$( ___x_cmd_gddy_domain_record_rm___raw "$@" )" || gddy:data:ret
    ___x_cmd_pipevar    data
}

___x_cmd_gddy_domain_record_rm___raw(){
    ___x_cmd_gddy_ourl del "/v1/domains/$1/records/${type}/${name}"
}
