# shellcheck shell=dash disable=SC2034,SC2086
# xrc cert/search cert/action

___x_cmd_gddy_cert_callback(){
    param:subcmd ___x_cmd_gddy_cert_callback                           \
        unregister    "Unregister system callback"                     \
        get           "Retrieve system stateful action callback url"   \
        register      "Register of certificate acion callback"
    param:subcmd:try
    param:run
}

___x_cmd_gddy_cert_callback_unregister(){
        param:dsl    '
options:
    --certificateid                      "Certificate id to unregister callback"                        <>

    --yes                                "Ignore remove prompt interception"
    --json|-j                            "output raw JSON data"
'
    param:run

    [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure to unregister system callback?" || return
    ___x_cmd_gddy_curl del"/v1/certificates/${certificateId}/callback"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: Unregister system callback successful"
    else
        ___x_cmd_ui_tf false "Unregister system callback failure" >&2
    fi
}

___x_cmd_gddy_cert_callback_get(){
        param:dsl    '
options:
    --certificateid                       "Certificate id to register for stateful action callback"     <>

    --json|-j                             "output raw JSON data"
'
    param:run
    ___x_cmd_gddy_curl get "/v1/certificates/${certificateId}/callback" | ___x_cmd_gddy_cert_callback___haandle_ui get
}

___x_cmd_gddy_cert_callback_register(){
        param:dsl    '
options:
    --certificateid                       "Certificate id to register/replace for callback"                           <>
    --callbackurl                         "Callback url registered/replaced to receive stateful actions"              <>

    --json|-j                             "output raw JSON data"
'
    param:run
    ___x_cmd_gddy_curl put "/v1/certificates/${certificateId}/callback?callbackUrl=${callbackurl}"

    if ! ___x_cmd_gddy_http_error; then
            ___x_cmd_ui_tf  true "[Success]: Register successful"
    else
        ___x_cmd_ui_tf false "Register failure" >&2
    fi
}

___x_cmd_gddy_cert_callback___haandle_ui(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gddy_http_error
        return
    fi
    if ___x_cmd_gddy_http_error; then
        case "$1" in
            get)
                x ja jl2c .callbackUrl| \
                x csv header --add  CallbackUrl | \
                x csv static_tab
                ;;
        esac
    fi
}


