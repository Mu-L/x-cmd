# shellcheck shell=dash disable=SC2034,SC2154
___x_cmd_gddy_cert_customer(){
    param:subcmd ___x_cmd_gddy_cert_customer                                             \
        search       "Retrieve customer's certificates"                                  \
        get          "Retrieve individual certificate details"                           \
        get_status   "Retrieve domain verification status"                               \
        get_domain   "Retrieve detailed information for supplied domain"                 \
        get_bind     "Retrieves the external account binding for the specified customer"
    param:subcmd:try
    param:run
}

___x_cmd_gddy_cert_customer_search(){
    param:dsl    '
options:
    #1                              "An identifier for a customer"                                 <>
    --offset                        "Number of results to skip for pagination"                     <>=""
    --limit                         "Maximum number of items to return"                            <>=""
'
    param:run

    if [ -z "$offset" ] && [ -z "$limit" ]; then
        ___x_cmd_gddy_curl get "/v2/customers/$1/certificates" | ___x_cmd_gddy_cert_customer___handle_ui search
    elif [ -n "$offset" ] && [ -n "$limit" ]; then
        ___x_cmd_gddy_curl get "/v2/customers/$1/certificates?offset=${offset}&limit=${limit}" | ___x_cmd_gddy_cert_customer___handle_ui search
    else
        if [ -n "$offset" ]; then
            ___x_cmd_gddy_curl get "/v2/customers/$1/certificates?offset=${offset}" | ___x_cmd_gddy_cert_customer___handle_ui search
        else
            ___x_cmd_gddy_curl get "/v2/customers/$1/certificates?limit=${limit}" | ___x_cmd_gddy_cert_customer___handle_ui search
        fi
    fi

}

___x_cmd_gddy_cert_customer_get(){
    param:dsl    '
options:
    --customerid                        "An identifier for a customer"                      <>
    --certificateid                     "Certificate id to lookup"                          <>
'
    param:run

    ___x_cmd_gddy_curl get "/v2/customers/${customerid}/certificates/${certificateid}" | ___x_cmd_gddy_cert_customer___handle_ui get

}

___x_cmd_gddy_cert_customer_get_status(){
    param:dsl    '
options:
    --customerid                        "An identifier for a customer"                      <>
    --certificateid                     "Certificate id to lookup"                          <>
'
    param:run
    ___x_cmd_gddy_curl get "/v2/customers/${customerid}/certificates/${certificateid}/domainVerifications" | ___x_cmd_gddy_cert_customer___handle_ui get_status
}

___x_cmd_gddy_cert_customer_get_domain(){
    param:dsl    '
options:
    --customerid                        "An identifier for a customer"                                        <>
    --certificateid                     "Certificate id to lookup"                                            <>
    --domain                            "A valid domain name in the certificate request"                      <>
'
    param:run
    ___x_cmd_gddy_curl get "/v2/customers/${customerid}/certificates/${certificateid}/domainVerifications/${domain}" | ___x_cmd_gddy_cert_customer___handle_ui get_domain
}

___x_cmd_gddy_cert_customer_get_bind(){
    param:dsl    '
options:
    --customerid                        "An identifier for a customer"                                        <>
'
    param:run
    ___x_cmd_gddy_curl get "/v2/customers/${customerid}/certificates/acme/externalAccountBinding" | ___x_cmd_gddy_cert_customer___handle_ui get_domain get_bind

}

___x_cmd_gddy_cert_customer___handle_ui(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
       ___x_cmd_cmds cat
        ___x_cmd_gddy_http_error
        return
    fi
    if ___x_cmd_gddy_http_error; then
        case "$1" in
            search)
                 x ja jl2c .certificates.1.certificateId .certificates.1.commonName .certificates.1.status  .certificates.1.createdAt| \
                x csv header --add  CertificateId  CommonName Status CreatedAt | \
                x csv static_tab
                ;;
            get)
                x ja jl2c .certificateId .commonName .status .createdAt .contact.email | \
                x csv header --add  CertificateId CommonName Status CreatedAt Email | \
                x csv static_tab

                ;;
            get_status)
                x jo 2c .domain .domainEntityId .status .createdAt .type .usage | \
                x csv header --add  Domain DomainEntityId Status CreatedAt Type Usage | \
                x csv static_tab
                ;;
            get_domain)
                x ja jl2c  .domain .domainEntityId .status .createdAt .type .usage |\
                x csv header --add  Domain DomainEntityId Status CreatedAt Type Usage | \
                x csv static_tab
                ;;
            get_bind)
                x ja jl2c .directoryUrl .keyId .hmacKey |\
                x csv header --add  DirectoryUrl keyId HmacKey | \
                x csv static_tab
                ;;
        esac
    fi
}

