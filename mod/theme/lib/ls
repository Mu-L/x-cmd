# shellcheck shell=dash disable=SC2120,SC2034
___x_cmd_theme_ls(){
    local X_help_cmd=;  X_help_cmd='x help -m theme ls' help:arg:parse
    [ $# -gt 0 ] || set -- info
    local op="$1";  shift
    case "$op" in
        -a|--all|all)       ___x_cmd_theme_ls___all "$@"    ;;
        -i|--info|info)     ___x_cmd_theme_ls___info        ;;
        *)                  ___x_cmd_theme_ls___info        ;;
    esac
}

___x_cmd_theme_ls___info(){
    local x_
    ___x_cmd_theme_current_

    local default_activated=

    local e
    local value
    local IFS=" "
    for e in vscode gnome iterm apple kde ide windows konsole; do
        local display="$e"
        case "$display" in
            iterm)      display=iTerm
        esac
        eval value="\$___X_CMD_THEME_NAME_${e}"

        if [ "$___X_CMD_THEME_TERM_VENDOR" = "$e" ]; then
            printf "${___X_CMD_UNSEENCHAR_033}[33;1m%10s %-10s${___X_CMD_UNSEENCHAR_033}[0m\n" "${display}:" "${value}"
            [ -n "$value" ] || default_activated=1
        else
            printf "%10s %-10s\n" "${display}:" "${value}"
        fi
    done

    if [ -n "$default_activated" ]; then
        printf "${___X_CMD_UNSEENCHAR_033}[33;1m%10s %-10s${___X_CMD_UNSEENCHAR_033}[0m\n" "default:" "${___X_CMD_THEME_NAME_default}"
    else
        printf "%10s %-10s\n" "default:" "${___X_CMD_THEME_NAME_default}"
    fi
}

___x_cmd_theme_ls___all(){
    case "$1" in
        --no-cache)     ___x_cmd_theme_update || return ;;
    esac
    if [ -t 1 ]; then
        ___x_cmd_theme_ls___all_grid
    else
        ___x_cmd_theme_ls___all_pipe
    fi
}

___x_cmd_theme_ls___all_grid(){
    local x_
    ___x_cmd_theme_current_

    local theme
    local lasttheme
    ___x_cmd_theme_ls___all_pipe | while read -r item; do
        theme="${item%/*}"
        scheme="${item#*/}";    [ "$scheme" != "$item" ] || scheme=""
        if [ "$lasttheme" != "$theme" ]; then
            [ "$lasttheme" = "" ] || printf "\n"
            lasttheme="$theme"
            if [ "${x_%/*}" = "$theme" ]; then
                printf "${___X_CMD_UNSEENCHAR_033}[31;1m"
                printf "%-12s  " "${theme}"
                printf "${___X_CMD_UNSEENCHAR_033}[0m"
            else
                printf "%-12s  " "${theme}"
            fi
        fi

        if [ "$x_" = "$item" ]; then
            printf "${___X_CMD_UNSEENCHAR_033}[33;1m"
            printf "%8s  " "$scheme"
            printf "${___X_CMD_UNSEENCHAR_033}[0m"
        else
            printf "%8s  " "$scheme"
        fi

    done
    printf "\n"
}

___x_cmd_theme_ls___all_pipe(){
    ___x_cmd_theme_ls___all_pipe_main || return
    printf "%s\n" "random"
}

___x_cmd_theme_ls___all_pipe_main(){
    local x_file=; ___x_cmd_theme_which___getfile_ classify.yml || return
    < "$x_file" ___x_cmd_theme_ls___parse_classify
}

___x_cmd_theme_ls___parse_classify(){
    ___x_cmd_cmds_awk '
    ($0 ~ "^  [a-zA-z]") { gsub("(^[ ]*)|(:$)", "", $0); theme = $0; next; }
    ($0 ~ "^    -"){ scheme = $2; print theme "/" scheme; }
    '
}

___x_cmd_theme_update(){
    local X_help_cmd=;  X_help_cmd='x help -m theme update' help:arg:parse
    ___x_cmd_theme___pkg_unzip style --update "dist/$___X_CMD_THEME_PKG_TAR_NAME" "${___X_CMD_THEME_PKG_PATH}/${___X_CMD_THEME_PKG_TAR_NAME}" "$___X_CMD_THEME_DATA_PATH"
}

# It is a wierd display, but it is interesting.
# ___x_cmd_theme_ls___all_grid1(){
#     local theme
#     local lasttheme
#     ___x_cmd_theme_ls___all_pipe | while read -r item; do
#         theme="${item%/*}"
#         scheme="${item#*/}"
#         if [ "$lasttheme" != "$theme" ]; then
#             [ "$lasttheme" = "" ] || printf "\n"
#             lasttheme="$theme"
#         fi
#         printf "${___X_CMD_UNSEENCHAR_033}[36m%16s${___X_CMD_UNSEENCHAR_033}[2;37m/%s${___X_CMD_UNSEENCHAR_033}[0m  "   "${theme}" "${scheme}"
#     done
# }
