# shellcheck shell=dash

xrc:mod:lib     version     verify

___x_cmd_version___main(){
    [ $# -gt 0 ] || {
        x help -m version >&2
        return 1
    }
    local op="$1"; shift
    case "$op" in
        current|sum|verify|calsum)
            "___x_cmd_version_$op" "$@"
        ;;
        --help|-h) x help -m version >&2; return 1 ;;
        *)
            ___x_cmd_version_current "$op" "$@"
        ;;
    esac
}

___x_cmd_version_current(){
    printf "%s\n" "$___X_CMD_VERSION"
    ___x_cmd_version_sum
}

___x_cmd_version_sum_(){
    [ -z "${___X_CMD_VERSION_SUM}" ] || return 0
    [ -f "${___X_CMD_ROOT_METADATA}/version_sum" ] || {
        local code; code="$(___x_cmd_version_calsum "$___X_CMD_ROOT_CODE")" || return 1
        printf "___X_CMD_VERSION_SUM=%s\n" "${code}" >"${___X_CMD_ROOT_V_VERSION}/version_sum"
    }

    read -r ___X_CMD_VERSION_SUM<"${___X_CMD_ROOT_METADATA}/version_sum"
    ___X_CMD_VERSION_SUM="${___X_CMD_VERSION_SUM#___X_CMD_VERSION_SUM=}"
}

___x_cmd_version_sum(){
    ___x_cmd_version_sum_ || return
    printf "%s\n" "${___X_CMD_VERSION_SUM}"
}

___x_cmd_version_calsum(){
    local dir="${1:-$___X_CMD_ROOT_CODE}"

    if [ -d "$dir/adv" ]; then
        {
            x sha512 X
            x hashdir --sha512 "$dir/mod"
            x hashdir --sha512 "$dir/adv"
        } | x sha512
    else
        x:error "this is not a valid release version because it does not contain adv directory generated."
        return 1
    fi
}
