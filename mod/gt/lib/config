# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gt_config(){
    param:subcmd ___x_cmd_gt_config   \
        which    "Show current config path"                            \
        get      "Output the value of a given configuration key"       \
        set      "Update configuration with a value for the given key"
    param:subcmd:try
    param:run

    ___x_cmd_gt_config _param_help_doc
    return 1
}

___x_cmd_gt_config_which(){
    param:void
    printf "%s" "${___X_CMD_GT_CFG}/___x_cmd_gt_GITEE_DEFAULT"
}

# shellcheck disable=SC2154
___x_cmd_gt_config_get(){
    param:scope     ___x_cmd_gt
    param:dsl       '
type:
    ConfigName  =   oauth_token user git_protocol
options:
    --host        "host name"                               <>="gitee.com"
    #1            "The name of the configuration to get"    <>:ConfigName
'
    param:run
    [ -e  "${___X_CMD_GT_CFG}/___x_cmd_gt_GITEE_DEFAULT" ] || return 1
    ___x_cmd_git_config_get "${___X_CMD_GT_CFG}/___x_cmd_gt_GITEE_DEFAULT" "$host" "$1"
}

___x_cmd_gt_config_set(){
    param:scope     ___x_cmd_gt
    param:dsl       '
type:
    ConfigName  =   oauth_token user git_protocol
options:
    --host    "host name"                             <>="gitee.com"
    #1        "Please provide configuration key"      <>:ConfigName
    #2        "Please provide configuration val"      <>
'
    param:run
    local ___gitee_path="${___X_CMD_GT_CFG}/___x_cmd_gt_GITEE_DEFAULT"
    [ -e "$___gitee_path" ] || mkdir -p "$___X_CMD_GT_CFG"
    ___x_cmd_git_config_set "$___gitee_path" "$host" "$1" "$2" && return 0
    gt:error "gitee config set fail"
}
