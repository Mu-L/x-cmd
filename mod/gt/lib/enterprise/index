# shellcheck shell=sh
# shellcheck disable=SC2039,3043
# define lazy loader
# ___x_cmd_definelazyloader   ___x_cmd_gt_enterprise_member        gt/lib/enterprise/member

___x_cmd_gt_enterprise(){
    param:scope     ___x_cmd_gt
    param:subcmd ___x_cmd_gt_enterprise                     \
        "ls|l"          "List all enterprise"               \
        "info|i"        "Show enterprise information"       \
        issue           "enterprise issue  management"      \
        repo            "enterprise repo   management"      \
        member          "enterprise member management"
    param:subcmd:try
    param:run

    ___x_cmd_gt_enterprise _param_help_doc
    return 1
}

# Section: list & info

# shellcheck disable=SC2154
# https://gitee.com/api/v5/swagger#/getV5UserEnterprises
___x_cmd_gt_enterprise_ls(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    --page       "page"                                                 <>="1"
    --per_page   "per_page"                                             <>="30"
    --admin      "list only authorized users managed enterprise"
    --json|-j    "output origin json data"
'
    param:run

    ___X_CMD_UI_STATIC=1 ___gt_ui_mutual '___ui_table_json Id=.id Name=.name Path=.path -- $@' \
        ___x_cmd_gt_get_multi "/user/enterprises" admin
}

# shellcheck disable=SC2154
# https://gitee.com/api/v5/swagger#/getV5EnterprisesEnterprise
___x_cmd_gt_enterprise_info(){
    param:scope     ___x_cmd_gt
    param:dsl       '

options:
    #1             "Please provide enterprise path"    <>
    --json|-j      "output origin json data"
'
    param:run
    [ -n "$1" ] || M='accepts 1 arg(enterprise path), received empty' arg:ret:64
    ___x_cmd_gt_curl get "/enterprises/$1" | ___x_cmd_gt_enterprise____ui_handler Info "$1"
}
# EndSection

# Section: enterprise UI
___x_cmd_gt_enterprise____ui_handler(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gt_http_error
        return
    fi
    (
        case "$1" in
            Info)
                _data="name=.name ___path=.path"
                _inf_msg="$2 enterprise information"
                _err_msg="No find any enterprise info data by $2"
            ;;
        esac
        eval x jo env . _id=.id gt_resp_err=.message gt_resp_err=.error "$_data"
        if [ -n "$_id" ]; then
            ___x_cmd_ui_tf  true "${_inf_msg}:" ${name:+"Name: $name"} ${___path:+"Path: $___path"}
        else
            ___x_cmd_ui_tf false "${_err_msg}:" >&2
            ___x_cmd_gt____handle_resp
            return 1
        fi
    )
}

# EndSection

___x_cmd_gt_enterprise_repo(){
    param:subcmd ___x_cmd_gt_enterprise_repo                \
        "ls|l"      "List enterprise repo"                  \
        "create|c"  "Create enterprise repo"                \
        app         "Interactive UI show enterprise repo"
    param:subcmd:try
    param:run

    ___x_cmd_gt_enterprise_repo _param_help_doc
    return 1
}

# Section: Repo List
# https://gitee.com/api/v5/swagger#/getV5EnterprisesEnterpriseRepos
___x_cmd_gt_enterprise_repo_ls(){
    param:scope     ___x_cmd_gt
    param:dsl       '
type:
    Genre = all public internal private
options:
    #1              "Please provide enterprise path"    <>
    --type          "repo type"                         <>:Genre="all"
    --page          "page"                              <>="1"
    --per_page      "per_page"                          <>="30"
    --direct        "only get direct repo"
    --json|-j       "output origin json data"
'
    param:run
    [ -n "$1" ] || M='accepts 1 arg(enterprise path), received empty' arg:ret:64
    local ___gt_error_msg="Couldn't find any data by ${1}"
    [ -n "$direct" ] || direct=false
    ___X_CMD_UI_STATIC=1 ___gt_ui_mutual '___ui_table_json RepoPath=.full_name IsPrivate=.private Url=.html_url -- $@' \
        ___x_cmd_gt_get_multi "/enterprises/$1/repos" type direct
}
# EndSection

# Section: Repo App
# https://gitee.com/api/v5/swagger#/getV5EnterprisesEnterpriseRepos
___x_cmd_gt_enterprise_repo_app(){
    param:scope     ___x_cmd_gt
    param:dsl       '
type:
    Genre = all public internal private
options:
    #1              "Please provide enterprise path"    <>
    --repo_type     "type"                              <>:Genre="all"
    --page          "page"                              <>="1"
    --per_page      "per_page"                          <>="20"
    --direct        "only get direct repo"
'
    param:run
    [ -n "$1" ] || M='accepts 1 arg(enterprise path), received empty' arg:ret:64
    local enterprise="$1"
    local ___gt_error_msg="Couldn't find any data by $enterprise"
    local ___X_CMD_TUI_TABLE_FINAL_COMMAND
    local ___X_CMD_TUI_TABLE_CUR_LINE
    local ___X_CMD_TUI_TABLE_CUR_ITEM
    local ___X_CMD_GT_TUI_TABLE_REQUSET_DATA='___x_cmd_gt_get_multi___get_data "/enterprises/$1/repos" repo_type direct page per_page'
    ___x_cmd_gt_tui_app "enterprise_repo_app.awk"
    [ -n "$direct" ] || direct=false
    # ___gt_ui_mutual '___ui_table_json Id=.id Name=.name public=.public OwnerName=.owner.name DefaultBranch=.default_branch \
    #     OpenIssuesCount=.open_issues_count license=.license Url=.html_url -- $@' \
        # ___x_cmd_gt_get_multi "/enterprises/$1/repos" repo_type direct page per_page
}
# EndSection
