# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# Should be like this.
# gt repo collaborator add el:admin
# gt repo collaborator remove user-a
# gt repo collaborator add user-b

# gt repo collaborator +el:admin -user-a +user-b
# shellcheck disable=SC2154,SC2086
___x_cmd_gt_repo_collaborator(){
    param:subcmd ___x_cmd_gt_repo_collaborator                \
        "ls|l"          "List   repo collaborator"            \
        "edit|ed"       "Edit   repo collaborator role"       \
        add             "Add    repo collaborator"            \
        rm              "Remove repo collaborator"            \
        app             "Interactive UI show repo of user"
    param:subcmd:try
    param:run

    ___x_cmd_gt_repo_collaborator _param_help_doc
    return 1
}

# Section: membership app
___x_cmd_gt_repo_collaborator_app(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    --repo              "Provide ownerPath/RepoPath.(default owner: current user)"           <>:RepoPath
    --page              "page"                                                               <>="1"
    --per_page          "per_page"                                                           <>="20"
    --json|-j           "output origin json data"
'
    param:run

    local ___gt_error_msg="Couldn't find any data by: ${1}"
    ___x_cmd_gt_param_init_owner_repo

    local ___X_CMD_TUI_TABLE_FINAL_COMMAND
    local ___X_CMD_TUI_TABLE_CUR_LINE
    local ___X_CMD_TUI_TABLE_CUR_ITEM
    local ___X_CMD_GT_TUI_TABLE_REQUSET_DATA='___x_cmd_gt_get_multi "https://gitee.com/api/v5/repos/${owner_repo}/collaborators"'
    ___x_cmd_gt_tui_app "repo.collaborator.app.awk"

    ___x_cmd_gt_repo_collaborator_status_handler
}

___x_cmd_gt_repo_collaborator_status_handler(){
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        ___x_cmd_gt_curl_error
        return
    fi
    local user_name
    user_name="${___X_CMD_TUI_TABLE_CUR_LINE##*NameSpace: }"
    user_name=${user_name%%
Name: *}
    case "$___X_CMD_TUI_TABLE_FINAL_COMMAND" in
            "ENTER")        printf "%s\n" "$___X_CMD_TUI_TABLE_FINAL_COMMAND"  ;;
            "c")            ___x_cmd_gt_repo_collaborator_add    --repo "${owner_repo}"                               ;;
            "u")            ___x_cmd_gt_repo_collaborator_edit   --repo "${owner_repo}"    "$user_name"               ;;
            "d")            ___x_cmd_gt_repo_collaborator_rm     --repo "${owner_repo}"    "$user_name"               ;;
            *)              return   ;;
    esac
}
# EndSection

# Section: List

# https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoCollaborators
___x_cmd_gt_repo_collaborator_ls(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    --repo              "Provide ownerPath/RepoPath.(default owner: current user)"           <>:RepoPath
    --page              "page"                                                               <>=""
    --per_page          "per_page"                                                           <>=""
    --json|-j           "output origin json data"
'
    param:run
    local ___gt_error_msg="Couldn't find any data by: ${1}"
    ___x_cmd_gt_param_init_owner_repo

    ___gt_ui_mutual '___ui_table_json NameSpace=.login Name=.name Admin=.permissions.admin PushPermissions=.permissions.push -- $@' \
        ___x_cmd_gt_get_multi "https://gitee.com/api/v5/repos/${owner_repo}/collaborators"

}

# EndSection

# Section: Add Edit

# shellcheck disable=SC2181,SC2154
# https://gitee.com/api/v5/swagger#/putV5ReposOwnerRepoCollaboratorsUsername
___x_cmd_gt_repo_collaborator_add(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1                  "Provide user login path"                                            <>:UserName
    --repo|-r           "Provide ownerPath/RepoPath.(default owner: current user)"           <>:MultipleRepoPath
    --permission        "collaborator permission(pull,push,admin)"                           <>:RepoPerm
    --json|-j           "output origin json data"
'
    param:run

    local name
    local _tmp_name="$1"
    local _tmp_repo="$repo"
    # TODO: N to N && 1 TO N & N to 1
    while :; do
        repo="${_tmp_repo%%,*}"
        _tmp_repo="${_tmp_repo#*,}"
        ___x_cmd_gt_param_init_owner_repo
        for name in "$@"; do
            # To Update
            [ -z "$_____X_CMD_GT___REPO_COLLABORATOR_EDIT" ] || ___x_cmd_gt_repo_collaborator_rm --repo $owner_repo --yes "${name##*/}" 1>/dev/null 2>&1
            ___x_cmd_gt_curl put "https://gitee.com/api/v5/repos/$owner_repo/collaborators/${name##*/}" -- permission | ___x_cmd_gt_repo_collaborator_add_json_status_handler
        done
        [ "$repo" != "$_tmp_repo" ] || return 0
    done
}

___x_cmd_gt_repo_collaborator_add_json_status_handler(){
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        ___x_cmd_gt_curl_error
        return
    fi
    (
        x jo env . id=.id permissions=.permissions.pull  gt_resp_body=.
        if [ -n "$id" ]; then
            if [ "$permissions" = "true" ]; then
                gt:warn "$name already exists in $owner_repo"
                return 1
            fi
            ___x_cmd_ui_tf true  "Resolve Add collaborator $name to $owner_repo successfully"
            return 0
        else
            ___x_cmd_ui_tf false "Resolve user failure: $name to $owner_repo" "HttpCode: $(___x_cmd_gt_resp_code)" "ErrorMsg:"
            ___x_cmd_gt_resp_body
        fi
    )
}

___x_cmd_gt_repo_collaborator_edit(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1                  "Username list separated by commas(,)"                               <>:UserName
    --repo|-r           "Provide ownerPath/RepoPath.(default owner: current user)"           <>:MultipleRepoPath
    --permission|-p     "collaborator permission(pull,push,admin)"                           <>:RepoPerm
    --json|-j           "output origin json data"
'
    param:run
    if [ "$1" = "$(___x_cmd_gt_current_owner)" ]; then
        ___x_cmd_gt_param_init_owner_repo
        gt:error "Gitee unable to edit personal permission through api. Please move website" \
            "$(printf "\033[4;33m%s\033[0m" "https://gitee.com/${owner_repo}/team")"
        return 1
    fi
    _____X_CMD_GT___REPO_COLLABORATOR_EDIT=1 ___x_cmd_gt_repo_collaborator_add --repo "$repo" --permission "$permission" "$1"
}

# EndSection

# Section: Remove

# shellcheck disable=SC2181,SC2034
# https://gitee.com/api/v5/swagger#/deleteV5ReposOwnerRepoCollaboratorsUsername
___x_cmd_gt_repo_collaborator_rm(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1              "Username list."                                                     <>:UserName
    --repo|-r       "Provide ownerPath/RepoPath.(default owner: current user)"           <>:RepoPath
    --yes|-y        "Ignore remove prompt interception"
'
    param:run
    ___x_cmd_gt_param_init_owner_repo

    local username
    local _exit_code=0
    local gt_resp_body
    for username in "$@"; do
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure to $owner_repo remove user: $(___x_cmd_ui bold red "$username") ?" || continue
        if ___x_cmd_gt_curl delete "https://gitee.com/api/v5/repos/$owner_repo/collaborators/${username##*/}" | ___x_cmd_gt_curl_handler_no_content; then
            ___x_cmd_ui_tf true  "Remove $username to $owner_repo successfully"
            _exit_code=0
        else
            _exit_code=$?
            gt:debug "remove repo error. exit_code: $exit_code"
            ___x_cmd_ui_tf false "Remove user failure: $username" "HttpCode: $(___x_cmd_gt_resp_code)" "ErrorMsg:"
            ___x_cmd_gt_resp_body
        fi
    done
    return "$_exit_code"
}

# EndSection
