# shellcheck shell=sh disable=SC3043,SC2034

___x_cmd_gt_repo_page(){
    param:subcmd ___x_cmd_gt_repo_page                  \
        info        "Show information of page"          \
        build       "Build page"
    param:subcmd:try
    param:run

    ___x_cmd_gt_repo_page _param_help_doc
    return 1
}

# Section: Info
# https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoPages
# shellcheck disable=SC2154
___x_cmd_gt_repo_page_info(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1              "Provide ownerPath/RepoPath.(default owner: current user)"   <>:RepoPath
    --json|-j       "output origin json data"
'
    param:run
    local repo="${1:?"Please provide ownerPath/RepoPath"}"
    ___x_cmd_gt_param_init_owner_repo

    ___x_cmd_gt_curl get "https://gitee.com/api/v5/repos/${owner_repo}/pages" | ___x_cmd_gt_repo_page_info_status_handler
}

# shellcheck disable=SC2154
___x_cmd_gt_repo_page_info_status_handler(){
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        ___x_cmd_gt_curl_error
        return
    fi
    (
        x jo env . status=.status gt_resp_body=.
        if [ -n "$status" ]; then
            ___x_cmd_ui_tf true  "Success" "status: $status"
        else
            ___x_cmd_ui_tf false "Get page info failure"  "ErrorMsg:"
            ___x_cmd_gt____handle_resp
            return 1
        fi
    )
}
# EndSection

# Section: Build
# https://gitee.com/api/v5/swagger#/postV5ReposOwnerRepoPagesBuilds
___x_cmd_gt_repo_page_build(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1              "Provide ownerPath/RepoPath.(default owner: current user)"       <>:RepoPath
    --json|-j       "output origin json data"
'
    param:run
    local repo="${1:?"Please provide ownerPath/RepoPath"}"
    ___x_cmd_gt_param_init_owner_repo

    ___x_cmd_gt_curl post "https://gitee.com/api/v5/repos/${owner_repo}/pages/builds" | ___x_cmd_gt_repo_page_build_status_handler
}

___x_cmd_gt_repo_page_build_status_handler(){
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        ___x_cmd_gt_curl_error
        return
    fi
    (
        x jo env . status=.status gt_resp_body=.
        if [ -n "$status" ]; then
            ___x_cmd_ui_tf true  "Build ${owner_repo} page successfully"
        else
            ___x_cmd_ui_tf false "Build ${owner_repo} page failure"  "ErrorMsg:"
            ___x_cmd_gt____handle_resp
            return 1
        fi
    )
}
# EndSection
