# shellcheck shell=sh disable=SC3043,2002,SC2154

# x gt org apply org.yml lijunhao=edwinjhlee zhengyuhang=mnnna
# cat org.yml | x gt org apply - lijunhao=edwinjhlee

___x_cmd_gt_org_apply(){
    param:void
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then { ___x_cmd_gt_org_apply__help; return 0; }
    fi
    ___x_cmd_gt_current_owner 1>/dev/null || return 1

    local filepath="${1:?Provide filepath}"; shift

    local code; if code="$(
        {
            ___x_cmd_gt_org_apply___parse_data | {
                x jo env . content=. org=.org  apply_membership=.membership
                [ -n "$org" ] || { gt:error "Not found apply configure 'org' main key" >/dev/stderr; return 1; }

                ___x_cmd_gt_org_apply__replace_args "$@"
                printf "%s\n" "$content"
                gt:info "Getting org info ..."
                ___x_cmd_gt_org_apply__org_info
                ___x_cmd_gt_org_apply__membership_info
            }
        } | {
            awk -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/arr.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/sh.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/j/json.awk"  \
                -f "$___X_CMD_ROOT_MOD/awk/lib/j/jiter.awk" \
                -f "$___X_CMD_ROOT_MOD/gt/lib/awk/org/membership.awk" \
                -f "$___X_CMD_ROOT_MOD/gt/lib/awk/org.awk" \
                -f "$___X_CMD_ROOT_MOD/gt/lib/awk/replace.awk" \
                -f "$___X_CMD_ROOT_MOD/gt/lib/org/apply.awk"
        }
    )"; then
        gt:debug "apply code: $code"
        [ -n "$code" ] || {
            printf "%s\n" ""; gt:info "Org apply no changes required"
            return 0
        }
        gt:info "Handling Org by info ..."
        if [ -n "$___X_CMD_GT_DRY_RUN" ]; then      printf "%s\n" "$code";
        else                                        eval "$code";
        fi
        # echo "$code"
    else
        code=$?
        gt:error "Exit=$code. Fail to apply: $filepath" >/dev/stderr
    fi
}

___x_cmd_gt_org_apply___parse_data(){
    case "$filepath" in
        -)              cat | x y2j ;;
        *.json)         cat "$filepath" ;;
        *)              <"$filepath" x y2j ;;
    esac
}

# shellcheck disable=SC2154
___x_cmd_gt_org_apply__membership_info(){
    [ -n "$apply_membership" ] || { printf "\n"; return 0; }

    NO_CACHE=1 x gt org membership ls --json --org "$org" | x ja t "\t" ; printf "\n"
    # cat "$(x wsroot)"/.x-cmd/org-member.json | x ja t "\t" ; printf "\n"
}

___x_cmd_gt_org_apply__org_info(){
    NO_CACHE=1  x gt org info --json "$org" | x ja t "\t" ; printf "\n"
    # cat "$(x wsroot)"/.x-cmd/org-info.json | x ja t "\t" ; printf "\n"
}

___x_cmd_gt_org_apply__replace_args(){
    if [ $# -gt 0 ]; then
        local IFS=","; printf "replace:%s\n" "$*"
        return
    fi
    # cat "$(x wsroot)"/.x-cmd/lteam-member.yml | x y2j | x ja t "\t" ; printf "\n"
}

___x_cmd_gt_org_apply__help(){
    printf "\033[1m%s\033[0m\n\n\033[33m%s\033[0m\n    \033[36m%s\033[0m\n    \033[36m%s\033[0m\n" \
        "x gt org apply <filepath | '-' config from stdin> <...alias name list>" \
        "Example" \
        "x gt org apply org.yml bot=x-cmd-bot" \
        "cat ./org.yml | x gt org apply - bot=x-cmd-bot"
}

# cat .x-cmd/apply/gitee-org.yml | x gt org apply -  \
#     "lijunhao=edwinjhlee"  \
#     "hejiajie=jerry8hero" \
#     "litinghui=padparadsayc" \
#     "tangzhiwen=mycw" \
#     "zhengqiubin=AAAben" \
#     "zhengqiakai=qiakai" \
#     "zhengyuhang=mnnna" \
#     "liyongyi=liyongyi1004" \
#     "huangshengtao=huangshengtao798" \
#     "wangli=amslime" \
#     "zhangchi=zhangFly-code" \
#     "dengfuqiang=dengfuqiang"