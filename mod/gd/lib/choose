# shellcheck shell=dash disable=SC2034

___x_cmd_gd_pick_set(){
    local X_help_cmd="x help -m gd -i"
    case "$1" in
        pick)       ___x_cmd_gd_util___dict_set dict interactive_tool pick ;;
        fzf)        ___x_cmd_gd_util___dict_set dict interactive_tool fzf  ;;
        --help|-h)  help:show:ret:0  ;;
        *)          help:show:ret:64 ;;
    esac
}

___x_cmd_gd_pick___app(){
    local x_=; ___x_cmd_gd_util___dict_get_ dict interactive_tool
    case "$x_" in
        fzf)    printf "%s\n" "$___X_CMD_PICK_DATA" | x fzf --layout=reverse --height=30% ;;
        *)      x tty update
                local row="$(( LINES / 2 ))"
                if [ "${LINES}" -lt 20 ];     then    row="$LINES"
                elif [ "${row}" -lt 20 ];     then    row=20
                fi
                x pick --width "$COLUMNS" --row "$row" ;;
    esac
}

___x_cmd_gd_pick_(){
    local ___X_CMD_PICK_DATA=; ___X_CMD_PICK_DATA="$( "$@" 2>/dev/null )"
    [ -n "$___X_CMD_PICK_DATA" ] || M="Not found directory path" N=gd log:ret:1

    x_=
    case "$___X_CMD_PICK_DATA" in
        *"$___X_CMD_UNSEENCHAR_NEWLINE"*)
            if ___x_cmd_is_interactive; then
                x_="$( ___x_cmd_gd_pick___app )" || return 1
            else
                x_="$( printf "%s\n" "$___X_CMD_PICK_DATA" | ___x_cmd_gd_util___head 1 )" || return
            fi
            ;;
        *)
            x_="$___X_CMD_PICK_DATA"
    esac

    [ -n "$x_" ] || N=gd M="No options selected" log:ret:1
    [ -d "$x_" ] || N=gd M="Invalid directory [path=$x_]" log:ret:1
}

