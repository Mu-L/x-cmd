# shellcheck shell=dash

xrc cfgy
x log init gd
___X_CMD_GD_DATA="$___X_CMD_ROOT_DATA/gd"
xrc:mod:lib gd  util back choose domain search history

# Section: main

# jump to a folder contains: jc bin
# jump to a child folder: jc lib
# jump to a father folder: jo opening; gd .

# gd backward
# gd forward = find
# gd - = history in environment
# gd <filename> = unmatch to search history or rules

# gd /u/l/

___x_cmd_gd___main(){
    local ___X_CMD_GD_HISTORY_MAXNUM="${___X_CMD_GD_HISTORY_MAXNUM:-500}"
    if [ "$#" -eq 0 ]; then
        # TODO: Open the file explorer app.
        # ___x_cmd_inner_cd; return
        ___x_cmd_gd___search_history
        return
    fi

    case "$1" in
        "")             ___x_cmd_gd_origin  ;   return ;;
        -)              ___x_cmd_gd_origin -;   return ;; # gd to most recent
        -i)             shift; ___x_cmd_gd_interactive "$@"; return ;;
        -h|--help)      M='gd' help:ret:0 ;;
    esac

    ___x_cmd_gd___main_magic "$@"    # No such directory ... Then magic happens.
}

___x_cmd_gd___main_magic(){
    local p="$1"; ! [ "$#" -gt 0 ] || shift
    if [ -d "$p" ]; then
        ___x_cmd_gd_origin "$p"; return
    fi

    case "$p" in
        -d|--domain)        ___x_cmd_gd_domain "$@"                     ;;
        :|:*)               ___x_cmd_gd_domain_magic "${p}" "$@"        ;;

        # gd back
        -b)                 ___x_cmd_gd_back "$@"                       ;;
        ...)                ___x_cmd_gd_origin ../..                    ;;
        ....)               ___x_cmd_gd_origin ../../../                ;;
        ../*)               ___x_cmd_gd_back "${p#*/}"                  ;;
        .../*)              ___x_cmd_gd_back "${p#*/}"                  ;;

        # gd-forward        # Might cause some problem
        -f)                 ___x_cmd_gd_forward "$@"                    ;;
        ./*)                ___x_cmd_gd_forward "${p#./}"               ;;

        # history
        -H|--history)       ___x_cmd_gd_history "$@" ;;
        --)                 ___x_cmd_gd___first_history ;;
        -*)                 ___x_cmd_gd___firstmatch_history "${p#-}"   ;;

        # gd with find

        %*)                 ___x_cmd_gd___search_xcmdroot   "${p#*%}"   ;;      # consider
        ,*)                 ___x_cmd_gd___search_home       "${p#*,}"   ;;      # = is not support in zsh, that's why we use ,

        /*)                 ___x_cmd_gd_choose ___x_cmd_gd_iter / "${p#/}"     ;;
        */*)                ___x_cmd_gd_choose ___x_cmd_gd_iter . "${p}"       ;;
        *)                  ___x_cmd_gd_choose ___x_cmd_gd_iter . "${p}"       ;;
    esac
}

___x_cmd_gd___main -H --load
___x_cmd_gd_domain_init

___x_cmd_gd_forward(){
    ___x_cmd_gd_choose command find . -path "*${1}*" -type d -print
}

# Section: gd origin

# 1. Explictly Inject to gd: x gd :inject
# alias gd=___x_cmd_gd_origin
___x_cmd_gd_origin(){
    ___x_cmd_inner_cd "$@" || return
    if [ "${-#*i}${___X_CMD_FS_DEBUG}" != "$-" ] && [ -t 1 ] ; then
        [ -f "$___X_CMD_GD_DATA/history" ] || x touch "$___X_CMD_GD_DATA/history"
        ___X_CMD_GD_HISTORY="$PWD${___X_CMD_GD_HISTORY:+
}${___X_CMD_GD_HISTORY}"
        ___x_cmd_gd___trim_history
    fi
#     ___X_CMD_GD_HISTORY="$(pwd | tee -a "$___X_CMD_GD_DATA/history")${___X_CMD_GD_HISTORY:+
# }${___X_CMD_GD_HISTORY}"
}

# EndSection
