# shellcheck shell=dash

___x_cmd_mkdirp "$___X_CMD_GD_DATA"

___x_cmd_gd_util_uniq_head(){
    awk -v head="${1:-100}" '
{
    if (count > head) { exit(exit_code); }
    if (uniq_map[$0] == "") {
        uniq_map[$0] = 1
        print $0
        count = count + 1
    } else {
        exit_code = 1
    }
}
END {
    exit(exit_code)
}
'
}

___x_cmd_gd_history(){
    local op="$1"; shift
    case "$op" in
        --ls|-l)            ___x_cmd_gd___list_history "$@" ;;
        --clear|-c)         ___x_cmd_gd___clear_history "$@" ;;

        --first|--head|--load|--trim)
                            "___x_cmd_gd___${op#--}_history" "$@" ;;

    esac
}

___x_cmd_gd___list_history(){
    ___X_CMD_CD_HISTORY="$(printf "%s" "$___X_CMD_CD_HISTORY" | ___x_cmd_gd_util_uniq_head 200)"
    printf "%s\n" "$___X_CMD_CD_HISTORY"
}


___x_cmd_gd___clear_history(){
    # very less used
    ___X_CMD_CD_HISTORY=
}

___x_cmd_gd___head_history(){
    ___x_cmd_gd___trim_history "$@"
    printf "%s" "$___X_CMD_CD_HISTORY"
}

___x_cmd_gd___trim_history(){
    ___X_CMD_CD_HISTORY="$(printf "%s" "$___X_CMD_CD_HISTORY" | ___x_cmd_gd_util_uniq_head "${1:-200}")"
}

___x_cmd_gd___first_history(){
    ___x_cmd_gd___trim_history
    local target="${___X_CMD_CD_HISTORY#*
*
}"
    [ "$target" = "$___X_CMD_CD_HISTORY" ] && printf "%s\n" "gd: no such directory: " >&2 && return
    target="${target%%
*}"
    ___x_cmd_gd_origin "$target"
}

___x_cmd_gd___firstmatch_history(){
    local p="${1}"

    # using the first match
    ___x_cmd_gd___trim_history 200
    ___x_cmd_gd_origin "$(awk "FNR <= 1" <<A
$(printf "%s" "$___X_CMD_CD_HISTORY" | grep "${p}")
A
)"
}

___x_cmd_gd_load_history(){
    if [ -f "$___X_CMD_GD_DATA/history" ]; then
    ___X_CMD_CD_HISTORY=$(awk '
BEGIN {
    res_len = 0
    len = 0
}
{
    data[ len ] = $0
    len = len + 1
}
END {
    for (j=0; j<len && res_len<200; j++) {
        if (map[ data[ len-j-1 ] ] != "") {
            continue
        }
        map[ data[ len-j-1 ] ] = 1
        res_len = res_len + 1
        print data[ len-j-1 ]
    }
}' <"$___X_CMD_GD_DATA/history")
fi

    printf "%s" "$___X_CMD_CD_HISTORY" | awk '
BEGIN {
    res_len=0
    len=0
}
{
    data[ len ] = $0
    len = len + 1
}
END {
    for (j=0; j<len ; j++) {
        print data[ len-j-1 ]
    }
}
    ' > "$___X_CMD_GD_DATA/history"
}

___x_cmd_gd_load_history
