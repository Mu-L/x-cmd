# shellcheck shell=dash disable=SC2034

___X_CMD_CD_DOMAIN_0="$PWD"

# TODO: but wait until cfgy cloud design acomplished.
# x gd -d --set -g cur .
# x gd -d --set --global cur .

# x gd -d --set -c cur .
# x gd -d --set --cloud cur .

___x_cmd_gd_domain(){
    local X_help_cmd="x help -m gd -d"
    local op="$1"; [ "$#" -le 0 ] || shift
    case "$op" in
        --ls|-l)    ___x_cmd_gd_domain_ls ;;
        --cd)       ___x_cmd_gd_domain_goto "$@" ;;
        --set|--get)
                    "___x_cmd_gd_domain_${op#--}" "$@" ;;
        --ws)
                    if [ "$#" -eq 0 ]; then ___x_cmd_gd_domain_goto_wsroot
                    else                    ___x_cmd_gd_domain_goto_wsroot_inner ":ws/$1"
                    fi
                    ;;
        --help|-h)  help:show:ret:0  ;;
        *)          help:show:ret:64 ;;
    esac
}

___x_cmd_gd_domain_magic(){
    local p="$1"
    case "$p" in
        :ls)        ___x_cmd_gd_domain_ls ;;
#         :)          printf "%s" "${___X_CMD_CD_PWD_LIST#
# }" ;;

        :|:/)       ___x_cmd_gd_origin "$___X_CMD_CD_DOMAIN_0" ;;
        :/*)        ___x_cmd_gd_origin "$___X_CMD_CD_DOMAIN_0" && ___x_cmd_gd___main_magic "${p#:/}" ;;

        :ws|:ws/)   ___x_cmd_gd_domain_goto_wsroot "$@" ;;
        :ws/*)      ___x_cmd_gd_domain_goto_wsroot_inner "$@" ;;

        :*/*)       ___x_cmd_gd_domain_goto_inner "$@" ;;
        :*)         ___x_cmd_gd_domain_goto_or_set "$@" ;;
    esac
}

___x_cmd_gd_domain_ls(){
    ___x_cmd_ldict_print ___X_CMD_GD_DOMAIN_RECENT "\t=\t"
}

___x_cmd_gd_domain_goto_wsroot(){
    local x_
    x wsroot_ || return 1
    ___x_cmd_gd_origin "$x_" || return 1
}

___x_cmd_gd_domain_goto_wsroot_inner(){
    ___x_cmd_gd_domain_goto_wsroot && ___x_cmd_gd___main_magic "${1#:*/}"
}

___x_cmd_gd_domain_goto_or_set(){
    if [ "$#" -eq 1 ]; then     ___x_cmd_gd_domain_goto "$1"
    else                        ___x_cmd_gd_domain_set "$1" "$2"
    fi
}

___x_cmd_gd_domain_goto_inner(){
    ___x_cmd_gd_domain_goto "${1%%/*}" && ___x_cmd_gd___main_magic "${1#*/}"
}

___x_cmd_gd_domain_goto(){
    local val; val="$(___x_cmd_gd_domain_get "$1")" || return
    ___x_cmd_gd_origin "$val"
}

___x_cmd_gd_domain_get(){
    ___x_cmd_ldict_get ___X_CMD_GD_DOMAIN_RECENT "${1#:}"
}

___x_cmd_gd_domain_set(){
    local varname="${1#:}"
    local value="$2"

    [ -d "$value" ] || return 1
    local x_; x abspath_ "$2"; value="$x_"
    [ -d "$value" ] || return 1

    # varname="$(printf "%s" "$1" | tr "[:lower:]" "[:upper:]")"  # optimized using bash/zsh inline

    # xrc "$varname"
    # if command "___x_cmd_$varname_gd" 2>/dev/

    ___x_cmd_ldict_unshift  ___X_CMD_GD_DOMAIN_RECENT "$varname" "$value"
}

___x_cmd_gd_domain_set_or_true(){
    ___x_cmd_gd_domain_set "$@" || true
}

___x_cmd_gd_domain_init(){
    ___x_cmd_gd_domain_set x                "$___X_CMD_ROOT_V_VERSION"
    ___x_cmd_gd_domain_set xr               "$HOME/.x-cmd.root"
    ___x_cmd_gd_domain_set xrg              "$HOME/.x-cmd.root/global"
    ___x_cmd_gd_domain_set xrl              "$HOME/.x-cmd.root/local"
    # gd :xrl/cfg

    # module
    ___x_cmd_gd_domain_set gita             "${___X_CMD_GITA_CACHE:-"$___X_CMD_ROOT_SHARED/gita/DEFAULT/cache"}"
    ___x_cmd_gd_domain_set gitb             "${___X_CMD_GITB_CACHE:-"$___X_CMD_ROOT_SHARED/gitb/DEFAULT/cache"}"
    ___x_cmd_gd_domain_set gitc             "${___X_CMD_GITA_CACHE:-"$___X_CMD_ROOT_SHARED/gitc/DEFAULT/cache"}"

    [ -z "$TMPDIR" ] || ___x_cmd_gd_domain_set "tmp" "$TMPDIR"

    local x_; x os name_
    case "$_" in
        linux)
            # TODO: ???
            ___x_cmd_gd_domain_set desk     "$HOME/Desktop"
            ___x_cmd_gd_domain_set doc      "$HOME/Documents"
            ___x_cmd_gd_domain_set down     "$HOME/Downloads"
            ;;

        darwin)
            ___x_cmd_gd_domain_set icloud   "$HOME/Library/Mobile Documents/com~apple~CloudDocs"
            ___x_cmd_gd_domain_set desk     "$HOME/Desktop"
            ___x_cmd_gd_domain_set doc      "$HOME/Documents"
            ___x_cmd_gd_domain_set down     "$HOME/Downloads"
            ;;

        win)
            # consult gitbash

            ___x_cmd_gd_domain_set bing     "$HOME"             # TODO: bing cloud position
            ___x_cmd_gd_domain_set desk     "$HOME/Desktop"
            ___x_cmd_gd_domain_set doc      "$HOME/Documents"
            ___x_cmd_gd_domain_set down     "$HOME/Downloads"
            ;;
    esac

    # Just For Mac

    # ___x_cmd_gd_domain_set "nm"  ".../Downloads"          # node_modules
    # ___x_cmd_gd_domain_set "git"  ".git"                  # .git directory

    # :http ==> http://
    # :https => https://
    # :ftp => ftp://
    # :docker => docker://
    # :ali => ali://

    # :git => git://
    # :ssh => ssh://

}


# mac

# :tmp
# :icloud
# :app

# linux

# :tmp

# win

# :tmp
# :app
