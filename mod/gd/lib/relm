# shellcheck shell=dash disable=SC2034

___X_CMD_CD_RELM_0="$PWD"

# TODO: but wait until cfgy cloud design acomplished.
# x gd -d --set -g cur .
# x gd -d --set --global cur .

# x gd -d --set -c cur .
# x gd -d --set --cloud cur .

___x_cmd_gd_relm(){
    local X_help_cmd="x help -m gd --relm"
    local op="$1"; [ "$#" -le 0 ] || shift
    case "$op" in
        --ls|-l)    ___x_cmd_gd_relm___ls               ;;
        --cd)       ___x_cmd_gd_relm___goto "$@"        ;;
        --set|--get|--init)
                    "___x_cmd_gd_relm___${op#--}" "$@"  ;;
        --ws)       ___x_cmd_gd_relm___goto_wsroot "$@" ;;
        --git)      ___x_cmd_gd_relm___goto_git "$@"    ;;
        --help|-h)  help:show:ret:0  ;;
        *)          help:show:ret:64 ;;
    esac
}

___x_cmd_gd_relm___magic(){
    local p="$1"
    case "$p" in
        :ls)        ___x_cmd_gd_relm___ls                                   ;;
        :|:/)       ___x_cmd_gd_origin "$___X_CMD_CD_RELM_0"                ;;
        :/*)        ___x_cmd_gd_origin "$___X_CMD_CD_RELM_0" \
                    && ___x_cmd_gd___main_magic "${p#:/}"                   ;;

        :ws|:ws/)   ___x_cmd_gd_relm___goto_wsroot                          ;;
        :ws/*)      ___x_cmd_gd_relm___goto_wsroot "${p#*":ws/"}"           ;;

        :git|:git/) ___x_cmd_gd_relm___goto_git                             ;;
        :git/*)     ___x_cmd_gd_relm___goto_git "${p#*":git/"}"             ;;

        # :*/*)       ___x_cmd_gd_relm___goto_inner "${p#:}"                  ;;
        # :*)         shift; ___x_cmd_gd_relm___goto_or_set "${p#:}" "$@"     ;;

        :*)         ___x_cmd_gd_relm___magic0 "$@" ;;

    esac
}

___x_cmd_gd_relm___magic0(){
    local count="$((count + 1))"
    [ "$count" -lt 3 ] || N=gd M="recursive more than 3" log:ret:1

    case "$1" in
        :*/*)
            local p0="${1%%/*}"
            local p1="${1#*/}"
            local x=; ___x_cmd_gd_util___dict_get_ relm "${p0#:}" || {
                gd:error "RELM NOT found ==> $p0"
                return 1
            }
            ___x_cmd_gd_relm___magic0 "$x_/$p1"
            ;;
        :*)
            local x=; ___x_cmd_gd_util___dict_get_ relm "${1#:}" || {
                gd:error "RELM NOT found ==> $1"
                return 1
            }
            ___x_cmd_gd_relm___magic0 "$x_"
            ;;
        *)
            ___x_cmd_gd_origin "$1"
            ;;
    esac


}

___x_cmd_gd_relm___ls(){
    local x_=
    x wsroot_ && printf "%s\t=\t%s\n" "ws" "$x_"
    ___x_cmd_locatefolder_ "$PWD" .git && printf "%s\t=\t%s\n" "git" "$x_"

    ___x_cmd_gd_util___dict_inner print relm "\t=\t"
}

___x_cmd_gd_relm___goto_wsroot(){
    local rel="$1";     local x_=
    { x wsroot_ && ___x_cmd_gd_origin "${x_}"; } || return
    [ -z "$rel" ] || ___x_cmd_gd___main_magic "$1"
}

___x_cmd_gd_relm___goto_git(){
    local rel="$1";     local x_=
    { ___x_cmd_locatefolder_ "$PWD" .git && ___x_cmd_gd_origin "${x_}/.git" ; } || return
    [ -z "$rel" ] || ___x_cmd_gd___main_magic "$rel"
}

___x_cmd_gd_relm___goto_or_set(){
    if [ "$#" -eq 1 ]; then     ___x_cmd_gd_relm___goto "$1"
    else                        ___x_cmd_gd_relm___set "$1" "$2"
    fi
}

___x_cmd_gd_relm___goto_inner(){
    ___x_cmd_gd_relm___goto "${1%%/*}" && ___x_cmd_gd___main_magic "${1#*/}"
}

___x_cmd_gd_relm___goto(){
    local x=; ___x_cmd_gd_util___dict_get_ relm "$1"
    # [ -d "$x_" ] || return
    ___x_cmd_gd_origin "$x_"
}

___x_cmd_gd_relm___get(){
    local x_=; ___x_cmd_gd_util___dict_get_ relm "$1"
    printf "%s\n" "$x_"
}

___x_cmd_gd_relm___set(){
    # varname="$(printf "%s" "$1" | tr "[:lower:]" "[:upper:]")"  # optimized using bash/zsh inline

    # xrc "$varname"
    # if command "___x_cmd_$varname_gd" 2>/dev/
    local x_=; ___x_cmd_gd_relm___abs_dir_path "$2" || return
    ___x_cmd_gd_util___dict_set relm "${1#:}" "$x_"
}

___x_cmd_gd_relm___set_or_true(){
    ___x_cmd_gd_relm___set "$@" || true
}

___x_cmd_gd_relm___abs_dir_path(){
    [ -d "$1" ] || return
    x_=;    x abspath_ "$1"
    [ -d "$x_" ] || return
}

___x_cmd_gd_relm___init_put(){
    case "$2" in
        *://*)
            ___x_cmd_gd_util___dict_inner put relm "${1#:}" "$2"
            ;;
        *)
            local x_=; ___x_cmd_gd_relm___abs_dir_path "$2" || return
            ___x_cmd_gd_util___dict_inner put relm "${1#:}" "$x_"
            ;;
    esac
}

___x_cmd_gd___is_wsl(){
    local a
    read -r a</proc/version
    case "$a" in
        *WSL2*)     return 0 ;;
    esac
    return 1
}

___x_cmd_gd_relm___init(){

    local relm_file="$___X_CMD_GD_DATA/relm"
    if [ -f "$relm_file" ]; then
        ___x_cmd_gd_util___dict_inner load relm "$relm_file"
        return
    fi

    ___x_cmd_gd_relm___init_put x               "$___X_CMD_ROOT_CODE"
    ___x_cmd_gd_relm___init_put xr              "$HOME/.x-cmd.root"
    ___x_cmd_gd_relm___init_put xrg             "$HOME/.x-cmd.root/global"
    ___x_cmd_gd_relm___init_put xrl             "$HOME/.x-cmd.root/local"

    ___x_cmd_gd_relm___init_put gh              "gh://"
    ___x_cmd_gd_relm___init_put gt              "gt://"
    ___x_cmd_gd_relm___init_put gl              "gl://"
    ___x_cmd_gd_relm___init_put gcode           "gcode://"


    ___x_cmd_gd_relm___init_put xbash           "gh://x-bash"
    ___x_cmd_gd_relm___init_put xcmd            "gh://x-cmd"
    ___x_cmd_gd_relm___init_put xpkg            "gh://x-cmd-pkg"
    ___x_cmd_gd_relm___init_put xtheme          "gh://x-cmd-theme"

    # gd :xrl/cfg

    # module
    ___x_cmd_gd_relm___init_put gita            "${___X_CMD_GITA_CACHE:-"$___X_CMD_ROOT_SHARED/gita/DEFAULT/cache"}"
    ___x_cmd_gd_relm___init_put gitb            "${___X_CMD_GITB_CACHE:-"$___X_CMD_ROOT_SHARED/gitb/DEFAULT/cache"}"
    ___x_cmd_gd_relm___init_put gitc            "${___X_CMD_GITA_CACHE:-"$___X_CMD_ROOT_SHARED/gitc/DEFAULT/cache"}"

    [ -z "$TMPDIR" ] || ___x_cmd_gd_relm___init_put "tmp" "$TMPDIR"

    local x_; x os name_
    case "$x_" in
        linux)
            # TODO: ???
            ___x_cmd_gd_relm___init_put desk     "$HOME/Desktop"
            ___x_cmd_gd_relm___init_put doc      "$HOME/Documents"
            ___x_cmd_gd_relm___init_put down     "$HOME/Downloads"

            ___x_cmd_gd_relm___init_put snap      /snap/bin

            # This is for wsl
            ___x_cmd_gd_relm___init_put sys       /mnt/c/WINDOWS/system32
            ___x_cmd_gd_relm___init_put win       /mnt/c/WINDOWS
            # ___x_cmd_gd_relm___init_put system  /mnt/c/WINDOWS/System32/Wbem
            ___x_cmd_gd_relm___init_put pwsh      /mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/
            # ___x_cmd_gd_relm___init_put system  /mnt/c/WINDOWS/System32/OpenSSH/
            ___x_cmd_gd_relm___init_put prog      "/mnt/c/Program Files"
            # ___x_cmd_gd_relm___init_put system  /mnt/c/Users/el/AppData/Local/Microsoft/WindowsApps

            ;;

        darwin)
            ___x_cmd_gd_relm___init_put icloud   "$HOME/Library/Mobile Documents/com~apple~CloudDocs"
            ___x_cmd_gd_relm___init_put desk     "$HOME/Desktop"
            ___x_cmd_gd_relm___init_put doc      "$HOME/Documents"
            ___x_cmd_gd_relm___init_put down     "$HOME/Downloads"

            ___x_cmd_gd_relm___init_put trash    "$HOME/trash"
            ;;

        win)
            # consult gitbash

            ___x_cmd_gd_relm___init_put bing     "$HOME"             # TODO: bing cloud position
            ___x_cmd_gd_relm___init_put desk     "$HOME/Desktop"
            ___x_cmd_gd_relm___init_put doc      "$HOME/Documents"
            ___x_cmd_gd_relm___init_put down     "$HOME/Downloads"

            if ___x_cmd_gd___is_wsl; then
                local drive; for drive in /mnt/*; do
                    case "$drive" in
                        .)      ___x_cmd_gd_relm___init_put "$drive"   "/mnt/$drive"
                    esac
                    ___x_cmd_gd_relm___init_put   user      "/mnt/c/Users"
                    ___x_cmd_gd_relm___init_put   pf        "/mnt/c/Program\ Files"
                    ___x_cmd_gd_relm___init_put   pf86      "/mnt/c/Program\ Files\ (x86)"
                    ___x_cmd_gd_relm___init_put   trash     "/mnt/c/\$Recycle.Bin"
                done
            else
                    ___x_cmd_gd_relm___init_put   user      "/c/Users"
                    ___x_cmd_gd_relm___init_put   pf        "/c/Program\ Files"
                    ___x_cmd_gd_relm___init_put   pf86      "/c/Program\ Files\ (x86)"
                    ___x_cmd_gd_relm___init_put   trash     "/c/\$Recycle.Bin"
            fi
            ;;
    esac
    ___x_cmd_gd_util___dict_inner load relm "$relm_file"
    # Just For Mac

    # ___x_cmd_gd_relm___set "nm"  ".../Downloads"          # node_modules
    # ___x_cmd_gd_relm___set "git"  ".git"                  # .git directory

    # :http ==> http://
    # :https => https://
    # :ftp => ftp://
    # :docker => docker://
    # :ali => ali://

    # :git => git://
    # :ssh => ssh://

}


# mac

# :tmp
# :icloud
# :app

# linux

# :tmp

# win

# :tmp
# :app
