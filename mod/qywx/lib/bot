# shellcheck shell=sh disable=SC2154,SC2120,SC3043,SC2034

# reference: https://developer.work.weixin.qq.com/document/path/91770#%E6%96%87%E6%9C%AC%E7%B1%BB%E5%9E%8B

# Section(inner): endpoint, send_json

___x_cmd_qywx_bot___send_json() {
    local req_json; req_json="$(cat)"
    qywx:debug "$(printf "%s" "$req_json" | x jo fmt)"
    local webhook ; webhook="$(___x_cmd_qywx_webhook)" || return 1

    local res ; res="$(___x_cmd_http post json "$webhook" "$req_json")"
    printf "%s" "$res"
}
# EndSection

___x_cmd_qywx_bot(){
    param:subcmd ___x_cmd_qywx_bot    \
        send   "send msg"             

    param:subcmd:try
    param:run
    qywx:error "Subcommand required"
    ___x_cmd_qywx help
}

___x_cmd_qywx_bot_send() {
    param:subcmd ___x_cmd_qywx_bot_send     \
        text             "send text"        \
        markdown         "send markdown"    \
        image            "send image"       \
        raw              "send raw json"    \
        news             "send news"        \
        file             "send file"           
        # textcard         "send textcard"        
        # newscard         "send newscard"

    param:subcmd:try
    param:run

    ___x_cmd_qywx_bot_send_text "$@"    

}
___x_cmd_qywx_bot_send_text() {
    param:scope     qywx
    param:dsl <<A
option:
    #1                           "Provide text"      <content>:text
    --mentioned_list             "A list of userids to alert specified members of the group"                                                <>:userid=""
    --mentioned_mobile_list      "List of mobile phone numbers, reminding group members corresponding to mobile phone numbers"              <>:phone_number=""
    --json|-j                    "output origin json data"
A
    param:run
    
    local text="$1"
    local res
    mentioned_list=$(___x_cmd_qywx_get___mobiles "${mentioned_list}")
    mentioned_mobile_list=$(___x_cmd_qywx_get___mobiles "${mentioned_mobile_list}")
    res="$(___x_cmd_qywx_bot___send_json <<A
{
    "msgtype": "text",
    "text": {
        "content": "$text",
        "mentioned_list":[ ${mentioned_list} ],
        "mentioned_mobile_list":[ ${mentioned_mobile_list} ]
    }
}
A
)" || return 1
    _____x_cmd_qywx_ui_utils Text
}

___x_cmd_qywx_bot_send_raw() {
    param:scope             qywx
    param:dsl <<A
option:
    #1            "Provide raw json(If #1 is '-', the json is read from stdin)"      <raw>:json
    --json|-j     "output origin json data"
A
    param:run

    local raw="${1}"; [ "$raw" != "-" ] || raw="$(cat)"
    local res ; res="$(___x_cmd_qywx_bot___send_json <<A
$raw
A
)" || return 1
    _____x_cmd_qywx_ui_utils Raw
}

___x_cmd_qywx_bot_send_markdown() {
    param:scope     qywx
    param:dsl <<A
option:
    #1              "Provide text"              <content>:text
    --json|-j       "output origin json data"
A
    param:run
    local text="$1"
    local res
    res="$(___x_cmd_qywx_bot___send_json <<A
{
    "msgtype": "markdown",
    "markdown": {
        "content": "$text"
    }
}
A
)" || return 1
    _____x_cmd_qywx_ui_utils Markdown
}

___x_cmd_qywx_bot_send_image() {
    param:scope     qywx
    param:dsl <<A
option:
    --image_path    "Provide imamg path"    <image_path>:image_path
    --json|-j       "output origin json data"
A
    param:run
    local res
    md5=$(x md5 "$image_path")
    base64=$(base64 "$image_path")
    res="$(___x_cmd_qywx_bot___send_json <<A
{
    "msgtype": "image",
    "image": {
        "base64": "$base64",
		"md5": "$md5"
    }
}
A
)" || return 1
    _____x_cmd_qywx_ui_utils  Image
}

___x_cmd_qywx_bot_send_news() {
    param:scope     qywx
    param:dsl <<A
option:
    --articles|m        "Provide multiple action tag in following format [ <title> <description> <url> <picurl> ] " 
        <title>:text
        <description>:text
        <url>:url
        <picurl>:url
    --json|-j           "output origin json data"
A
    param:run
    local IFS="
"
    local title; local description ; local url ; local picurl ; local all
    local res
    for i in $(param_marg articles); do
        title=$(param_marg_get articles "$i" 1)
        description=$(param_marg_get articles "$i" 2)
        url=$(param_marg_get articles "$i" 3)
        picurl=$(param_marg_get articles "$i" 4)
        all="$all$(x jo dict "title:$title" "description:$description" "url:$url" "picurl:$picurl")"
    done
    res="$(___x_cmd_qywx_bot___send_json <<A
{
    "msgtype": "news",
    "news": {
        "articles" : [          
               $(printf "%s" "$all" | x jo)
        ]
    }
}
A
)" || return 1
    _____x_cmd_qywx_ui_utils  News
}


___x_cmd_qywx_bot_send_file() {
    param:scope     qywx
    param:dsl <<A
option:
    --media_id      "Provide file id"           <media_id>:media_id
    --json|-j       "output origin json data"
A
    param:run
    local res
    res="$(___x_cmd_qywx_bot___send_json <<A
{
    "msgtype": "file",
    "file": {
 		"media_id": "$media_id"
    }
}
A
)"|| return 1
    _____x_cmd_qywx_ui_utils File
}


___x_cmd_qywx_bot_send_textcard() {
    : #TODO: https://developer.work.weixin.qq.com/document/path/91770#%E6%96%87%E6%9C%AC%E9%80%9A%E7%9F%A5%E6%A8%A1%E7%89%88%E5%8D%A1%E7%89%87
}


___x_cmd_qywx_bot_send_newscard() {
     : #TODO: https://developer.work.weixin.qq.com/document/path/91770#%E5%9B%BE%E6%96%87%E5%B1%95%E7%A4%BA%E6%A8%A1%E7%89%88%E5%8D%A1%E7%89%87
}

_____x_cmd_qywx_ui_utils(){
    if  [ -n "$json" ]; then
        printf "%s\n" "$res"
        return
    fi
    case "$1" in
        Text)
            msg="Sent text: $text  successfully"
            ;;
        Raw)
            msg="Sent message  successfully"
            ;;
        Markdown)
            msg="Sent markdown: $text  successfully"
            ;;
        Image)
            msg="Sent image: $image_path  successfully"
            ;;
        File)
            msg="Sent file: $media_id  successfully"
            ;;
        News)
            msg="Sent news: $title  successfully"
            ;;
    esac
    local statu ; statu="$(printf "%s" "$res" | {  x jo env .errmsg ; echo "$errmsg" ; })"
    if [ "$statu" = "ok" ]; then
        ___x_cmd_ui_tf true "$msg"
    else
        ___x_cmd_ui_tf false "Failed to send message:" "ErrorMsg:$res"
    fi
}