# shellcheck shell=dash disable=SC2016

x log init ip

xrc:mod:lib     ip  local   query  scan

___x_cmd_ip___main(){
    [ "$#" -gt 0 ] || {
        ___x_cmd_ip_ls
        return
    }

    local op="$1"; shift
    case "$op" in
        ls|echo|geolite|mac|query|scan)
                            "___x_cmd_ip_${op}" "$@"    ;;
        -h|--help)          M='ip' help:ret:0           ;;
        *)                  M='ip' help:ret:1           ;;
    esac
}

___x_cmd_ip_echo(){
    printf "%s\n" "$(x curl -s https://ipecho.net/plain)"
}

___x_cmd_ip_geolite(){
    x curl -s "https://ipinfo.io/$1" | x jo env . City=.city Region=.region Country=.country -- \
    'printf "%s\n%s\n" "IP LOCATION:" "  $City, $Region (${Country})"'
}

___x_cmd_ip_ls(){
    ___x_cmd_ip_local
    local x_=;
    x os name_
    case "$x_" in
        win)  printf "%-45s\t%s%s\n" "public ip" ": " "$(___x_cmd_ip_echo)"; return ;;
    esac
    printf "%10s\t%s\n" "public ip:" "$(___x_cmd_ip_echo)"
}

___x_cmd_ip_mac(){
    local address="${1:?Provide mac address}"
    if ___x_cmd_is_interactive; then
        ___x_cmd_ip_mac___cache | x jo
    else
        ___x_cmd_ip_mac___cache
    fi
}

___x_cmd_ip_mac___cache(){
    x ccmd -- x curl -s "https://api.maclookup.app/v2/macs/$address"
}
