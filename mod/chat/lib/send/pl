# shellcheck shell=dash

___x_cmd_chat_py(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    local user_message="$___X_CMD_CHAT_PROMPT_CODE
        IMPORTANT: ONLY PYTHON CODE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: create a file named 'test.txt' with the content 'hello world'
        with open('test.txt', 'w') as f:
            f.write('hello world')

        Example: use requests to get the content of a website
        import requests
        r = requests.get('https://www.google.com')
        print(r.text)

        prompt: $*
    "
    local msg; msg='{
        role: user,
        content: '$(___x_cmd_chat_jqu "$user_message")'
    }'
    ___x_cmd_chat_request "$___X_CMD_SHELL" "" "$msg"
}

___x_cmd_chat_pl(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    # shellcheck disable=SC2016
    local user_message="$___X_CMD_CHAT_PROMPT_CODE"'
        IMPORTANT: ONLY PERL CODE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: create a file named "test.txt" with the content "hello world"s
        open(my $fh, ">", "test.txt") or die "cannot open > test.txt: $!";
        print $fh "hello world";
        close $fh or die "cannot close > test.txt: $!";

        Example: use LWP::Simple to get the content of a website
        use LWP::Simple;
        my $content = get("https://www.google.com");
        print $content;

        prompt: '$*'
    '

    local msg; msg='{
        role: user,
        content: '$(___x_cmd_chat_jqu "$user_message")'
    }'
    ___x_cmd_chat_request awk "" "$msg"
}

___x_cmd_chat_java(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    # shellcheck disable=SC2016
    local user_message="$___X_CMD_CHAT_PROMPT_CODE"'
        IMPORTANT: ONLY JAVA CODE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: create a file named "test.txt" with the content "hello world"
        import java.io.*;
        public class test {
            public static void main(String[] args) {
                try {
                    FileWriter myWriter = new FileWriter("test.txt");
                    myWriter.write("hello world");
                    myWriter.close();
                } catch (IOException e) {
                    System.out.println("An error occurred.");
                    e.printStackTrace();
                }
            }
        }

        Example: use java.net.URL to get the content of a website
        import java.net.URL;
        import java.util.Scanner;
        public class test {
            public static void main(String[] args) throws Exception {
                URL url = new URL("https://www.google.com");
                Scanner s = new Scanner(url.openStream());
                while (s.hasNext()) {
                    System.out.println(s.nextLine());
                }
            }
        }

        prompt: '$*'
    '
    local msg; msg='{
        role: user,
        content: '$(___x_cmd_chat_jqu "$user_message")'
    }'
    ___x_cmd_chat_request awk "" "$msg"
}

___x_cmd_chat_r(){
    [ "$#" -gt 0 ] || set -- "$(cat)"
    local IFS=" "
    # shellcheck disable=SC2016
    local user_message="$___X_CMD_CHAT_PROMPT_CODE"'
        IMPORTANT: ONLY R CODE as output, return only plaintext.
        You MUST always follow them. No exceptions.

        Example: create a file named "test.txt" with the content "hello world"
        fileConn<-file("test.txt")
        writeLines("hello world", fileConn)
        close(fileConn)

        Example: use RCurl to get the content of a website
        library(RCurl)
        content <- getURL("https://www.google.com")
        print(content)

        prompt: '$*'
    '
    local msg; msg='{
        role: user,
        content: '$(___x_cmd_chat_jqu "$user_message")'
    }'
    ___x_cmd_chat_request awk "" "$msg"
}
