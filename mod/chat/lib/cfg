# shellcheck shell=dash

xrc cfgy
___x_cmd_chat_cfg(){
    [ "$#" -gt 0 ] || {
        ___x_cmd_chat_cfg_init
        return
    }

    local op="$1"; shift
    case "$op" in
        -h|--help)          ___x_cmd_chat_help --cfg ;;
        *)                  ___x_cmd_chat_cfg___invoke "$op" "$@" ;;
    esac
}

# Config setting the key.
# set the default prompt

___X_CMD_CHAT_CFG_VARLIST="apikey,proxy,maxtoken,history,host"

___x_cmd_chat_cfg_init(){
    local current_apikey=; local current_proxy=; local currnet_history=
    if [ -f "$(___x_cmd_chat_cur --get config)" ]; then
        current_apikey="$(___x_cmd_chat_cur --get apikey)"
        current_proxy="$(___x_cmd_chat_cur --get proxy)"
        currnet_history="$(___x_cmd_chat_cur --get history)"
    fi
    ___x_cmd_chat_cfg___invoke --init \
        apikey  "Set up the API key for chatgpt"                "$current_apikey"   '=~*' "^[A-Za-z0-9-]+$" -- \
        proxy   "Set up the network proxy for API requests"     "$current_proxy"    '=~'  "^([a-z0-9]+://)?[0-9.:]+$" -- \
        history "Set up the number of context history records"  "$currnet_history"  '=~' "^[0-9]+$"
}

___x_cmd_chat_cfg___invoke(){
    ___x_cmd_cfgy_obj                                               \
        --prefix            ___X_CMD_CHAT_CFG_DATA                  \
        --default-config    "${___X_CMD_ROOT_CFG}/chat/X.cfg.yml"   \
        --current-config    "${___X_CMD_CHAT_LOCAL_CONFIG}"         \
        --current-profile   "${___X_CMD_CHAT_LOCAL_PROFILE}"        \
        --varlist           "$___X_CMD_CHAT_CFG_VARLIST"            \
        "$@"
}

