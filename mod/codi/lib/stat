
___x_cmd_codi_stat_cal(){
    local type="$1"
    local fp="$2"
    local filesetvar="fs_$type"

#     echo "$filesetvar=\"\${${filesetvar}}$fp
# \""
    eval "$filesetvar=\"\${${filesetvar}}$fp
\""

    local filesetcountvar="fsc_$type"
    eval "$filesetcountvar=\"\$((${filesetcountvar}+1))\""

}

___X_CMD_CODI_FILELANG_LIST="awk
c
cpp
go
rust
java
jar
js
ts
python
perl
ruby
julia
r
yml
json
jso
toml
xml
html
markdown
graphml
text
sh
bash
zsh
fish
"

___x_cmd_codi_stat(){
    case "$#" in
        0)      folder=. ;;        # Notice: cannot replace . with $PWD just in case the current folder path is inside a hidden folder
        *)      folder=$1; shift ;;
    esac


    if [ "$#" -gt 0 ]; then
        ___x_cmd_codi_stat_main
    else
        ___x_cmd_codi_stat_main | ___x_cmd_codi_stat_merge "$@"
    fi
}

___x_cmd_codi_stat_main()(
    command find "$folder" -type f -not -path '*/.*' | ___x_cmd_codi_stat_pipe
)

# calculate function number, global variable number
# search function
# function relevant
# variable relevant

# Add combination

# TODO: Using awk to calcualte
# TODO: Using wc to calculate all of stat of the files
# TODO: Display the files of the type.
# TODO: Make it to yuhang's first level test.
___x_cmd_codi_stat_pipe()(
    local x_
    local fp; while read -r fp; do
        ___x_cmd_codi_filelang_ "$fp"
        ___x_cmd_codi_stat_cal "$x_" "$fp"
    done

    printf "%-12s\t%s\t%s\t%s\t%s\t%s\n" lang file line lavg word char
    local type; printf "%s\n" "$___X_CMD_CODI_FILELANG_LIST" | while read -r type; do
        eval filenum="\"\${fsc_$type:-0}\""
        [ "$filenum" -gt 0 ] || continue

        eval "$(
            eval printf "\"%s\n\"" "\"\$fs_$type\""  \
                | xargs cat \
                | command wc \
                | command awk '{ printf("line=%d;word=%d;char=%d\n", $1, $2, $3); }'
        )"
        printf "%-12s\t%d\t%d\t%d\t%d\t%d\n" "$type" "$filenum" "$line" "$((line/filenum))" "$word" "$char"
    done | sort -k 2 -n -r

)

# sh=sh,bash,zsh
___x_cmd_codi_stat_merge(){
    cat
}

