# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# gcode project member +el:admin -user-a +user-b
# shellcheck disable=SC2154,SC2086
# http://localhost:4000/13.7/ee/api/members.html
___x_cmd_gcode_project_member(){
    param:subcmd ___x_cmd_gcode_project_member          \
        "ls|l"          "List project member"           \
        "info|i"        "Show project member user info" \
        add             "Add project member"            \
        "edit|ed"       "Update project member"         \
        rm              "Remove member"
    param:subcmd:try
    param:run

    ___x_cmd_gcode_project_member _param_help_doc
    return 1
}

# Section: List
# http://localhost:4000/13.7/ee/api/members.html#list-all-members-of-a-group-or-project
___x_cmd_gcode_project_member_ls(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    --project           "<ownerPath>/<ProjectPath> (default ownerPath: current user)"       <>
    --query             "Search for specific users."                                        <>=""
    --skip_users        "Filter out users with the specified ID."                           <>:integer_array=""
    --show_seat_info    "Show seat information for users"

    --page              "page"                                                              <>:Per_page="1"
    --per_page          "per_page"                                                          <>:Numbers="30"
    --json|-j           "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project

    ___X_CMD_UI_STATIC=1 ___gcode_ui_mutual '___ui_table_json Id=.id Username=.username Name=.name State=.state Access_level=.access_level web_url=.web_url -- $@' \
        ___x_cmd_gcode_get_multi "/projects/$owner_project/members" query skip_users
}
# EndSection

# Section: Info
# http://localhost:4000/13.7/ee/api/members.html#get-a-member-of-a-group-or-project
___x_cmd_gcode_project_member_info(){
    param:scope     ___x_cmd_gcode
    param:dsl      '
options:
    #1              "The user ID of the member"                                     <>:mumber
    --project       "<ownerPath>/<ProjectPath> (default ownerPath: current user)"   <>
    --json|-j       "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl get "/projects/$owner_project/members/$1" | _____x_cmd_gcode_project_member_ui_utils Info
}
# EndSection

# Section: Add
# http://localhost:4000/13.7/ee/api/members.html#add-a-member-to-a-group-or-project
___x_cmd_gcode_project_member_add(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1                  "The user ID of the new member ID"                                          <>
    --project           "<ownerPath>/<ProjectPath> (default ownerPath: current user)"               <>
    --access_level      "A valid access level"                                                      <>:Number = 10 20 30 40 50 guest reporter developer maintainer owner
    --expires_at        "A date string in the format YEAR-MONTH-DAY"                                <>=""
    --invite_source     "The source of the invitation that starts the member creation process."     <>=""
    --tasks_to_be_done  "Tasks the inviter wants the member to focus on."                           <>=""
    --tasks_project_id  "The project ID in which to create the task issues."                        <>=""
    --json|-j           "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    local user_id="${___X_CMD_TX}"

    _____x_cmd_gcode_member_util

    local gen_gcode_json
    gen_gcode_json="$(param:option2json -project +user_id)"
    gcode:debug "$gen_gcode_json"

    for user_id in "$@"; do
        gcode:debug "___x_cmd_gcode_repo_add_data:$(x tmpl "$gen_gcode_json"  "${user_id}")"
        x tmpl "$gen_gcode_json"  "${user_id}" | \
        ___x_cmd_gcode_curl post "/projects/$owner_project/members" "@-" | _____x_cmd_gcode_project_member_ui_utils Creating
    done
}
# EndSection

# Section: Edit
# http://localhost:4000/13.7/ee/api/members.html#edit-a-member-of-a-group-or-project
___x_cmd_gcode_project_member_edit(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1                  "The user ID of the member"                                         <>
    --project           "<ownerPath>/<ProjectPath> (default ownerPath: current user)"       <>
    --access_level      "A valid access level"                                              <>:Number = 10 20 30 40 50 guest reporter developer maintainer owner
    --expires_at        "A date string in the format YEAR-MONTH-DAY"                        <>=""
    --json|-j           "output json data"
'
    param:run

    _____x_cmd_gcode_member_util

    local gen_gcode_json
    gen_gcode_json="$(param:option2json -project)"
    gcode:debug "$gen_gcode_json"
    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl put "/projects/${owner_project}/members/${1}" "gen_gcode_json" | _____x_cmd_gcode_project_member_ui_utils Update
}
# EndSection

# Section: Remove
# http://localhost:4000/13.7/ee/api/members.html#remove-a-member-from-a-group-or-project
___x_cmd_gcode_project_member_rm(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1                      "The user ID of the member"                                         <>
    --project               "<ownerPath>/<ProjectPath> (default ownerPath: current user)"       <>
    --skip_subresources     ""
    --unassign_issuables    ""
    --yes|-y                "Ignore remove prompt interception"

'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    local username
    for username in "$@"; do
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure you want to remove member : $(___x_cmd_ui bold red "$username") ?" || continue
        ___x_cmd_gcode_curl delete "/projects/$owner_project/members/$username" | (
            x jo env . gcode_resp_err=.message
            if  ___x_cmd_gcode_http_error; then
                ___x_cmd_ui_tf true "Remove $username of $project successfully."
            else
                ___x_cmd_ui_tf false "Remove $username of $project failure"
                ___x_cmd_gcode____handle_resp
                return 1
            fi
        )
    done
}
# EndSection

# Section: project member utils
_____x_cmd_gcode_project_member_ui_utils(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gcode_http_error
        return
    fi
    (
        case "$1" in
            Info)
                _data="username=.username name=.name url=.web_url state=.state access_level=.access_level"
                _msg="Get project member information successfully."
                _error_msg="Failed to get project member information."
                ;;
            Update)
                _data="username=.username name=.name url=.web_url state=.state access_level=.access_level"
                _msg="Update project member information successfully."
                _error_msg="Failed to update project member information."
                ;;
            Creating)
                _data="username=.username name=.name url=.web_url state=.state access_level=.access_level"
                _msg="Add user to $project project successfully."
                _error_msg="Failed to add user to $project project."
                ;;
        esac
        eval x jo env . _id=.id gcode_resp_err=.error gcode_resp_err=.message "$_data"
        if [ -n "$_id" ]; then
            ___x_cmd_ui_tf true "$_msg" "User_ID: $_id" ${name:+"Name: $name"} ${username:+"Username: $username"} \
                ${state:+"State: $state"} ${access_level:+"Access_level: $access_level"} ${url:+"Url: $url"}
        else
            ___x_cmd_ui_tf false "$_error_msg"
            ___x_cmd_gcode____handle_resp
            return 1
        fi
    )
}
# EndSection