

___x_cmd_gitb_add(){
    ___x_cmd_gitb___cat_or_list "$@" | ___x_cmd_gitb___add_multi
}

___x_cmd_gitb___cat_or_list(){
    if [ "$#" -eq 0 ]; then
        cat
    elif [ "$1" = - ]; then
        cat
    else
        # TODO: make it into ___x_cmd_argslines
        local IFS="$___X_CMD_UNSEENCHAR_NEWLINE"
        printf "%s\n" "$*"
    fi
}

___x_cmd_gitb___add_multi(){
    local repo

    {
        x job failfast init "$___X_CMD_GIT_CONCURRENCY"
        while read -r repo; do
            x job failfast put ___x_cmd_gitb___add_one "$repo"
        done
    } | (
        x job failfast fini
    )
}

___x_cmd_gitb___add_one(){
    local target="${1:?Provide name}"

    case "$target" in
        *.git)  ;;
        *)      target="${target}.git"
    esac

    local ___X_CMD_GITB_BARE_PARSE_HOST
    local ___X_CMD_GITB_BARE_PARSE_PATH
    ___x_cmd_gitb_parse_ "$target" || {
        gitb:error "gitb___add_one: Abort for fail to parse: $target"
        return 1
    }

    local p="${___X_CMD_GITB_BAREC}/${___X_CMD_GITB_BARE_PARSE_HOST}/${___X_CMD_GITB_BARE_PARSE_PATH}"
    x ensurefp "$p"

    [ -d "$p" ] || command git clone --bare "$target" "$p"
}
