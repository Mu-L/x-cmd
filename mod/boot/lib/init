# shellcheck shell=dash

x:info "Running x boot init"

(
    x mkdirp "$___X_CMD_ROOT"
    # TODO: x boot set_newer_version
    x boot alterdefault "$___X_CMD_VERSION" "$___X_CMD_ROOT"

    x websrc autoset

    ___x_cmd_boot_init_rcfile(){
        local rcfile="$1"
        local X_STR="[ ! -f \"\$HOME/.x-cmd.root/X\" ] || . \"\$HOME/.x-cmd.root/X\" # boot up x-cmd."
        if command grep -F "$X_STR" "$rcfile" >/dev/null 2>&1; then
            x:info "Already installed in $rcfile"
        else
            printf "\n%s\n" "$X_STR" >> "$rcfile"
            x:info "Successfully Installed in $rcfile"
        fi
    }

    ___x_cmd_boot_init_rcfile "$HOME/.shinit"

    # The bash login mode will not source the .bashrc file but the .bash_profile file.
    # Ref: https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html
    if [ -n "$BASH_VERSION" ] || [ -f "$HOME/.bashrc" ] || [ -f "$HOME/.bash_profile" ] || ___x_cmd_hascmd bash; then
        ___x_cmd_boot_init_rcfile "$HOME/.bashrc"
        ___x_cmd_boot_init_rcfile "$HOME/.bash_profile"
    fi

    if [ -n "$ZSH_VERSION" ] || [ -f "$HOME/.zshrc" ] || ___x_cmd_hascmd zsh; then
        ___x_cmd_boot_init_rcfile "$HOME/.zshrc"
    fi

    if [ -n "$KSH_VERSION" ] || [ -f "$HOME/.kshrc" ] || ___x_cmd_hascmd ksh; then
        ___x_cmd_boot_init_rcfile "$HOME/.kshrc"
    fi

    if ___x_cmd_hascmd tcsh; then
        if ___x_cmd_is_interactive && ___x_cmd ui yesno "SETUP x-cmd in tcsh?"; then
            ___x_cmd tcsh --setup
        else
            x:info --cmd 'x tcsh --setup' "You can run the following command to SETUP x-cmd in tcsh."
        fi
    fi

    if ___x_cmd_hascmd fish; then
        if ___x_cmd_is_interactive && ___x_cmd ui yesno "SETUP x-cmd in fish?"; then
            ___x_cmd fish --setup
        else
            x:info --cmd 'x fish --setup' "You can run the following command to SETUP x-cmd in fish."
        fi
    fi

    if ___x_cmd_hascmd xonsh; then
        if ___x_cmd_is_interactive && ___x_cmd ui yesno "SETUP x-cmd in xonsh?"; then
            ___x_cmd onsh --setup
        else
            x:info --cmd 'x onsh --setup' "You can run the following command to SETUP x-cmd in xonsh."
        fi
    fi

    if ___x_cmd_hascmd nu; then
        if ___x_cmd_is_interactive && ___x_cmd ui yesno "SETUP x-cmd in nushell?"; then
            ___x_cmd nu --setup
        else
            x:info --cmd 'x nu --setup' "You can run the following command to SETUP x-cmd in nushell."
        fi
    fi

    if ___x_cmd_hascmd elvish; then
        if ___x_cmd_is_interactive && ___x_cmd ui yesno "SETUP x-cmd in elvish?"; then
            ___x_cmd elv --setup
        else
            x:info --cmd 'x elv --setup' "You can run the following command to SETUP x-cmd in elvish."
        fi
    fi

    # TODO: Support csh, fish, powershell, etc.

    x:info "Updating the resource package => x pkg update"
    if ___x_cmd_is_interactive; then
        ! ___x_cmd ui yesno "Confirm update package ?" || ___x_cmd pkg update
    fi
)

x:info "Initialization SUCCESS";
