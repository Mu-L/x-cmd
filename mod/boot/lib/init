# shellcheck shell=dash

x:info "Running x boot init"

(
    x mkdirp "$___X_CMD_ROOT"
    # TODO: x boot set_newer_version
    x boot alterdefault "$___X_CMD_VERSION" "$___X_CMD_ROOT"

    x websrc autoset

    ___x_cmd_boot_init_rcfile(){
        local rcfile="$1"
        local X_STR="[ ! -f \"\$HOME/.x-cmd.root/X\" ] || . \"\$HOME/.x-cmd.root/X\" # boot up x-cmd."
        if command grep -F "$X_STR" "$rcfile" >/dev/null 2>&1; then
            x:info "Already installed in $rcfile"
        else
            printf "\n%s\n" "$X_STR" >> "$rcfile"
            x:info "Successfully Installed in $rcfile"
        fi
    }

    ___x_cmd_boot_initrootbin

    ___x_cmd_boot_init_rcfile "$HOME/.shinit"

    # The bash login mode will not source the .bashrc file but the .bash_profile file.
    # Ref: https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html
    if [ -n "$BASH_VERSION" ] || [ -f "$HOME/.bashrc" ] || [ -f "$HOME/.bash_profile" ] || ___x_cmd_hascmd bash; then
        ___x_cmd_boot_init_rcfile "$HOME/.bashrc"
        ___x_cmd_boot_init_rcfile "$HOME/.bash_profile"
    fi

    if [ -n "$ZSH_VERSION" ] || [ -f "$HOME/.zshrc" ] || ___x_cmd_hascmd zsh; then
        ___x_cmd_boot_init_rcfile "$HOME/.zshrc"
    fi

    # We don't support ksh now ...
    # if [ -n "$KSH_VERSION" ] || [ -f "$HOME/.kshrc" ] || ___x_cmd_hascmd ksh; then
    #     ___x_cmd_boot_init_rcfile "$HOME/.kshrc"
    # fi

    ERROR_STR='Tip to setup x-cmd in'

    ! ___x_cmd_hascmd tcsh      ||
        x:info  --cmd '                  x tcsh --setup'    \
                --cmd '~/.x-cmd.root/bin/x tcsh --setup'    "$ERROR_STR tcsh"

    ! ___x_cmd_hascmd fish      ||
        x:info  --cmd '                  x fish --setup'    \
                --cmd '~/.x-cmd.root/bin/x fish --setup'    "$ERROR_STR fish"

    ! ___x_cmd_hascmd xonsh     ||
        x:info  --cmd '                  x onsh --setup'    \
                --cmd '~/.x-cmd.root/bin/x onsh --setup'    "$ERROR_STR xonsh"

    ! ___x_cmd_hascmd nu        ||
        x:info  --cmd '                  x nu   --setup'    \
                --cmd '~/.x-cmd.root/bin/x nu   --setup'    "$ERROR_STR nushell"

    ! ___x_cmd_hascmd elvish    ||
        x:info  --cmd '                  x elv  --setup'    \
                --cmd '~/.x-cmd.root/bin/x elv  --setup'    "$ERROR_STR elvish"

    # TODO: powershell, tclsh, etc.

    x:info  --cmd 'x pkg update' \
            --tips 'If it fails, or is interrupted, you can run it manually later.' \
            'Updating the resource package indexes ...'

    ___x_cmd pkg update

    # if ___x_cmd_is_interactive; then
    #     ! ___x_cmd ui yesno "Confirm update package ?" || ___x_cmd pkg update
    # fi
)

x:info "Initialization SUCCESS";
