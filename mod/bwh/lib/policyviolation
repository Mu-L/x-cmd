# shellcheck    shell=dash disable=SC2154,SC2034

___x_cmd_bwh_policyviolation(){
    [ $# -gt 0 ] || {
        ___x_cmd_bwh_policyviolation_get
        return
    }

    local op="$1";  shift
    case "$op" in
        resolve)        ___x_cmd_bwh_policyviolation_resolve "$@"   ;;
        ls)             ___x_cmd_bwh_policyviolation_ls             ;;

        -h|--help)      ___x_cmd_bwh_help policyviolation; return 1 ;;
        *)              N=bwh M="Unknown command for ___x_cmd_bwh_policyviolation ==> $1" log:ret:64
    esac
}

# Section: policyviolation resolve
___x_cmd_bwh_policyviolation_resolve(){
    local X_help_cmd='x help -m bwh policyviolation resolve';   help:arg:parse
    [ $# -eq 1 ]    ||  N=bwh M="Require argument as record id. You can find it using command 'x bwh policyviolation get'" log:ret:64
    local error=; local message=
    local data; data="$( ___x_cmd_bwh_policyviolation_resolve___raw "$1" )"
    ___x_cmd_pipevar data     x jo env . .error .message

    bwh:arg:judge:display:content:bat
}

___x_cmd_bwh_policyviolation_resolve___raw(){
    ___x_cmd_bwh_api    resolvePolicyViolation record_id="$1"
}

# EndSection

# Section: policyviolation ls
___x_cmd_bwh_policyviolation_ls(){
    local X_help_cmd='x help -m bwh policyviolation ls';   help:arg:parse
    local error=; local message=
    local data; data="$( ___x_cmd_bwh_policyviolation_ls___raw )"
    ___x_cmd_pipevar data     x jo env . .error .message

    bwh:arg:judge:display:content:yml
}

___x_cmd_bwh_policyviolation_ls___raw(){
    ___x_cmd_bwh_api    getPolicyViolations
}
# EndSection

