# shellcheck    shell=dash
___x_cmd_bwh_snapshot(){
    case "$1" in
        create|list|\
        delete|restore|\
        sticky|\
        export|import)
            local op="$1"; shift
            "___x_cmd_bwh_snapshot_${op}" "$@"
            ;;

        sticky-disable)
            shift
            "___x_cmd_bwh_snapshot_sticky_disable" "$@"
            ;;
        *)
            N=bwh M="Unknown command for ___x_cmd_bwh_snapshot ==> $1" log:ret:64
    esac
}

___x_cmd_bwh_snapshot_create(){
    ___x_cmd_bwh_api snapshot/create ${1:+description="$1"}
}

___x_cmd_bwh_snapshot_list(){
    ___x_cmd_bwh_api snapshot/list
}

___x_cmd_bwh_snapshot_delete(){
    [ $# -eq 1 ] || N=bwh M="Require argument as snapshot fileName" log:ret:64
    ___x_cmd_bwh_api snapshot/delete snapshot="$1"
}

___x_cmd_bwh_snapshot_restore(){
    [ $# -eq 1 ] || N=bwh M="Require argument as snapshot fileName" log:ret:64
    ___x_cmd_bwh_api snapshot/restore snapshot="$1"
}

___x_cmd_bwh_snapshot_sticky(){
    [ $# -eq 1 ] || N=bwh M="Require argument as snapshot fileName" log:ret:64
    ___x_cmd_bwh_api snapshot/toggleSticky snapshot="$1" sticky=1   # Make it sticky by default
}

___x_cmd_bwh_snapshot_sticky_disable(){
    [ $# -eq 1 ] || N=bwh M="Require argument as snapshot fileName" log:ret:64
    ___x_cmd_bwh_api snapshot/toggleSticky snapshot="$1" sticky=0   # Make it sticky by default
}


___x_cmd_bwh_snapshot_export(){
    [ $# -eq 1 ] || N=bwh M="Require argument as snapshot fileName" log:ret:64
    ___x_cmd_bwh_api snapshot/export snapshot="$1"
    # TODO: show import code x bwh snapshot import "$veid" "$token"
}

___x_cmd_bwh_snapshot_import(){
    [ "$#" -eq 2 ] || \
        N=bwh M="Require two argument <source-veid> <source-token>" log:ret:64
    ___x_cmd_bwh_api snapshot/import sourceVeid="$1" sourceToken="$2"
}
