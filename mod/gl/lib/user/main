# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# define lazy loader
# ___x_cmd_definelazyloader   ___x_cmd_gl_repo_ls             gl/lib/repo/main

___x_cmd_gl_user(){
    param:scope     ___x_cmd_gl
    param:subcmd ___x_cmd_gl_user               \
        info        "Show information"          \
        email       "get current user email"    \
        issue       "List all issues"           \
        search      "search a user"
    param:subcmd:try
    param:run

    ___x_cmd_gl_user _param_help_doc

    return 1
}

# Section: info repo email issue
# shellcheck disable=SC2154
___x_cmd_gl_user_info(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    #1              "User ID, if not set, show the user information of current owner, or owner of this token"

    --json|-j       "output json data"
'
    param:run

    local owner="$1"
    local url
    if [ -z "$owner" ]; then
        url="/user"
    else
        url="/users/$1"
    fi
    ___x_cmd_gl_curl get "$url" | (
        ___x_cmd_gl_user_info_json_status_handler
    )
}

___x_cmd_gl_user_info_json_status_handler(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        return
    fi

    x jo env . name=.username email=.email web_url=.web_url state=.state error=.
    if [ -n "$name" ]; then
        ___x_cmd_ui_tf true "get user info success" "Name: $name" "Email: $email" "Url: $web_url" "State: $state"
    else
        ___x_cmd_ui_tf false "get user info fail" "ErrorMsg:$error"
        return 1
    fi
}


___x_cmd_gl_user_search(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    #1              "Username"      <>:string
    --json|-j       "output json data"
'
    param:run

    local username="$1"
    ___X_CMD_UI_STATIC=1 ___gl_ui_mutual '___ui_table_json Id=.id UserName=.username Url=.web_url State=.state -- $@' \
        ___x_cmd_gl_curl get "/users" username
}

___x_cmd_gl_user_email(){
    param:dsl       '
options:
    --json|-j       "output json data"
'
    param:run
    ___X_CMD_UI_STATIC=1 ___gl_ui_mutual "___ui_table_json Id=.id Email=.email Confirmed_at=.confirmed_at" \
        ___x_cmd_gl_curl get "/user/emails"

}

# Section: list user issue
___x_cmd_gl_user_issue(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    --assignee_id           "Return issues assigned to the given user id."                                                                                                                              <>:Number=""
    --assignee_username     "Return issues assigned to the given username."                                                                                                                             <>:array=""
    --author_id             "Return issues created by the given user id."                                                                                                                               <>:Number=""
    --author_username       "Return issues created by the given username."                                                                                                                              <>=""
    --confidential          "Filter confidential or public issues."
    --created_after         "Return issues created on or after the given time. Expected in ISO 8601 format"                                                                                             <>:datetime=""
    --created_before        "Return issues created on or before the given time."                                                                                                                        <>:datetime=""
    --due_date              "Return issues that have no due date,are overdue,or whose due date is this week,this month,or between two weeks ago and next month"                                         <>=""
    --epic_id               "Return issues associated with the given epic ID."                                                                                                                          <>:Number=""
    --iids                  "Return only the issues having the given iid"                                                                                                                               <>:array=""
    --in                    "Modify the scope of the search attribute. title, description, or a string joining them with comma. Default is title,description"                                           <>=""
    --issue_type            "Filter to a given type of issue. One of issue, incident, or test_case."                                                                                                    <>=""
    --iteration_id          "Return issues assigned to the given iteration ID."                                                                                                                         <>:Number=""
    --iteration_title       "Return issues assigned to the iteration with the given title."                                                                                                             <>=""
    --labels                "Comma-separated list of label names, issues must have all labels to be returned. "                                                                                         <>=""
    --milestone             "The milestone title. "                                                                                                                                                     <>=""
    --milestone_id          "Returns issues assigned to milestones with a given timebox value (None, Any, Upcoming, and Started). "                                                                     <>=""
    --my_reaction_emoji     "Return issues reacted by the authenticated user by the given emoji. "                                                                                                      <>=""
    --non_archived          "Return issues only from non-archived projects.If false,the response returns issues from both archived and non-archived projects.Default is true"
    --not                   "Return issues that do not match the parameters supplied. "                                                                                                                 <>:hash=""
    --order_by              "Return issues ordered by created_at,due_date,label_priority,milestone_due,popularity,priority,relative_position,title, updated_at,or weight fields.Default is created_at"  <>=""
    --scope                 "Return issues for the given scope:"                                                                                                                                        <>=""
    --sort                  "Return issues sorted in asc or desc order. Default is desc"                                                                                                                <>=""
    --search                "Search issues against their title and description"                                                                                                                         <>=""
    --state                 "Return all issues or just those that are opened or closed"                                                                                                                 <>=""
    --updated_after         "Return issues updated on or after the given time."                                                                                                                         <>:datetime=""
    --updated_before        "Return issues updated on or before the given time."                                                                                                                        <>:datetime=""
    --weight                "Return issues with the specified weight."                                                                                                                                  <>:Number=""
    --with_labels_details   "If true, the response returns more details for each label in labels field: :name, :color, :description, :description_html,:text_color.Default is false."
    --json|-j               "output json data"
'
    param:run

    ___X_CMD_UI_STATIC=1 ___gl_ui_mutual '___ui_table_json Id=.id iid=.iid project_id=.project_id title=.title state=.state web_url=.web_url -- $@' \
        ___x_cmd_gl_get_multi "/issues" sort order_by search state
}

# EndSection