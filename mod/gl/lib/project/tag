# shellcheck shell=sh
# shellcheck disable=SC2039,3043,SC2034
___x_cmd_gl_project_tag(){
    param:subcmd ___x_cmd_gl_project_tag                 \
        "ls|l"          "List project tag"                  \
        "info|i"        "Show project tag info"             \
        "create|c"      "Create project tag"                \
        rm              "Remove tag"
    param:subcmd:try
    param:run

    ___x_cmd_gl_project_tag _param_help_doc
    return 1
}

# Section: List
# https://docs.gitlab.com/ee/api/tags.html#list-project-repository-tags
# shellcheck disable=SC2154
___x_cmd_gl_project_tag_ls(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    --project                    "The URL-encoded path of the project owned by the authenticated user"        <>
    --order_by                   "Return tags ordered by name or updated fields. Default is updated"          <>=""
    --sort                       "Return tags sorted in asc or desc order. Default is desc"                   <>=""
    --include_html_description   "Return list of tags matching the search criteria. "                         <>=""
    --json|-j                    "output json data"
'
    param:run

    ___x_cmd_gl_param_init_owner_project
    ___X_CMD_UI_STATIC=1 ___gl_ui_mutual '___ui_table_json name=.name commit=.commit.short_id protected=.protected message=.message -- $@' \
        ___x_cmd_gl_get_multi "/projects/${owner_project}/repository/tags" order_by sort
}
# EndSection

# Section: Info
# https://docs.gitlab.com/ee/api/tags.html#get-a-single-repository-tag
___x_cmd_gl_project_tag_info(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    #1          "The name of the tag"                                                       <>
    --project   "The URL-encoded path of the project owned by the authenticated user"       <>
    --json|-j   "output json data"
'
    param:run
    ___x_cmd_gl_param_init_owner_project
    ___x_cmd_gl_curl get "/projects/${owner_project}/repository/tags/${1}" | _____x_cmd_gl_project_tag_ui_utils Info
}
# EndSection

# Section: Create
# https://docs.gitlab.com/ee/api/tags.html#create-a-new-tag
___x_cmd_gl_project_tag_create(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    #1          "The name of a tag"                                                         <>
    --project   "The ID or URL-encoded path of the project owned by the authenticated user" <>
    --ref       "Create tag using commit SHA, another tag name, or branch name"             <>
    --message   "Creates annotated tag"                                                     <>=""
    --json|-j   "output json data"

'
    param:run

    ___x_cmd_gl_param_init_owner_project
    local tag_name="$1"
    local gen_gl_json
    gen_gl_json="$(param:option2json -project +tag_name)"
    gl:debug "$gen_gl_json"
    ___x_cmd_gl_curl post "/projects/$owner_project/repository/tags" gen_gl_json | _____x_cmd_gl_project_tag_ui_utils Create
}
# EndSection

# Section: Remove
# https://docs.gitlab.com/ee/api/tags.html#delete-a-tag
# shellcheck disable=2154
___x_cmd_gl_project_tag_rm(){
    param:scope     ___x_cmd_gl
    param:dsl       '
options:
    #1          "The name of a tag name"                                                    <>
    --project   "The ID or URL-encoded path of the project owned by the authenticated user" <>
    --yes|-y    "Ignore remove prompt interception"
'
    param:run

    if [ $# -eq 0 ];then
        gl:error "At least one user's spatial address is needed"
        return 1
    fi

    ___x_cmd_gl_param_init_owner_project
    local tag_name
    for tag_name in "$@"; do
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure you want to delete member : $(___x_cmd_ui bold red "$tag_name") ?" || continue
        ___x_cmd_gl_curl delete "/projects/$owner_project/repository/tags/$tag_name" | (
            x jo env . gl_resp_err=.message
            if  ___x_cmd_gl_http_error; then
                ___x_cmd_ui_tf true "Remove $tag_name successfully."
            else
                ___x_cmd_ui_tf false "Remove $tag_name failure"
                ___x_cmd_gl____handle_resp
                return 1
            fi
        )
    done
}
# EndSection

# Section: project tag utils
_____x_cmd_gl_project_tag_ui_utils(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gl_http_error
        return
    fi
    (
        case "$1" in
            Info)
                _data="commit=.commit.short_id author_name=.author_name release=.release protected=.protected message=.message"
                _msg="Get project tag information successfully"
                _error_msg="Failed to get project tag information"
                ;;
            Create)
                _data="commit=.commit.short_id author_name=.author_name release=.release protected=.protected message=.message"
                _msg="Get project tag information successfully"
                _error_msg="Failed to get project tag information"
                ;;
        esac
        eval x jo env . name=.name gl_resp_err=.message "$_data"
        if [ -n "$name" ]; then
            ___x_cmd_ui_tf true "$_msg" ${name:+"Name: $name"} ${commit:+"Commit: $commit"} ${author_name:+"Author_name: $author_name"} \
                ${release:+"Release: $release"} ${protected:+"Protected: $protected"} ${message:+"Message: $message"}
        else
            ___x_cmd_ui_tf false "$_error_msg"
            ___x_cmd_gl____handle_resp
            return 1
        fi
    )
}
# EndSection