# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# NOTE: Not support .id to setup current owner and repo
# 1. owner=.id=<id>: owner/repo need using twice API to get owner/repo in finally
# 2. repo=.id=<id>: The owner/repo used by the current api can be used with owner/repo encoding
#                   But if need to parse the owner from owner/repo, need to call the API one more time

___x_cmd_gl_current(){
    param:void
    local op=""
    for op in "$@"; do
        case "$op" in
            repo=.id=*|owner=.id=*|.id=*)    gl:error "No support '.id=<id>' to setup current $op value"; return 1  ;;
        esac
    done

    case "$1" in
        -h|--help)      _____x_cmd_gl_help current      ;;
        *)              ___x_cmd_gl_config current "$@" ;;
    esac
}

# NOTE: need unset json ENFORCE_JSON. the util func only using on subshell
# WARM: user id and same to repo id
___x_cmd_gl_owner_type_query() {
    local owner="$1";   arg:init gl;
    [ -n "$owner" ]  || M='Please privide 1 args owner name' arg:ret:64
    unset json ENFORCE_JSON

    local types=""
    case "${owner}" in
        */*)
            for types in "repo" "group"; do
                if  "___x_cmd_gl_${types}_info" "$owner" 1>/dev/null 2>&1; then
                    printf "%s" "$types"
                    return
                fi
            done
        ;;
        *)
            for types in "group" "user"; do
                if  "___x_cmd_gl_${types}_info" "$owner" 1>/dev/null 2>&1; then
                    printf "%s" "$types"
                    return
                fi
            done
        ;;
    esac
    return 1
}
