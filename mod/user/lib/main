# shellcheck shell=dash

xrc:mod:lib     user        add ls current passwd

___x_cmd_user___main(){
    [ "$#" -gt 0 ] || {
        ___x_cmd_user_current
        return
    }

    local op="$1"; shift
    case "$op" in
        add|ls|rm|current|passwd|isroot|id|in)
            ___x_cmd_user_"$op" "$@" ;;
        -h|--help)
            x help -m user ;;
    esac
}


___X_CMD_USER_ID=

___x_cmd_user_id_(){
    x_=
    [ -n "$___X_CMD_USER_ID" ] || {
        if [ -n "$UID" ]; then
            ___X_CMD_USER_ID="$UID"
        else
            ___X_CMD_USER_ID="$(___x_cmd_cmds id -u)" || N=user M="Unexpected error ==> [command=id -u] fail" log:ret:1
            [ -n "$___X_CMD_USER_ID" ] || return 1
        fi
    }
    x_="${___X_CMD_USER_ID}"
}

___x_cmd_user_id(){
    local x_
    ___x_cmd_user_id_ || return
    printf "%s\n" "$x_"
}

 # Optimization: UID GROUPS [ -w / ]
___x_cmd_user_isroot(){
    local x_
    ___x_cmd_user_id_ || return
    [ "$x_" -eq 0 ]
}

# TODO: in --one-of
___x_cmd_user_in(){
    local a; a=" $(id -Gn) " || {
        sudo:error "fail to judge current user is sudo user" --user "$USER" --cmd "id -Gn"
        return 2
    }

    [ $# -gt 0 ]    ||  M="expect more than 1 argument" N=user log:ret:64

    while [ $# -gt 0 ]; do
        # work only in linux. in macos, the sudo group name is admin. This can also be redefined.
        case " $a " in
            *" $1 "*)     continue      ;;
            *)            return 1      ;;
        esac
    done
}
