
# shellcheck shell=dash disable=SC2317
# 参考pick的设计
# 采用tui table的样例代码
# 后面我们会进行更多的定制，例如选择输出字段，排序，过滤等

# x ja json2csv a.json .a .b .c | x csv app
# x ja json2csv a.json .a .b .c | x csv header --add a b c | x csv app

# x sql select from | x csv app --header a,b,c
# x sql select from | x csv header --add a,b,c | x csv app
# x sql select from | x csv header --mod acde=abc b=c | x csv app

# x csv app --width "100,30,20" --header "AAA,BBB,CCC" cat ./.x-cmd/data.csv
___x_cmd_csv_app(){
    local ___X_CMD_CSV_APP_DATA="${___X_CMD_CSV_APP_DATA:-""}"
    local ___X_CMD_CSV_APP_WIDTH="${___X_CMD_CSV_APP_WIDTH:-""}"
    local ___X_CMD_CSV_APP_HEADER="${___X_CMD_CSV_APP_HEADER:-""}"
    local ___X_CMD_CSV_APP_RET_STYLE="${___X_CMD_CSV_APP_RET_STYLE:-""}"
    local ___X_CMD_CSV_APP_IS_HIDE_INDEX="${___X_CMD_CSV_APP_IS_HIDE_INDEX:-""}"
    local ___X_CMD_CSV_APP_SW_CLEAR_ON_EXIT=
    local op; while op="$1"; do
        case "$op" in
            --clear)        ___X_CMD_CSV_APP_SW_CLEAR_ON_EXIT=1; shift ;;
            --width)        ___X_CMD_CSV_APP_WIDTH="${2:?Provide csv column widths}"; shift 2 ;;
            --header)       ___X_CMD_CSV_APP_HEADER="${2:?Provide csv column names}"; shift 2 ;;
            --return)       ___X_CMD_CSV_APP_RET_STYLE="${2:?Provide the style to be selected and returned}"; shift 2 ;;
            --hide_index)   ___X_CMD_CSV_APP_IS_HIDE_INDEX=1; shift ;;
            -h|--help)      ___x_cmd_csv_help app; return 1 ;;
            *)              break
        esac
    done

    ___x_cmd_csv_app___run "$@"
}

___x_cmd_csv_app___run(){
    x tty stdin_

    if [ -z "$___X_CMD_CSV_APP_DATA" ]; then
        [ "$#" -ne 0 ] || set - cat
        ___X_CMD_CSV_APP_DATA="$("$@" 2>/dev/null)" || return
        [ -n "$___X_CMD_CSV_APP_DATA" ] || M="The CSV data is empty" N=csv log:ret:64
    fi

    local ___X_CMD_CSV_APP_RET_VAL=; local ___X_CMD_CSV_APP_TMP_EXITCODE=; local ___X_CMD_TUI_APP_IS_SMALL_SCREEN=
    ___x_cmd_tui_app_end(){ [ "$___X_CMD_CSV_APP_RET_STYLE" != "line" ] || [ -z "$___X_CMD_CSV_APP_DATA_CURROW" ] || printf "%s\n" "$___X_CMD_CSV_APP_DATA_CURROW"; }
    ___x_cmd_tui_app_processer(){ ___x_cmd_csv_tui_app_processer "$@"; }

    <"$___X_CMD_TTY_STDIN_" \
    ___X_CMD_CSV_APP_IS_HIDE_INDEX="$___X_CMD_CSV_APP_IS_HIDE_INDEX" \
    ___X_CMD_CSV_APP_WIDTH="$___X_CMD_CSV_APP_WIDTH" \
    ___X_CMD_CSV_APP_RET_STYLE="$___X_CMD_CSV_APP_RET_STYLE" \
    x tui bigapp \
        ${___X_CMD_CSV_APP_SW_CLEAR_ON_EXIT:+"--clear-on-exit"} \
        -f "$___X_CMD_ROOT_MOD/awk/lib/csv.awk"   \
        -f "$___X_CMD_ROOT_MOD/tui/lib/eg.comp/table.comp.awk" \
        -f "$___X_CMD_ROOT_MOD/csv/lib/awk/csv_util.awk" \
        -f "$___X_CMD_ROOT_MOD/csv/lib/awk/app.awk"
    ___X_CMD_CSV_APP_TMP_EXITCODE="$?"
    unset -f ___x_cmd_tui_app_end
    unset -f ___x_cmd_tui_app_processer
    [ -z "$___X_CMD_TUI_APP_IS_SMALL_SCREEN" ] || ___x_cmd_csv_tui___run_print | x csv static_tab
    return "$___X_CMD_CSV_APP_TMP_EXITCODE"
}

___x_cmd_csv_tui___run_print(){
    [ -n "$___X_CMD_CSV_APP_DATA" ] || return
    if [ -n "$___X_CMD_CSV_APP_HEADER" ]; then
        printf "%s\n" "$___X_CMD_CSV_APP_DATA" | x csv header "$___X_CMD_CSV_APP_HEADER"
    else
        printf "%s\n" "$___X_CMD_CSV_APP_DATA"
    fi
}

___x_cmd_csv_tui_app_processer(){
    case "$1" in
        data:request:*)
            printf "data:start:%s\n" "1"
            ___x_cmd_csv_tui___run_print
            ;;
    esac
}
