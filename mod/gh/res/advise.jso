{
"#useparam"
:
true
,
"#desc"
:
{
"cn"
:
"将命令x gh与github API集成，高效管理github。"
,
"en"
:
"Integrate commands with the github API to efficiently manage github."
}
,
"#tldr"
:
[
{
"x gh token <token>"
:
null
,
"cn"
:
"使用私人令牌进行验证"
,
"en"
:
"Authenticate with a private token"
}
,
{
"x gh repo ls"
:
null
}
]
,
"repo"
:
{
"#tldr"
:
[
{
"x gh repo <subcommand> -h"
:
null
,
"cn"
:
"显示help"
,
"en"
:
"show help"
}
,
{
"x gh repo <subcommand> <options>"
:
null
,
"cn"
:
"仓库管理"
,
"en"
:
"warehouse management"
}
,
{
"x gh repo collaborator <subcommand> <options>"
:
null
,
"cn"
:
"仓库成员管理"
,
"en"
:
"warehouse member management"
}
,
{
"x gh repo ls <user | organization login path>(Default is current user)"
:
null
,
"cn"
:
"例子"
,
"en"
:
"Example"
}
,
{
"x gh repo create <reponame>"
:
null
}
,
{
"x gh org repo create --org <organization name> <reponame>"
:
null
}
,
{
"x gh repo rm <owner/repo>"
:
null
}
,
{
"x gh repo collaborator add --repo <owner/repo(,)> --permission <pull|push|admin>  <#1 username>"
:
null
}
]
,
"collaborator"
:
{
"#tldr"
:
[
{
"x gh repo collaborator <subcommand> -h"
:
null
,
"cn"
:
"显示help"
,
"en"
:
"show help"
}
,
{
"x gh repo collaborator <subcommand> <options>"
:
null
,
"cn"
:
"仓库成员管理"
,
"en"
:
"warehouse member management"
}
,
{
"x gh repo collaborator ls --repo <owner/repo>"
:
null
,
"cn"
:
"例子"
,
"en"
:
"Example"
}
,
{
"x gh repo collaborator add --repo <owner/repo(,)> --permission <pull|push|admin>  <#1 username>"
:
null
}
,
{
"x gh repo collaborator rm --repo <owner/repo> <username>"
:
null
}
]
,
"#desc"
:
"manage collaborator"
,
"ls|l"
:
{
"#desc"
:
"list collaborator"
,
"--affiliation"
:
{
"#desc"
:
"Filter collaborators returned by their affiliation."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"outside"
,
"direct"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"add"
:
{
"#desc"
:
"add collaborator"
,
"--repo"
:
{
"#desc"
:
"Provide owner_name/repo_name list separated by commas."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"Username list separated by commas"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"^[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}((,|\/)[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}){0,}"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"edit collaborator permission"
,
"--repo"
:
{
"#desc"
:
"Provide owner_name/repo_name list separated by commas."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the collaborator."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"pull"
,
"triage"
,
"push"
,
"maintain"
,
"admin"
]
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"Username"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"^[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}((,|\/)[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}){0,}"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"rm"
:
{
"#desc"
:
"Remove collaborator"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Username list"
}
}
}
,
"#desc"
:
"repo command"
,
"ls|l"
:
{
"#desc"
:
"list repo of owner"
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
,
"#default"
:
"updated"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--type"
:
{
"#desc"
:
"type"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
,
"#default"
:
"all"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation.(query user repo available)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
,
"#default"
:
"owner"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#desc"
:
"create repo"
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
"public"
]
,
"#default"
:
"private"
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^.{0,}$)|(.{0})"
:
""
}
}
}
,
"--homepage"
:
{
"#desc"
:
"homepage"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignore_template"
:
{
"#desc"
:
"The desired language or platform to apply to the .gitignore."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Actionscript"
,
"Ada"
,
""
,
"Agda"
,
"Android"
,
"Anjuta"
,
"Ansible"
,
"AppEngine"
,
"AppceleratorTitanium"
,
"ArchLinuxPackages"
,
"Archives"
,
"Autotools"
,
"Backup"
,
"Bazaar"
,
"BricxCC"
,
"C++"
,
"CFWheels"
,
"CMake"
,
"CUDA"
,
"CVS"
,
"CakePHP"
,
"Calabash"
,
"ChefCookbook"
,
"Clojure"
,
"Cloud9"
,
"CodeIgniter"
,
"CodeKit"
,
"CommonLisp"
,
"Composer"
,
"Concrete5"
,
"Coq"
,
"CraftCMS"
,
"D"
,
"DM"
,
"Dart"
,
"DartEditor"
,
"Delphi"
,
"Diff"
,
"Dreamweaver"
,
"Dropbox"
,
"Drupal"
,
"EPiServer"
,
"Eagle"
,
"Eclipse"
,
"EiffelStudio"
,
"Elisp"
,
"Elixir"
,
"Elm"
,
"Emacs"
,
"Ensime"
,
"Erlang"
,
"Espresso"
,
"ExpressionEngine"
,
"ExtJs"
,
"Fancy"
,
"Finale"
,
"FlexBuilder"
,
"Flutter"
,
"ForceDotCom"
,
"Fortran"
,
"FuelPHP"
,
"GPG"
,
"GWT"
,
"Gcov"
,
"GitBook"
,
"Go"
,
"Godot"
,
"Gradle"
,
"Grails"
,
"Haskell"
,
"IGORPro"
,
"Idris"
,
"Images"
,
"JBoss"
,
"JDeveloper"
,
"JENKINS_HOME"
,
"JEnv"
,
"Java"
,
"Jekyll"
,
"JetBrains"
,
"Joomla"
,
"Julia"
,
"KDevelop4"
,
"Kate"
,
"KiCad"
,
"Kohana"
,
"Kotlin"
,
"LabVIEW"
,
"Laravel"
,
"Lazarus"
,
"Leiningen"
,
"LemonStand"
,
"LibreOffice"
,
"Lilypond"
,
"Linux"
,
"Lithium"
,
"Lua"
,
"LyX"
,
"MATLAB"
,
"Magento"
,
"Maven"
,
"Mercurial"
,
"Mercury"
,
"MetaProgrammingSystem"
,
"Metals"
,
"MicrosoftOffice"
,
"MiniProgram"
,
"ModelSim"
,
"Momentics"
,
"MonoDevelop"
,
"Nanoc"
,
"NetBeans"
,
"Nim"
,
"Ninja"
,
"Node"
,
"NotepadPP"
,
"OCaml"
,
"Objective-C"
,
"Octave"
,
"Opa"
,
"OpenCart"
,
"OracleForms"
,
"Otto"
,
"PSoCCreator"
,
"Packer"
,
"Patch"
,
"Perl"
,
"Phalcon"
,
"PlayFramework"
,
"Plone"
,
"Prestashop"
,
"Processing"
,
"PuTTY"
,
"PureScript"
,
"Python"
,
"Qt"
,
"R"
,
"ROS"
,
"Rails"
,
"Raku"
,
"Redcar"
,
"Redis"
,
"RhodesRhomobile"
,
"Ruby"
,
"Rust"
,
"SBT"
,
"SCons"
,
"SVN"
,
"Sass"
,
"Scala"
,
"Scheme"
,
"Scrivener"
,
"Sdcc"
,
"SeamGen"
,
"SketchUp"
,
"SlickEdit"
,
"Smalltalk"
,
"Stata"
,
"Stella"
,
"SublimeText"
,
"SugarCRM"
,
"Swift"
,
"Symfony"
,
"SymphonyCMS"
,
"SynopsysVCS"
,
"Tags"
,
"TeX"
,
"Terraform"
,
"TextMate"
,
"Textpattern"
,
"TortoiseGit"
,
"TurboGears2"
,
"Typo3"
,
"Umbraco"
,
"Unity"
,
"UnrealEngine"
,
"VVVV"
,
"Vagrant"
,
"Vim"
,
"VirtualEnv"
,
"Virtuoso"
,
"VisualStudio"
,
"VisualStudioCode"
,
"Waf"
,
"WebMethods"
,
"Windows"
,
"WordPress"
,
"Xcode"
,
"XilinxISE"
,
"Xojo"
,
"Yeoman"
,
"Yii"
,
"ZendFramework"
,
"Zephir"
,
"macOS"
]
}
}
,
"--license_template"
:
{
"#desc"
:
"The license keyword of the open source license for this repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"MulanPSL-2.0"
,
"0BSD"
,
"AFL-3.0"
,
"AGPL-3.0"
,
""
,
"Apache-2.0"
,
"Artistic-2.0"
,
"BSD-2-Clause"
,
"BSD-3-Clause"
,
"BSD-3-Clause-Clear"
,
"BSL-1.0"
,
"CC-BY-4.0"
,
"CC-BY-SA-4.0"
,
"CC0-1.0"
,
"ECL-2.0"
,
"EPL-1.0"
,
"EPL-2.0"
,
"EUPL-1.1"
,
"EUPL-1.2"
,
"GPL-2.0"
,
"GPL-3.0"
,
"ISC"
,
"LGPL-2.1"
,
"LGPL-3.0"
,
"LPPL-1.3c"
,
"MIT"
,
"MPL-2.0"
,
"MS-PL"
,
"MS-RL"
,
"MulanPSL-1.0"
,
"MulanPubL-1.0"
,
"MulanPubL-2.0"
,
"NCSA"
,
"OFL-1.1"
,
"OSL-3.0"
,
"PostgreSQL"
,
"UPL-1.0"
,
"Unlicense"
,
"WTFPL"
,
"Zlib"
]
}
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--auto_init"
:
{
"#desc"
:
"auto init README"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Whether to delete head branches when pull requests are merged"
}
,
"--has_downloads"
:
{
"#desc"
:
"Whether downloads are enabled."
}
,
"--is_template"
:
{
"#desc"
:
"can be used to generate new repositories"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"repo names"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update repo"
,
"--name"
:
{
"#desc"
:
"repo alias"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--access"
:
{
"#desc"
:
"private,public"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
""
,
"public"
]
}
}
,
"--default_branch"
:
{
"#desc"
:
"Updates the default branch for this repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--homepage"
:
{
"#desc"
:
"homepage"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--advanced_security"
:
{
"#desc"
:
"enable or disable GitHub Advanced Security for this repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--scanning"
:
{
"#desc"
:
"enable or disable secret scanning for this repository"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--scanning_push_protection"
:
{
"#desc"
:
"enable or disable secret scanning push protection for this repository"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"enable"
,
"disable"
,
""
]
}
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Whether to delete head branches when pull requests are merged"
}
,
"--allow_forking"
:
{
"#desc"
:
"allow private forks."
}
,
"--archived"
:
{
"#desc"
:
"Mark this repository as archived and read-only."
}
,
"--is_template"
:
{
"#desc"
:
"can be used to generate new repositories"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"info|i"
:
{
"#desc"
:
"Show detailed information of repo"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"rm"
:
{
"#desc"
:
"Remove repo"
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Provide repo list.(separated by spaces)"
}
}
,
"apply"
:
{
"#desc"
:
"manage repo by declare configure"
}
,
"branch"
:
{
"#desc"
:
"manage branch"
,
"ls|l"
:
{
"#desc"
:
"list repo branch"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--protected"
:
{
"#desc"
:
"returns only protected branches."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"get repo branch info"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
,
"#regex"
:
{
"[a-zA-z0-9_]+$"
:
""
}
}
}
,
"rename"
:
{
"#desc"
:
"rename the repo branch"
,
"--branch"
:
{
"#desc"
:
"branch name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--new_name"
:
{
"#desc"
:
"branch new name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"default"
:
{
"#desc"
:
"set default branch"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"protection"
:
{
"#desc"
:
"protection branch management"
,
"info|i"
:
{
"#desc"
:
"protection branch info"
,
"--repo"
:
{
"#desc"
:
"repo name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"ls|l"
:
{
"#desc"
:
"protection branch list"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"unset"
:
{
"#desc"
:
"remove branch protection"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"#1"
:
{
"#desc"
:
"branch name"
}
}
,
"set"
:
{
"#desc"
:
"set branch to protection branch"
,
"--repo"
:
{
"#desc"
:
"repo name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--strict"
:
{
"#desc"
:
"Require branches to be up to date before merging"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--admins"
:
{
"#desc"
:
"enforce required status checks for repository administrators"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
,
"null"
]
,
"#default"
:
"null"
}
}
,
"--history"
:
{
"#desc"
:
"Prevent merge commits from being pushed to matching branches."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--force_push"
:
{
"#desc"
:
"Permit force pushes for all users with push access."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--deletions"
:
{
"#desc"
:
"Allow users with push access to delete matching branches."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"branch name"
,
"#regex"
:
{
"[a-zA-z0-9_]+$"
:
""
}
}
}
}
}
,
"pr"
:
{
"#desc"
:
"manage pr"
,
"ls|l"
:
{
"#desc"
:
"list pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"merged"
,
"closed"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"popularity"
,
"long-running"
]
,
"#default"
:
"created"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"pull request info"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create|c"
:
{
"#desc"
:
"create pull request"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--maintainer_can_modify"
:
{
"#desc"
:
"Indicates whether maintainers can modify the pull request."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
]
,
"#default"
:
"true"
}
}
,
"--draft"
:
{
"#desc"
:
"Indicates whether the pull request is a draft"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue"
:
{
"#desc"
:
"association issue"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone_number"
:
{
"#desc"
:
"milestone number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"labels"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees_number"
:
{
"#desc"
:
"minimum number of reviewers"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--testers_number"
:
{
"#desc"
:
"minimum test number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#desc"
:
"merge pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method(squash,merge)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"squash"
,
"merge"
]
,
"#default"
:
"merge"
}
}
,
"--prune_source_branch"
:
{
"#desc"
:
"prune source branch"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"false"
}
}
,
"--title"
:
{
"#desc"
:
"title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
}
}
}
,
"hook"
:
{
"#desc"
:
"repo webhook manage"
,
"ls|l"
:
{
"#desc"
:
"list repo webhook"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"get webhook info"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create|c"
:
{
"#desc"
:
"create webhook"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--events"
:
{
"#desc"
:
"events the hook is triggered for.(array usage,interval)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"webhook name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--secret"
:
{
"#desc"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"set token"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update webhook"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--url"
:
{
"#desc"
:
"The URL to which the payloads will be delivered."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--events"
:
{
"#desc"
:
"Determines what events the hook is triggered for."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--name"
:
{
"#desc"
:
"webhook name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--secret"
:
{
"#desc"
:
"the secret will be used as the key to generate the HMAC hex digest"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--token"
:
{
"#desc"
:
"set token"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--digest"
:
{
"#desc"
:
"digest"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--insecure_ssl"
:
{
"#desc"
:
"Determines whether the SSL certificate of the host for url will be verified when delivering payloads."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--content_type"
:
{
"#desc"
:
"The media type used to serialize the payloads. "
}
,
"--active"
:
{
"#desc"
:
"Determines if notifications are sent when the webhook is triggered."
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"rm"
:
{
"#desc"
:
"Remove webhook"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The unique identifier of the hook."
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
}
,
"release"
:
{
"#desc"
:
"repo release manage"
,
"ls|l"
:
{
"#desc"
:
"list repo release"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--direction"
:
{
"#desc"
:
"direction(asc,desc)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"asc"
,
"desc"
]
,
"#default"
:
"asc"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#desc"
:
"create repo release"
,
"--name"
:
{
"#desc"
:
"Release name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--tag"
:
{
"#desc"
:
"Please provide tag name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--body"
:
{
"#desc"
:
"Release Description"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Default is main"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"main"
}
}
,
"--draft"
:
{
"#desc"
:
"create a draft release"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
]
,
"#default"
:
"false"
}
}
,
"--prerelease"
:
{
"#desc"
:
"Is release version"
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"rm"
:
{
"#desc"
:
"Remove repo release"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"latest"
:
{
"#desc"
:
"get latest release"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update release information"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--tag_name"
:
{
"#desc"
:
"The name of the tag."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--target_commitish"
:
{
"#desc"
:
"Is release version"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--name"
:
{
"#desc"
:
"The name of the release."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"Text describing the contents of the tag."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--draft"
:
{
"#desc"
:
"true makes the release a draft, and false publishes the release."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"false"
}
}
,
"--prerelease"
:
{
"#desc"
:
"true to identify the release as a prerelease, false to identify the release as a full release."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"false"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
,
"info|i"
:
{
"#desc"
:
"Show detailed information of repo"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json"
}
,
"#1"
:
{
"#desc"
:
"Release ID"
}
}
}
,
"team"
:
{
"#desc"
:
"List repository teams"
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
,
"#default"
:
"x-bash/gh"
}
}
,
"tag"
:
{
"#desc"
:
"list repo tags"
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
,
"#default"
:
"x-bash/gh"
}
}
}
,
"org"
:
{
"#tldr"
:
[
{
"x gh org <subcommand> -h"
:
null
,
"cn"
:
"github 组织信息及组织成员管理"
,
"en"
:
"github organization information and organization member management"
}
,
{
"x gh team <subcommand> -h"
:
null
,
"cn"
:
"github 组织团队管理"
,
"en"
:
"github organization team management"
}
,
{
"x gh org membership <subcommand> -h"
:
null
,
"cn"
:
"github 组织成员管理"
,
"en"
:
"github organization member management"
}
,
{
"x gh team ls --org <org name>"
:
null
,
"cn"
:
"例子"
,
"en"
:
"Example"
}
,
{
"x gt org membership ls --org <org name>"
:
null
}
,
{
"x gh org membership add --role <org role> --org <org name> <username>"
:
null
}
]
,
"#desc"
:
"manage org"
,
"info|i"
:
{
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#cand"
:
[
"/[-A-Za-z0-9_]+/"
]
}
}
,
"ls|l"
:
{
"#desc"
:
"get organizations list"
,
"--user"
:
{
"#desc"
:
"provide username.(Default:current username)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"repo"
:
{
"#desc"
:
"List all repos"
,
"ls|l"
:
{
"#desc"
:
"list repo"
,
"--type"
:
{
"#desc"
:
"type"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
,
"#default"
:
"all"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
,
"#default"
:
"updated"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"create|c"
:
{
"#desc"
:
"org repo create"
,
"--org"
:
{
"#desc"
:
"organization create repo"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"/[-A-Za-z0-9_/]+/"
]
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^.{0,160}$)|(.{0})"
:
""
}
}
}
,
"--homepage"
:
{
"#desc"
:
"A URL with more information about the repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([a-zA-Z0-9]+://)?[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[.][a-z]{2,6}(/[-A-Za-z0-9+&@#/%=~_|]*)?"
:
""
}
}
}
,
"--team_id"
:
{
"#desc"
:
"the id of the team that will be granted access to this repository"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--gitignore_template"
:
{
"#desc"
:
"Desired language or platform"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Actionscript"
,
"Ada"
,
""
,
"Agda"
,
"Android"
,
"Anjuta"
,
"Ansible"
,
"AppEngine"
,
"AppceleratorTitanium"
,
"ArchLinuxPackages"
,
"Archives"
,
"Autotools"
,
"Backup"
,
"Bazaar"
,
"BricxCC"
,
"C++"
,
"CFWheels"
,
"CMake"
,
"CUDA"
,
"CVS"
,
"CakePHP"
,
"Calabash"
,
"ChefCookbook"
,
"Clojure"
,
"Cloud9"
,
"CodeIgniter"
,
"CodeKit"
,
"CommonLisp"
,
"Composer"
,
"Concrete5"
,
"Coq"
,
"CraftCMS"
,
"D"
,
"DM"
,
"Dart"
,
"DartEditor"
,
"Delphi"
,
"Diff"
,
"Dreamweaver"
,
"Dropbox"
,
"Drupal"
,
"EPiServer"
,
"Eagle"
,
"Eclipse"
,
"EiffelStudio"
,
"Elisp"
,
"Elixir"
,
"Elm"
,
"Emacs"
,
"Ensime"
,
"Erlang"
,
"Espresso"
,
"ExpressionEngine"
,
"ExtJs"
,
"Fancy"
,
"Finale"
,
"FlexBuilder"
,
"Flutter"
,
"ForceDotCom"
,
"Fortran"
,
"FuelPHP"
,
"GPG"
,
"GWT"
,
"Gcov"
,
"GitBook"
,
"Go"
,
"Godot"
,
"Gradle"
,
"Grails"
,
"Haskell"
,
"IGORPro"
,
"Idris"
,
"Images"
,
"JBoss"
,
"JDeveloper"
,
"JENKINS_HOME"
,
"JEnv"
,
"Java"
,
"Jekyll"
,
"JetBrains"
,
"Joomla"
,
"Julia"
,
"KDevelop4"
,
"Kate"
,
"KiCad"
,
"Kohana"
,
"Kotlin"
,
"LabVIEW"
,
"Laravel"
,
"Lazarus"
,
"Leiningen"
,
"LemonStand"
,
"LibreOffice"
,
"Lilypond"
,
"Linux"
,
"Lithium"
,
"Lua"
,
"LyX"
,
"MATLAB"
,
"Magento"
,
"Maven"
,
"Mercurial"
,
"Mercury"
,
"MetaProgrammingSystem"
,
"Metals"
,
"MicrosoftOffice"
,
"MiniProgram"
,
"ModelSim"
,
"Momentics"
,
"MonoDevelop"
,
"Nanoc"
,
"NetBeans"
,
"Nim"
,
"Ninja"
,
"Node"
,
"NotepadPP"
,
"OCaml"
,
"Objective-C"
,
"Octave"
,
"Opa"
,
"OpenCart"
,
"OracleForms"
,
"Otto"
,
"PSoCCreator"
,
"Packer"
,
"Patch"
,
"Perl"
,
"Phalcon"
,
"PlayFramework"
,
"Plone"
,
"Prestashop"
,
"Processing"
,
"PuTTY"
,
"PureScript"
,
"Python"
,
"Qt"
,
"R"
,
"ROS"
,
"Rails"
,
"Raku"
,
"Redcar"
,
"Redis"
,
"RhodesRhomobile"
,
"Ruby"
,
"Rust"
,
"SBT"
,
"SCons"
,
"SVN"
,
"Sass"
,
"Scala"
,
"Scheme"
,
"Scrivener"
,
"Sdcc"
,
"SeamGen"
,
"SketchUp"
,
"SlickEdit"
,
"Smalltalk"
,
"Stata"
,
"Stella"
,
"SublimeText"
,
"SugarCRM"
,
"Swift"
,
"Symfony"
,
"SymphonyCMS"
,
"SynopsysVCS"
,
"Tags"
,
"TeX"
,
"Terraform"
,
"TextMate"
,
"Textpattern"
,
"TortoiseGit"
,
"TurboGears2"
,
"Typo3"
,
"Umbraco"
,
"Unity"
,
"UnrealEngine"
,
"VVVV"
,
"Vagrant"
,
"Vim"
,
"VirtualEnv"
,
"Virtuoso"
,
"VisualStudio"
,
"VisualStudioCode"
,
"Waf"
,
"WebMethods"
,
"Windows"
,
"WordPress"
,
"Xcode"
,
"XilinxISE"
,
"Xojo"
,
"Yeoman"
,
"Yii"
,
"ZendFramework"
,
"Zephir"
,
"macOS"
]
}
}
,
"--license_template"
:
{
"#desc"
:
"The license keyword of the open source license for this repository."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"MulanPSL-2.0"
,
"0BSD"
,
"AFL-3.0"
,
"AGPL-3.0"
,
""
,
"Apache-2.0"
,
"Artistic-2.0"
,
"BSD-2-Clause"
,
"BSD-3-Clause"
,
"BSD-3-Clause-Clear"
,
"BSL-1.0"
,
"CC-BY-4.0"
,
"CC-BY-SA-4.0"
,
"CC0-1.0"
,
"ECL-2.0"
,
"EPL-1.0"
,
"EPL-2.0"
,
"EUPL-1.1"
,
"EUPL-1.2"
,
"GPL-2.0"
,
"GPL-3.0"
,
"ISC"
,
"LGPL-2.1"
,
"LGPL-3.0"
,
"LPPL-1.3c"
,
"MIT"
,
"MPL-2.0"
,
"MS-PL"
,
"MS-RL"
,
"MulanPSL-1.0"
,
"MulanPubL-1.0"
,
"MulanPubL-2.0"
,
"NCSA"
,
"OFL-1.1"
,
"OSL-3.0"
,
"PostgreSQL"
,
"UPL-1.0"
,
"Unlicense"
,
"WTFPL"
,
"Zlib"
]
}
}
,
"--access"
:
{
"#desc"
:
"Can be public or private."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"private"
,
"public"
,
"internal"
]
,
"#default"
:
"private"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"--no_issues"
:
{
"#desc"
:
"Whether to disable issue"
}
,
"--no_projects"
:
{
"#desc"
:
"Whether to disable has_projects"
}
,
"--no_wiki"
:
{
"#desc"
:
"Whether to disable wiki"
}
,
"--auto_init"
:
{
"#desc"
:
"Disable auto init README"
}
,
"--is_template"
:
{
"#desc"
:
"make this repo available as a template,Default:false"
}
,
"--no_squash_merge"
:
{
"#desc"
:
"Whether to allow squash merges for pull requests."
}
,
"--no_merge_commit"
:
{
"#desc"
:
"Whether to allow merge commits for pull requests."
}
,
"--no_rebase_merge"
:
{
"#desc"
:
"Whether to allow rebase merges for pull requests."
}
,
"--allow_auto_merge"
:
{
"#desc"
:
"Whether to allow Auto-merge to be used on pull requests,Default:false"
}
,
"--delete_branch_on_merge"
:
{
"#desc"
:
"Either to allow automatically deleting head branches when pull requests are merged,Default:false"
}
,
"#n"
:
{
"#desc"
:
"repo names"
}
}
,
"app"
:
{
"#desc"
:
"Interactive UI show organization repo"
,
"--type"
:
{
"#desc"
:
"type"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"private"
,
"public"
]
,
"#default"
:
"all"
}
}
,
"--page"
:
{
"#desc"
:
"page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--per_page"
:
{
"#desc"
:
"per_page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"org space address"
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
}
,
"membership"
:
{
"#desc"
:
"membership management"
,
"ls|l"
:
{
"#desc"
:
"list membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filter members returned in the list."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"2fa_disabled"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--role"
:
{
"#desc"
:
"Filter members returned by their role."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"admin"
,
"member"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"get org membership user info"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username:space address"
}
}
,
"add"
:
{
"#desc"
:
"add org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"admin"
,
"member"
]
,
"#default"
:
"member"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#n"
:
{
"#desc"
:
"username"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update org membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--role"
:
{
"#desc"
:
"The role to give the user in the organization"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"admin"
,
"member"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"username"
,
"#regex"
:
{
"^[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}((,|\/)[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}){0,}"
:
""
}
}
}
,
"rm"
:
{
"#desc"
:
"Remove membership"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"username"
,
"#regex"
:
{
"^[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}((,|\/)[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}){0,}"
:
""
}
}
}
}
,
"apply"
:
{
"#desc"
:
"manage org by declare configure"
}
,
"app"
:
{
"#desc"
:
"Install github app list"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"/[-A-Za-z0-9_]+/"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
}
}
,
"user"
:
{
"#tldr"
:
[
{
"x gh user <subcommand> -h"
:
null
,
"cn"
:
"获取当前用户相关信息"
,
"en"
:
"github organization information and organization member management"
}
,
{
"x gh team ls --org <org name>"
:
null
,
"cn"
:
"例子"
,
"en"
:
"Example"
}
,
{
"x gt org membership ls --org <org name>"
:
null
}
,
{
"x gh org membership add --role <org role> --org <org name> <username>"
:
null
}
]
,
"#desc"
:
"user"
,
"info|i"
:
{
"#desc"
:
"Show information"
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Username, if not set, show the user information of current owner, or owner of this token"
}
}
,
"email"
:
{
"#desc"
:
"get user email"
}
,
"issue"
:
{
"#desc"
:
"List all issues"
,
"--filter"
:
{
"#desc"
:
"filter(assigned,created,all)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"assigned"
,
"created"
,
"mentioned"
]
,
"#default"
:
"assigned"
}
}
,
"--state"
:
{
"#desc"
:
"state(open,progerssing,closed,rejected)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"progerssing"
,
"closed"
,
"rejected"
]
,
"#default"
:
"open"
}
}
,
"--labels"
:
{
"#desc"
:
"labels"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--direction"
:
{
"#desc"
:
"direction(asc、desc)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--since"
:
{
"#desc"
:
"since"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"per_page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
,
"#default"
:
"30"
}
}
,
"--schedule"
:
{
"#desc"
:
"schedule"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--deadline"
:
{
"#desc"
:
"deadline"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]{4}(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--created_at"
:
{
"#desc"
:
"create date"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]{4}(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--finished_at"
:
{
"#desc"
:
"finish date"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]{4}(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
}
,
"repo"
:
{
"#desc"
:
"List all repos"
,
"ls|l"
:
{
"#desc"
:
"List all repos"
,
"--type"
:
{
"#desc"
:
"visibility"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"public"
,
"private"
]
,
"#default"
:
"all"
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
,
"#default"
:
"owner"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
,
"#default"
:
"updated"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
}
}
}
,
"app"
:
{
"#desc"
:
"Interactive UI show repo of user"
,
"--visibility"
:
{
"#desc"
:
"visibility"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"all"
,
"public"
,
"private"
]
,
"#default"
:
"all"
}
}
,
"--affiliation"
:
{
"#desc"
:
"affiliation"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"owner"
,
"collaborator"
,
"organization_member"
,
"admin"
]
,
"#default"
:
"owner"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"pushed"
,
"full_name"
]
,
"#default"
:
"created"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
}
}
}
,
"current"
:
{
"#tldr"
:
[
{
"x gh current <subcommand> -h"
:
null
,
"cn"
:
"获取|设置config"
,
"en"
:
"get|set config"
}
,
{
"x gh current type"
:
null
,
"cn"
:
"获取|设置用户type"
,
"en"
:
"get|set user type"
}
,
{
"x gh current type <org | user>"
:
null
}
]
,
"#desc"
:
"set current owner, repo"
,
"owner"
:
{
"#desc"
:
"get current owner"
}
,
"type"
:
{
"#desc"
:
"get current owner type"
}
}
,
"config"
:
{
"#desc"
:
"save, get, which"
,
"which"
:
{
"#desc"
:
"Show current config path"
}
,
"get"
:
{
"#desc"
:
"Print the value of a given configuration key"
,
"--host"
:
{
"#desc"
:
"host name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"github.com"
}
}
,
"#1"
:
{
"#desc"
:
"The name of the configuration to get"
,
"#cand"
:
[
"oauth_token"
,
"user"
,
"git_protocol"
]
}
}
,
"set"
:
{
"#desc"
:
"Update configuration with a value for the given key"
,
"--host"
:
{
"#desc"
:
"host name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"github.com"
}
}
,
"#1"
:
{
"#desc"
:
"Please provide configuration key"
,
"#cand"
:
[
"oauth_token"
,
"user"
,
"git_protocol"
]
}
,
"#2"
:
{
"#desc"
:
"Please provide configuration val"
}
}
}
,
"issue"
:
{
"#desc"
:
"issue manage"
,
"ls|l"
:
{
"#desc"
:
"List repo issue"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--state"
:
{
"#desc"
:
"Indicates the state of the issues to return."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"closed"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignee"
:
{
"#desc"
:
"User responsible for this issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--creator"
:
{
"#desc"
:
"The user that created the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--mentioned"
:
{
"#desc"
:
"A user that mentioned in the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sort"
:
{
"#desc"
:
"What to sort results by"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"comments"
]
,
"#default"
:
"updated"
}
}
,
"--direction"
:
{
"#desc"
:
"The direction to sort the results by."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"asc"
,
"desc"
]
,
"#default"
:
"desc"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"create|c"
:
{
"#desc"
:
"create an issue"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue.(separated by commas)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"null"
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update an issue"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"The title of the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"The contents of the issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"State of the issue"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"closed"
]
}
}
,
"--assignees"
:
{
"#desc"
:
"User responsible for this issue."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone"
:
{
"#desc"
:
"milestone number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"Labels to associate with this issue.(separated by commas)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"close"
:
{
"#desc"
:
"Close issue"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
,
"reopen"
:
{
"#desc"
:
"Reopen issue"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The number that identifies the issue."
}
}
}
,
"action"
:
{
"#desc"
:
"github action manage"
,
"workflows"
:
{
"#desc"
:
"Interacting with workflow files"
,
"ls|l"
:
{
"#desc"
:
"lists the workflows in a repository."
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"view"
:
{
"#desc"
:
"View the summary of a workflow"
,
"--repo"
:
{
"#desc"
:
"Provide repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--workflow_id"
:
{
"#desc"
:
"The ID of the workflow"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"branch_protection_rule"
,
"check_run"
,
"check_suite"
,
"create"
,
"delete"
,
"deployment"
,
"deployment_status"
,
"discussion"
,
"discussion_comment"
,
"fork"
,
"gollum"
,
"issue_comment"
,
"issues"
,
"label"
,
"merge_group"
,
"milestone"
,
"page_build"
,
"project"
,
"project_card"
,
"project_column"
,
"public"
,
"pull_request"
,
"pull_request_comment"
,
"pull_request_comment"
,
"pull_request_review_comment"
,
"push"
,
"registry_package"
,
"release"
,
"repository_dispatch"
,
"schedule"
,
"status"
,
"watch"
,
"workflow_call"
,
"workflow_dispatch"
,
"workflow_run"
]
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"Success"
,
"Failure"
]
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]{4}(\/|-)?(1[0-2]|0?[1-9])(\/|-)?(0?[1-9]|[1-2][0-9]|30|31)"
:
""
,
"(:?[01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
:
""
}
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
""
}
}
}
,
"job"
:
{
"#desc"
:
"Interacting with runs job"
,
"ls|l"
:
{
"#desc"
:
"List jobs for a workflow run"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--run_id"
:
{
"#desc"
:
"Provide run_id"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filters jobs by their completed_at timestamp"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"latest"
,
"all"
]
,
"#default"
:
"latest"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
,
"#default"
:
"30"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"Get a job for a workflow run"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--job_id"
:
{
"#desc"
:
"Provide job id"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"log"
:
{
"#desc"
:
"view job logs for a workflow run"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--job_id"
:
{
"#desc"
:
"Provide job id"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
}
}
,
"run"
:
{
"#desc"
:
"Interacting with workflow runs"
,
"ls|l"
:
{
"#desc"
:
"lists the workflows in a repository."
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--branch"
:
{
"#desc"
:
"Returns workflow runs associated with a branch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--actor"
:
{
"#desc"
:
"returns someone workflow runs."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[A-Za-z0-9]{1}[A-Za-z0-9_]+{1,37}[A-Za-z0-9]{1}"
:
""
}
}
}
,
"--event"
:
{
"#desc"
:
"Returns workflow run triggered by the event you specify."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--sta|--status"
:
{
"#desc"
:
"Returns workflow runs with the check run status."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--created"
:
{
"#desc"
:
"Returns workflow runs created within the given date-time range."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--check_suite_id"
:
{
"#desc"
:
"Returns workflow runs with the check_suite_id that you specify."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"30"
}
}
,
"--exclude_pull_requests"
:
{
"#desc"
:
""
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"view"
:
{
"#desc"
:
"View the summary of a workflow"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--run_id"
:
{
"#desc"
:
"Provide run_id"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--filter"
:
{
"#desc"
:
"Filters jobs by their completed_at timestamp"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"latest"
,
"all"
]
,
"#default"
:
"latest"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
,
"#default"
:
"1"
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
,
"#default"
:
"30"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"log"
:
{
"#desc"
:
"log"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--run_id"
:
{
"#desc"
:
"Provide run_id"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--logall"
:
{
"#desc"
:
""
}
}
,
"download"
:
{
"#desc"
:
"download"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page (max 100)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([0-9]|(([1-9][0-9]))|100)|(.{0})"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^[0-9]+$)|(.{0})"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
}
}
,
"team"
:
{
"#desc"
:
"team management"
,
"ls"
:
{
"#desc"
:
"list user or org team"
,
"--org"
:
{
"#desc"
:
"org space address(Get all teams of the current user by default)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info"
:
{
"#desc"
:
"Get team info by name"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team name"
}
}
,
"create"
:
{
"#desc"
:
"To create a team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--description"
:
{
"#desc"
:
"A short description of the team"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^.{0,160}$)|(.{0})"
:
""
}
}
}
,
"--maintainers"
:
{
"#desc"
:
"List GitHub IDs for organization members who will become team maintainers"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--repo_names"
:
{
"#desc"
:
"The full name of repositories to add the team to"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--privacy"
:
{
"#desc"
:
"The level of privacy this team should have"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--parent_team_id"
:
{
"#desc"
:
"The ID of a team to set as the parent team"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"team name"
}
}
,
"edit"
:
{
"#desc"
:
"To edit a team"
,
"--org"
:
{
"#desc"
:
"org space address"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--name"
:
{
"#desc"
:
"Changed team name(Empty does not change)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"The description of the team."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"(^.{0,160}$)|(.{0})"
:
""
}
}
}
,
"--privacy"
:
{
"#desc"
:
"The level of privacy this team should have"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"secret"
,
"closed"
,
"closed"
,
""
]
}
}
,
"--parent_team_id"
:
{
"#desc"
:
"The ID of a team to set as the parent team"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"old team name"
}
}
,
"repo"
:
{
"#desc"
:
"manage org team repo"
,
"ls"
:
{
"#desc"
:
"Lists a team's repositories visible to the authenticated user."
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"Output json data"
}
}
,
"check"
:
{
"#desc"
:
"Checks whether a team has permission for a repository."
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"add"
:
{
"#desc"
:
"Add repository to team"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the team on this repo"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"edit"
:
{
"#desc"
:
"Update the team's permissions to the repository"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--permission"
:
{
"#desc"
:
"The permission to grant the team on this repo"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"push"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"rm"
:
{
"#desc"
:
"rm org team repo"
,
"--org"
:
{
"#desc"
:
"The organization name"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--team"
:
{
"#desc"
:
"The slug of the team name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
}
,
"rm"
:
{
"#desc"
:
"To delete a team"
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--yes|-y"
:
{
"#desc"
:
"Ignore remove prompt interception"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team name."
}
}
,
"child"
:
{
"#desc"
:
"Lists the child teams of the team specified."
,
"--org"
:
{
"#desc"
:
"The organization name."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"([A-Za-z0-9_.-]+)(\/[A-Za-z0-9_.-])*"
:
""
}
}
}
,
"--per_page"
:
{
"#desc"
:
"Results per page"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"30"
}
}
,
"--page"
:
{
"#desc"
:
"Page number of the results to fetch."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[0-9]+"
:
""
}
,
"#default"
:
"1"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"The slug of the team name."
}
}
}
,
"token"
:
{
"#desc"
:
"set token"
,
"#1"
:
{
"#desc"
:
"provide personal token.(Output default token when empty)"
}
}
,
"pr"
:
{
"#desc"
:
"pull request management"
,
"ls|l"
:
{
"#desc"
:
"list pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"open"
,
"merged"
,
"closed"
,
"all"
]
,
"#default"
:
"all"
}
}
,
"--sort"
:
{
"#desc"
:
"sort"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"created"
,
"updated"
,
"popularity"
,
"long-running"
]
,
"#default"
:
"created"
}
}
,
"--direction"
:
{
"#desc"
:
"direction"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"desc"
,
"asc"
]
,
"#default"
:
"desc"
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"info|i"
:
{
"#desc"
:
"pull request info"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
,
"#regex"
:
{
"[0-9]+"
:
""
}
}
}
,
"create|c"
:
{
"#desc"
:
"create pull request"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--head"
:
{
"#desc"
:
"source branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--base"
:
{
"#desc"
:
"target branch. Format: [username:]<branch>"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--maintainer_can_modify"
:
{
"#desc"
:
"Indicates whether maintainers can modify the pull request."
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"true"
,
"false"
]
,
"#default"
:
"true"
}
}
,
"--draft"
:
{
"#desc"
:
"Indicates whether the pull request is a draft"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--issue"
:
{
"#desc"
:
"association issue"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
}
,
"edit|ed"
:
{
"#desc"
:
"update pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--title"
:
{
"#desc"
:
"pr title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--body"
:
{
"#desc"
:
"pull request content"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--milestone_number"
:
{
"#desc"
:
"milestone number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--labels"
:
{
"#desc"
:
"labels"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--assignees_number"
:
{
"#desc"
:
"minimum number of reviewers"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--testers_number"
:
{
"#desc"
:
"minimum test number"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--state"
:
{
"#desc"
:
"state"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"closed"
,
"open"
]
}
}
,
"--json|-j"
:
{
"#desc"
:
"output json data"
}
,
"#1"
:
{
"#desc"
:
"pr number"
}
}
,
"merge"
:
{
"#desc"
:
"merge pull requests"
,
"--repo"
:
{
"#desc"
:
"Provide owner name and repo name.(default:the current user repo)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#regex"
:
{
"[-A-Za-z0-9_/]+"
:
""
}
}
}
,
"--merge_method"
:
{
"#desc"
:
"merge method(squash,merge)"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#cand"
:
[
"squash"
,
"merge"
]
,
"#default"
:
"merge"
}
}
,
"--prune_source_branch"
:
{
"#desc"
:
"prune source branch"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
,
"#default"
:
"false"
}
}
,
"--title"
:
{
"#desc"
:
"title"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"--description"
:
{
"#desc"
:
"description"
,
"#synopsis"
:
""
,
"#1"
:
{
"#desc"
:
""
}
}
,
"#1"
:
{
"#desc"
:
"pr id"
}
}
}
}

