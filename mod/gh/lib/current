# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# shellcheck disable=2120
___x_cmd_gh_current(){
    param:void
    local _op="$1"; [ -z "$1" ] || shift;
    case "${_op}" in
        profile|config|repo|owner)   ___x_cmd_gh_current___getset "$_op" "$@"  ;;
        unset)                       ___x_cmd_gh_current_unset "$@"            ;;
        -h|--help)                   _____x_cmd_gh_help current                ;;
        *)                           ___x_cmd_gh_config current "$_op" "$@"    ;;
    esac
}

___x_cmd_gh_current___getset(){
    if [ "$#" -eq 1 ]; then
        ___x_cmd_gh_config current get "$1"
    else
        ___x_cmd_gh_config current set "$@" || return 1
        ___x_cmd_gh_config current print "$1"
    fi
}

___x_cmd_gh_current_unset(){
    param:void
    case "${1}" in
        all)
            # TODO: ___x_cmd_gh_config current clear
            unset   ___X_CMD_GH_CFG_DATA_CURRENT_profile     ___X_CMD_GH_CFG_DATA_CURRENT_config \
                    ___X_CMD_GH_CFG_DATA_CURRENT_repo        ___X_CMD_GH_CFG_DATA_CURRENT_owner
            ;;
        profile|config|repo|owner)      unset "___X_CMD_GH_CFG_DATA_CURRENT_${1}"  ;;
        *)                              _____x_cmd_gh_help current unset           ;;
    esac
}

# NOTE: need unset json ENFORCE_JSON. the util func only using on subshell
___x_cmd_gh_owner_type_query() {
    param:void
    local owner="$1";   arg:init gh;
    [ -n "$owner" ]  || M='Please privide owner name' arg:ret:64
    [ "${owner##*/}" = "${owner}" ] || { printf "%s" "repo"; return 0; }
    unset json ENFORCE_JSON
    local types=""
    for types in "org" "user"
    do
        if  ___x_cmd_gh_${types}_info "$owner" 1>/dev/null 2>&1;then
            printf "%s" "$types"
            return
        fi
    done
    return 1
}
