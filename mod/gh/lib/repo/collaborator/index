# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# Should be like this.
# gh repo collaborator add el:admin
# gh repo collaborator remove user-a
# gh repo collaborator add user-b

# gh repo collaborator +el:admin -user-a +user-b
___x_cmd_gh_repo_collaborator() {
    param:scope  ___x_cmd_github
    param:subcmd ___x_cmd_gh_repo_collaborator    \
        app            "Interactive UI show repo of user"   \
        "ls|l"         "List collaborator"                  \
        "edit|ed"      "Edit collaborator permission"       \
        add            "Add collaborator"                   \
        rm             "Remove collaborator"                \
        invitation     "repo invitations management"
    param:subcmd:try
    param:run

    ___x_cmd_gh_repo_collaborator _param_help_doc
    return 1
}

# Section: App
___x_cmd_gh_repo_collaborator_app(){
    param:scope     ___x_cmd_gh
    param:dsl       '
type:
    Affiliation =   outside direct all
options:
    --affiliation   "Filter collaborators returned by their affiliation."               <>:Affiliation="all"
    --per_page      "Results per page"                                                  <>=30
    --page          "Page number of the results to fetch."                              <>=1
    --repo|-r       "<ownerPath>/<RepoPath> (default ownerPath: current user)"          <>:RepoName
'
    param:run
    ___x_cmd_gh_param_init_owner_repo
    local ___gh_error_msg="get collaborator list fail"
    local ___X_CMD_TUI_TABLE_FINAL_COMMAND
    local ___X_CMD_TUI_TABLE_CUR_LINE
    local ___X_CMD_TUI_TABLE_CUR_ITEM
    local ___X_CMD_GH_TUI_TABLE_REQUSET_DATA='___x_cmd_gh_get_multi "/repos/${owner_repo}/collaborators" affiliation per_page page'
    ___x_cmd_gh_tui_app "repo.collaborator.app.awk"

    ___x_cmd_gh_repo_collaborator_app_status_handler
}

___x_cmd_gh_repo_collaborator_app_status_handler(){
    local user_name
    user_name="${___X_CMD_TUI_TABLE_CUR_LINE##*Name: }"
    user_name=${user_name%%
Url:*}
    case "$___X_CMD_TUI_TABLE_FINAL_COMMAND" in
            "ENTER")        printf "%s\n" "$___X_CMD_TUI_TABLE_FINAL_COMMAND"  ;;
            "c")            ___x_cmd_gh_repo_collaborator_add    --repo "${repo}"                     ;;
            "u")            ___x_cmd_gh_repo_collaborator_edit   --repo "${repo}"    "$user_name"     ;;
            "d")            ___x_cmd_gh_repo_collaborator_rm     --repo "${repo}"    "$user_name"     ;;
            *)              return   ;;
    esac
}
# EndSection

# Section: List
# https://docs.github.com/en/rest/collaborators/collaborators#list-repository-collaborators
___x_cmd_gh_repo_collaborator_ls() {
    param:scope ___x_cmd_github
    param:dsl '
type:
    Affiliation =   outside direct all
options:
    --affiliation   "Filter collaborators returned by their affiliation."               <>:Affiliation="all"
    --per_page      "Results per page"                                                  <>=30
    --page          "Page number of the results to fetch."                              <>=1
    --repo|-r       "<ownerPath>/<RepoPath> (default ownerPath: current user)"          <>:RepoName
    --json|-j       "output json data"
'
    param:run
    ___x_cmd_gh_param_init_owner_repo
    [ -n "$owner_repo" ] || M='Please provide --repo <owner/repo>"' arg:ret:64
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        ___x_cmd_gh_get_multi "/repos/${owner_repo}/collaborators" affiliation
    else
        ___x_cmd_gh_get_multi "/repos/${owner_repo}/collaborators" affiliation | \
            x jo 2c             .login     .role_name  .html_url .id | \
            x csv header --add   Username   Role        Url       Id | \
            x csv static_tab
    fi
}
# EndSection

# Section: Add
# https://docs.github.com/en/rest/collaborators/collaborators#add-a-repository-collaborator
___x_cmd_gh_repo_collaborator_add() {
    param:scope ___x_cmd_github
    param:dsl '
options:
    #1              "Username list separated by commas"                             <>:Username_multiple
    --repo|-r       "<ownerPath>/<RepoPath> (default ownerPath: current user)"      <>:MultipleRepoName
    --permission|-p "The permission to grant the collaborator."                     <>="push"     = pull triage push maintain admin
    --json|-j       "output json data"
'
    param:run

    [ "$#" -ne 0 ] || M='accepts arg(s) (username), received empty' arg:ret:64
    local _tmp_repo="$repo"
    local _avt_name=""
    while true; do
        repo="${_tmp_repo%%,*}"
        _tmp_repo="${_tmp_repo#*,}"
        ___x_cmd_gh_param_init_owner_repo
        for _avt_name in "$@"; do
            ___x_cmd_gh____transform_avt_name || return
            ___x_cmd_gh_curl put  "/repos/$owner_repo/collaborators/${_avt_name##*/}" -- permission | ___x_cmd_gh_collaborator____ui_handler Add
        done
        [ "$repo" != "$_tmp_repo" ] || return 0
    done
}
# EndSection

# Section: Edit
# https://docs.github.com/en/rest/collaborators/collaborators#add-a-repository-collaborator
___x_cmd_gh_repo_collaborator_edit() {
    param:scope ___x_cmd_github
    param:dsl '
options:
    #1              "Username"                                                      <>:Username_multiple
    --repo|-r       "<ownerPath>/<RepoPath> (default ownerPath: current user)"      <>:MultipleRepoName
    --permission|-p "The permission to grant the collaborator."                     <>="push"     = pull triage push maintain admin

    --json|-j       "output json data"
'
    param:run

    [ -n "$1" ] || M='accepts 1 arg (username), received empty' arg:ret:64
    local _avt_name="$1"
    ___x_cmd_gh____transform_avt_name || return
    ___x_cmd_gh_param_init_owner_repo
    ___x_cmd_gh_curl put  "/repos/$owner_repo/collaborators/${_avt_name##*/}" -- permission | ___x_cmd_gh_collaborator____ui_handler Edit
}
# EndSection

# Section: Remove
# https://docs.github.com/en/rest/collaborators/collaborators#remove-a-repository-collaborator
# shellcheck disable=2154
___x_cmd_gh_repo_collaborator_rm() {
    param:scope ___x_cmd_github
    param:dsl '
options:
    #1          "Username list"                                                     <>:Username
    --repo|-r   "<ownerPath>/<RepoPath> (default ownerPath: current user)"          <>:RepoName
    --yes|-y    "Ignore remove prompt interception"
'
    param:run

    [ "$#" -ne 0 ] || M='accepts arg(s) (username), received empty' arg:ret:64
    ___x_cmd_gh_param_init_owner_repo
    local _avt_name=""
    for _avt_name in "$@"; do
        ___x_cmd_gh____transform_avt_name || return
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure $owner_repo to remove user: $(___x_cmd_ui bold red "$_avt_name") ?" || continue
        ___x_cmd_gh_curl del "/repos/$owner_repo/collaborators/${_avt_name##*/}"| (
                [ -z "$___X_CMD_GH_IN_TEST" ] || { command cat; return; }
                x jo env . gh_resp_msg=.message gh_resp_err=.errors
                if ___x_cmd_gh_http_error; then
                    ___x_cmd_ui_tf  true "[Success]: Remove $_avt_name collaborator from $owner_repo repo"
                else
                    ___x_cmd_ui_tf false "Remove $_avt_name collaborator from $owner_repo repo failure:" >&2
                    ___x_cmd_gh____handle_resp
                    return 1
                fi
            )
    done
}
# EndSection

# Section: collaborator UI
___x_cmd_gh_collaborator____ui_handler(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gh_http_error
        return
    fi
    (
        case "$1" in
            Add|Edit)
                _data="repo=.repository.full_name permissions=.permissions invitee=.invitee.login __id=.id"
                _inf_msg="$1 $_avt_name user to $owner_repo repo successfully"
                _err_msg="$1 $_avt_name user to $owner_repo repo failure"
                ;;
        esac
        x jo env . gh_resp_msg=.message gh_resp_err=.errors \
            repo=.repository.full_name permissions=.permissions invitee=.invitee.login __id=.id

        # To change the permissions, and pass a different permission parameter. The response will be a 204
        if ___x_cmd_gh_http_error 2>/dev/null; then
            if [ -n "$invitee" ]; then
                ___x_cmd_ui_tf  true "Send $owner_repo invitation to $invitee successfully:" \
                    "Invitation URL: https://github.com/${owner_repo}/invitations" \
                    ${__id:+"[Tip] The $_avt_name user also can run cmd to accept: 'x gh repo collaborator invitation accept ${__id}'"}
            else
                ___x_cmd_ui_tf  true "${_inf_msg}:"  ${permissions:+"Permissions: $permissions"}
            fi
        else
            ___x_cmd_ui_tf false "${_err_msg}:" >&2
            ___x_cmd_gh____handle_resp
            return 1
        fi
    )
}
# EndSection