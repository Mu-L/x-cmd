# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gh_issue() {
    param:subcmd ___x_cmd_gh_issue          \
        "ls|l"          "List repo issue"           \
        "create|c"      "create an issue"           \
        "edit|ed"       "update an issue"           \
        close           "Close issue"               \
        reopen          "Reopen issue"
    param:subcmd:try
    param:run


    ___x_cmd_gh_issue _param_help_doc
    return 1
}

# Section: Create
# https://docs.github.com/en/rest/issues/issues#create-an-issue
# shellcheck disable=SC2154
___x_cmd_gh_issue_create(){
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    --repo|-r   "<ownerPath>/<RepoPath> (default ownerPath: current user)"              <>:RepoName
    --title     "The title of the issue."                                               <>:string

    --body      "The contents of the issue."                                            <>:string=""
    --assignees "User responsible for this issue.(separated by commas)"                 <>:array=""
    --milestone "milestone number"                                                      <>:number="null"
    --labels    "Labels to associate with this issue.(separated by commas)"             <>:array=""

    --json|-j   "output json data"
'
    param:run
    assignees=$(x jo "[$assignees]")
    labels=$(x jo "[$labels]")
    local gen_gh_json=""
    gen_gh_json="$(param:option2json -json)"
    gh:debug "$gen_gh_json"
    ___x_cmd_gh_param_init_owner_repo
    ___x_cmd_gh_curl post "/repos/${owner_repo}/issues" gen_gh_json | ___x_cmd_gh_issue____ui_handler Creating
}
# EndSection

# Section: List
# https://docs.github.com/en/rest/issues/issues#list-repository-issues
___x_cmd_gh_issue_ls(){
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    --repo|-r       "<ownerPath>/<RepoPath> (default ownerPath: current user)"              <>:RepoName

    --state         "Indicates the state of the issues to return."                          <>="all"        = open closed all
    --milestone     "milestone number"                                                      <>:number=""
    --assignee      "User responsible for this issue."                                      <>:string=""
    --creator       "The user that created the issue."                                      <>:string=""
    --mentioned     "A user that mentioned in the issue."                                   <>:string=""
    --labels        "Labels to associate with this issue.(separated by commas)"             <>:array=""
    --sort          "What to sort results by"                                               <>="updated"    = created updated comments
    --direction     "The direction to sort the results by."                                 <>="desc"       = asc desc

    --per_page      "Results per page"                                                      <>="30"
    --page          "Page number of the results to fetch."                                  <>="1"
    --json|-j       "output json data"
'
    param:run

    ___x_cmd_gh_param_init_owner_repo
    ___X_CMD_UI_STATIC=1 ___gh_ui_mutual '___ui_table_json Number=.number Title=.title State=.state Url=.html_url -- $@' \
        ___x_cmd_gh_get_multi "/repos/${owner_repo}/issues" state milestone assignee creator mentioned labels sort direction
}
# EndSection

# Section: Edit
# https://docs.github.com/en/rest/issues/issues#update-an-issue
# shellcheck disable=SC2034
___x_cmd_gh_issue_edit() {
    param:scope ___x_cmd_github
    param:dsl '
options:
    #1          "The number that identifies the issue."                                 <>:number
    --repo|-r   "<ownerPath>/<RepoPath> (default ownerPath: current user)"              <>:RepoName

    --title     "The title of the issue."                                               <>:string=""
    --body      "The contents of the issue."                                            <>:string=""
    --state     "State of the issue"                                                    <>:string="" = open closed
    --assignees "User responsible for this issue."                                      <>:string=""
    --milestone "milestone number"                                                      <>:number=""
    --labels    "Labels to associate with this issue.(separated by commas)"             <>:array=""

    --json|-j   "output json data"
'
    param:run
    local tmp_assignees=""
    tmp_assignees=$(x jo "[$assignees]")
    local tmp=""
    tmp=$(x jo "[$labels]")
    local gen_gh_json=""
    gen_gh_json="$(param:option2json -json -labels -assignees ${labels+"labels=tmp"} ${assignees+"assignees=tmp_assignees"})"
    gh:debug "$gen_gh_json"
    ___x_cmd_gh_param_init_owner_repo

    ___x_cmd_gh_curl patch "/repos/${owner_repo}/issues/${1}" gen_gh_json | ___x_cmd_gh_issue____ui_handler Edit
}
# EndSection

# Section: Reopen
# https://docs.github.com/en/rest/issues/issues#update-an-issue
___x_cmd_gh_issue_reopen(){
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    #1          "The number that identifies the issue."                                 <>:number
    --repo|-r   "<ownerPath>/<RepoPath> (default ownerPath: current user)"              <>:RepoName
    --json|-j   "output json data"
'
    param:run

    local state=open

    ___x_cmd_gh_param_init_owner_repo
    ___x_cmd_gh_curl patch "/repos/${owner_repo}/issues/${1}" -- state | ___x_cmd_gh_issue____ui_handler Reopen
}
# EndSection

# Section: Close
# https://docs.github.com/en/rest/issues/issues#update-an-issue
___x_cmd_gh_issue_close(){
     param:scope     ___x_cmd_github
    param:dsl       '
options:
    --repo|-r   "<ownerPath>/<RepoPath> (default ownerPath: current user)"              <>:RepoName
    #1          "The number that identifies the issue."                                 <>:number

    --json|-j   "output json data"
'
    param:run

    local state=closed

    ___x_cmd_gh_param_init_owner_repo
    ___x_cmd_gh_curl patch "/repos/${owner_repo}/issues/${1}" -- state | ___x_cmd_gh_issue____ui_handler Close
}
# EndSection

# Section: issue UI
# shellcheck disable=SC2154
___x_cmd_gh_issue____ui_handler(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gh_http_error
        return
    fi
    (
        case "$1" in
            Creating|Edit)  _data="title=.title url=.html_url state=.state"  ;;
            Reopen|Close)   ;;
        esac
        eval x jo env . id=.number gh_resp_msg=.message gh_resp_err=.errors "$_data"
        if [ -n "$id" ]; then
            ___x_cmd_ui_tf true "$1 issue successfully:" "number: $id" ${title:+"title: $title"}  ${url:+"url: $url"} ${state:+"state: $state"}
        else
            ___x_cmd_ui_tf false "$1 issue failure:" >&2
            ___x_cmd_gh____handle_resp
            return 1
        fi
    )
}
# EndSection

# Section: User ISSUE
# https://docs.github.com/en/rest/issues/issues#list-issues-assigned-to-the-authenticated-user
___x_cmd_gh_user_issue(){
    param:scope     ___x_cmd_github
    param:dsl       '
type:
    Screen = all assigned created mentioned subscribed repos
    State = open closed all
    Sort = created updated comments
    Direction = desc asc
options:
    --filter        "filter(assigned,created,all)"                 <>:Screen="assigned"
    --state         "state(open,progerssing,closed,rejected)"      <>:State="open"
    --sort          "sort"                                         <>:Sort="created"
    --labels        "labels"                                       <>=""
    --direction     "direction(asc、desc)"                         <>:Direction="desc"
    --since         "updated date"                                 <>:ISOTime=""
    --page          "page"                                         <>:Numbers="1"
    --per_page      "per_page"                                     <>:Numbers="30"
    --json|-j       "output origin json data"
'
    param:run
    ___X_CMD_UI_STATIC=1 ___gh_ui_mutual '___ui_table_json issue=.number repo=.repository.full_name title=.title state=.state -- $@' \
        ___x_cmd_gh_get_multi "/user/issues" filter state sort labels direction since
}
# EndSection

# Section: Org Issue
# https://docs.github.com/en/rest/issues/issues#list-organization-issues-assigned-to-the-authenticated-user
# shellcheck disable=SC2154
___x_cmd_gh_org_issue(){
    param:scope     ___x_cmd_github
    param:dsl       '
type:
    Screen = all assigned created mentioned subscribed repos
    State = open closed all
    Sort = created updated comments
    Direction = desc asc
options:
    --org           "organization name"                            <>:Address
    --filter        "filter(assigned,created,all)"                 <>:Screen="assigned"
    --state         "state(open,progerssing,closed,rejected)"      <>:State="open"
    --labels        "labels"                                       <>=""
    --sort          "sort"                                         <>:Sort="created"
    --direction     "direction(asc、desc)"                         <>:Direction="desc"
    --since         "updated date"                                 <>:ISOTime=""
    --page          "page"                                         <>:Numbers="1"
    --per_page      "per_page"                                     <>:Numbers="30"
    --json|-j       "output origin json data"
'
    param:run
    ___X_CMD_UI_STATIC=1 ___gh_ui_mutual '___ui_table_json issue=.number repo=.repository.full_name title=.title state=.state -- $@' \
        ___x_cmd_gh_get_multi "/orgs/${org##*/}/issues" filter state sort labels direction since
}
# EndSection