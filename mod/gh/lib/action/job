# shellcheck shell=sh
# shellcheck disable=SC2039,3043
___x_cmd_gh_action_job(){
    param:subcmd ___x_cmd_gh_action_job         \
        "ls|l"      "List jobs for a workflow run"     \
        "info|i"    "Get a job for a workflow run"     \
        log         "view job logs for a workflow run"
    param:subcmd:try
    param:run

    ___x_cmd_gh_action_job _param_help_doc
    return 1
}

___x_cmd_gh_action_job_ls() {
    param:scope ___x_cmd_github
    param:dsl <<A
type:
    Filters = latest all
options:
    --repo      "Provide owner name and repo name.(default:the current user repo)"      <>:RepoName
    --run_id    "Provide run_id"                                                        <>:Number
    --filter    "Filters jobs by their completed_at timestamp"                          <>:Filters="latest"

    --page      "Page number of the results to fetch."                                  <>:Numbers="1"
    --per_page  "Results per page (max 100)"                                            <>:Per_page="30"
    --json|-j   "output json data"
A
    param:run
    ___x_cmd_gh_param_init_owner_repo

    local ___job_ls_tmp="___x_cmd_gh_curl get /repos/${owner_repo}/actions/runs/${run_id}/jobs filter per_page page"
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        ENFORCE_JSON=1 $___job_ls_tmp
    else
        ___X_CMD_UI_STATIC=1 ___ui_table_json Id=.id Name=.name Status=.status Conclusion=.conclusion Started_at=.started_at -- \
            "$___job_ls_tmp | x jo q0 .jobs"
    fi
}


___x_cmd_gh_action_job_info() {
    param:scope ___x_cmd_github
    param:dsl <<A
options:
    --repo      "Provide owner name and repo name.(default:the current user repo)"      <>:RepoName
    --job_id    "Provide job id"                                                        <>

    --json|-j   "output json data"
A
    param:run

    ___x_cmd_gh_param_init_owner_repo

    local ___job_info_tmp="___x_cmd_gh_curl get /repos/${owner_repo}/actions/jobs/$job_id"
    if [ -n "$json" ] || [ -n "$ENFORCE_JSON" ]; then
        ENFORCE_JSON=1 $___job_info_tmp
    else
        ___X_CMD_UI_STATIC=1 ___ui_table_json Number=.number Name=.name Status=.status Conclusion=.conclusion Started_at=.started_at -- \
            "$___job_info_tmp | x jo q0 .steps"
    fi
}

# --repo static_qr --job_id 7180277087
___x_cmd_gh_action_job_log() {
    param:scope ___x_cmd_github
    param:dsl <<A
options:
    --repo      "Provide owner name and repo name.(default:the current user repo)"      <>:RepoName
    --job_id    "Provide job id"                                                        <>
A
    param:run
    ___x_cmd_gh_param_init_owner_repo


    if ___x_cmd_gh_curl download "/repos/${owner_repo}/actions/jobs/${job_id}/logs"  "$___X_CMD_ROOT/.actions/$job_id/$job_id-log.zip";then
        x uz "$___X_CMD_ROOT/.actions/$job_id/$job_id-log.zip" "$___X_CMD_ROOT/.actions/$job_id"
        cat "$___X_CMD_ROOT"/.actions/"$job_id"/*.txt | awk '{
          date=substr($0, 3, 8)
          time=substr($0, 12, 8)
          idx=index($0, " ")
          gsub("-", "/", date)
          print "\033[90m" date "/" time "\033[0m" substr($0, idx)
      }' | less -r
        rm -rf "$___X_CMD_ROOT/.actions/$job_id"
    fi
}