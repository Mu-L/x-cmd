# shellcheck shell=sh
# shellcheck disable=SC2039,3043,SC2154
# https://try.gitea.io/api/swagger#/user
___x_cmd_tea_user(){
    param:scope     ___x_cmd_tea
    param:subcmd ___x_cmd_tea_user       \
        "info|i"    "Show information"  \
        email       "get user email"    \
        repo        "List all repos"
    param:subcmd:try
    param:run
        # key         "key management"    \

    ___x_cmd_tea_user _param_help_doc
    return 1
}

# https://try.gitea.io/api/swagger#/user/userGet
___x_cmd_tea_user_info() {
    param:scope     ___x_cmd_tea
    param:dsl       '
options:
    #1              "Username, if not set, show the user information of current owner, or owner of this token"     <>=""

    --json|-j       "output json data"
'
    param:run

    local owner="$1"
    local url
    if [ -z "$owner" ]; then
        url="/user"
    else
        url="/users/$owner"
    fi
    ___x_cmd_tea_curl get "$url" | (
        ___x_cmd_tea_user_info_json_status_handler
    )
}

___x_cmd_tea_user_info_json_status_handler(){
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        return
    fi

    x jo env . id=.id name=.login email=.email tea_resp_err=.message
    if [ -n "$id" ]; then
        ___x_cmd_ui_tf true "Get${owner:+" $owner"} user info successfully" "Id: $id" "Name: $name" "Email: $email"
    else
        ___x_cmd_ui_tf false "Get${owner:+" $owner"} user info failure"
        ___x_cmd_tea____handle_resp
        return 1
    fi
}

# https://try.gitea.io/api/swagger#/user/userCurrentListRepos
___x_cmd_tea_user_repo(){
    param:scope     ___x_cmd_tea
    param:subcmd ___x_cmd_tea_user_repo      \
        "ls|l"  "List all repos"            \
        app     "Interactive UI show repo of user"
    param:subcmd:try
    param:run
    ___x_cmd_tea_user_repo_ls _param_help_doc
}

# https://try.gitea.io/api/swagger#/user/userGetOauth2Application
___x_cmd_tea_user_repo_app() {
    param:scope     ___x_cmd_tea
    param:dsl       '
options:
    --visibility    "visibility"                                <>:Authority="all"
    --affiliation   "affiliation"                               <>:UserGroup="owner"
    --sort          "sort"                                      <>:UserSort="created"
    --direction     "direction"                                 <>:Direction="desc"
    --limit         "Results per page"                          <>:Numbers="30"
    --page          "Page number of the results to fetch."      <>:Numbers="1"
'
    param:run

    local url
    if [ $# -gt 0 ]; then
        url="/users/$1/repos"
    else
        url="/user/repos"
    fi

    ___tea_ui_mutual '___ui_table_json Name=.name RepoPath=.full_name Visibility=.visibility Url=.html_url -- $@' \
        ___x_cmd_tea_get_multi "$url" visibility affiliation sort direction
}

# https://try.gitea.io/api/swagger#/user/userCurrentListRepos
___x_cmd_tea_user_repo_ls() {
    param:scope     ___x_cmd_tea
    param:dsl       '
options:
    --limit         "Results per page"                          <>:Numbers="30"
    --page          "Page number of the results to fetch."      <>:Numbers="1"
    --json|-j       "output json data"
'
    param:run

    local url
    if [ $# -gt 0 ]; then
        url="/users/$1/repos"
    else
        url="/user/repos"
    fi
    ___X_CMD_UI_STATIC=1 ___tea_ui_mutual '___ui_table_json RepoPath=.full_name Visibility=.visibility Url=.html_url -- $@' \
        ___x_cmd_tea_get_multi "$url"
}

# https://try.gitea.io/api/swagger#/user/userListEmails
___x_cmd_tea_user_email(){
    param:void
    ___tea_ui_mutual '___ui_table_json email=.email verified=.verified  -- $@' ___x_cmd_tea_get_multi "/user/emails"
}

# https://try.gitea.io/api/swagger#/issue/issueSubscriptions
___x_cmd_tea_user_issue(){
    param:scope     ___x_cmd_tea
    param:dsl       '
options:
    --json|-j       "output json data"
'
    param:run
    ___X_CMD_UI_STATIC=1  ___tea_ui_mutual '___ui_table_json email=.email verified=.verified  -- $@' ___x_cmd_tea_get_multi "/user/emails"
}
