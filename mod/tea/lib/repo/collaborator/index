# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# Should be like this.
# tea repo collaborator add el:admin
# tea repo collaborator remove user-a
# tea repo collaborator add user-b

# tea repo collaborator +el:admin -user-a +user-b
___x_cmd_tea_repo_collaborator() {
    param:subcmd ___x_cmd_tea_repo_collaborator           \
        "ls|l"         "list collaborator"                \
        add            "add collaborator"                 \
        "edit|ed"      "edit collaborator permission"     \
        rm             "Remove collaborator"
    param:subcmd:try
    param:run


    ___x_cmd_tea_repo_collaborator _param_help_doc
    return 1
}
# Section: List
# https://try.gitea.io/api/swagger#/repository/repoListCollaborators
___x_cmd_tea_repo_collaborator_ls() {
    param:scope  ___x_cmd_tea
    param:dsl '
options:
    --repo          "Provide owner name and repo name.(default:the current user repo)"  <>:RepoName
    --limit         "Results per page"                                                  <>:Numbers="30"
    --page          "Page number of the results to fetch."                              <>:Numbers="1"
    --json|-j       "output json data"
'
    param:run
    ___x_cmd_tea_param_init_owner_repo

    ___X_CMD_UI_STATIC=1 ___tea_ui_mutual '___ui_table_json Id=.id Name=.login Url=.html_url Role=.role_name -- $@' \
        ___x_cmd_tea_get_multi "/repos/${owner_repo}/collaborators" limit page
}
# EndSection

# Section: Add & Rm
#TODO:  UI
# https://try.gitea.io/api/swagger#/repository/repoAddCollaborator
___x_cmd_tea_repo_collaborator_add() {
    param:scope  ___x_cmd_tea
    param:dsl '
options:
    --repo          "Provide owner_name/repo_name list separated by commas."    <>:MultipleRepoName
    --permission    "The permission to grant the collaborator."                 <>="push"     = pull triage push maintain admin
    --name          "Username list separated by commas"                         <>:Username_multiple

    --json|-j       "output json data"
'
    param:run

    local tmpRepo="$repo"
    local username="$name"
    local source_username="$name"
    # TODO:N to N && 1 TO N & N to 1
    while true; do
        repo="${tmpRepo%%,*}"
        tmpRepo="${tmpRepo#*,}"
        ___x_cmd_tea_param_init_owner_repo
        while true; do
            name="${username%%,*}"
            username="${username#*,}"
            if ___x_cmd_tea_curl put  "/repos/$owner_repo/collaborators/${name##*/}" -- permission | ___x_cmd_tea____handle_no_content; then
                ___x_cmd_ui_tf true "Add success"
            else
                ___x_cmd_ui_tf false "Add failure"
            fi
            [ "$name" = "$username" ] && {
                username="$source_username"
                break
            }
        done
        [ "$repo" = "$tmpRepo" ] && return 0
    done
}
#TODO:  204	APIEmpty is an empty response
___x_cmd_tea_repo_collaborator_edit() {
    param:scope  ___x_cmd_tea
    param:dsl '
options:
    --repo          "Provide owner_name/repo_name list separated by commas."    <>:MultipleRepoName
    --permission    "The permission to grant the collaborator."                 <>="push"     = pull triage push maintain admin
    --name          "Username"                                                  <>:Username_multiple

    --json|-j       "output json data"
'
    param:run

    ___x_cmd_tea_param_init_owner_repo
    ___x_cmd_tea_curl put  "/repos/$owner_repo/collaborators/${name##*/}" -- permission | (
        _____x_cmd_tea_collaborator_ui_utils Edit
    )
}

# https://try.gitea.io/api/swagger#/repository/repoDeleteCollaborator
# TODO: UI
___x_cmd_tea_repo_collaborator_rm() {
    param:scope  ___x_cmd_tea
    param:dsl '
options:
    --repo      "Provide owner name and repo name.(default:the current user repo)"  <>:RepoName
    #1          "Username list"
    --yes|-y    "Ignore remove prompt interception"
'
    param:run

    ___x_cmd_tea_param_init_owner_repo
    local username
    for username in "$@"; do
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure $owner_repo to remove user: $(___x_cmd_ui bold red "$username") ?" || continue
        if ___x_cmd_tea_curl delete "/repos/$owner_repo/collaborators/${username##*/}" | ___x_cmd_tea____handle_no_content; then
            ___x_cmd_ui_tf true "Remove success"
        else
            ___x_cmd_ui_tf false "Remove success"
        fi
    done
}
# EndSection

# Section: collaborator ui utils
_____x_cmd_tea_collaborator_ui_utils()(
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_tea_http_error
        return
    fi

    local data
    local msg
    local error_msg
    case "$1" in
        Add|Edit)
            data="repo=.repository.full_name permissions=.permissions"
            msg="$1 repo user success"
            error_msg="Failed to $1 repo user"
            ;;
    esac
    eval x jo env . id=.id tea_resp_err=.message "$data"
    if [ -n "$id" ]; then
        ___x_cmd_ui_tf true "$msg"  ${repo+"Repo: $repo"}  ${permissions+"Permissions: $permissions"}
    else
        ___x_cmd_ui_tf false "$error_msg"
        ___x_cmd_tea____handle_resp
        return 1
    fi
)
# EndSection