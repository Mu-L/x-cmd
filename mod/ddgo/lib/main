# shellcheck shell=dash

x log init ddgo
xrc:mod:lib     ddgo parse cfg dump coco

___x_cmd_ddgo___main(){
    [ "$#" -gt 0 ] || set - --help

    local op="$1"; shift
    case "$op" in
        top|link|dump|open)     ___x_cmd_ddgo___"${op#--}"  "$@" ;;

        hop)                    ___x_cmd_ddgo___hop         "$@" ;;

        --cfg|cfg)              ___x_cmd_ddgo_cfg           "$@" ;;
        --init|init)            ___x_cmd_ddgo_cfg           "$@" ;;

        -h|--help)              x help -m ddgo              "$@" ;;

        ,,|--coco)              ___x_cmd_ddgo_coco          "$@" ;;
        *)                      ___x_cmd_ddgo___dump "$op"  "$@" ;;
    esac
}

___x_cmd_ddgo___link(){
    local x_=
    ___x_cmd_ddgo___url_ "$@"

    if x websrc is cn && ! ___x_cmd_ddgo___isproxyset; then
        ddgo:error "Cannot access duckduckgo.com."
        return 1
    fi
    ___x_cmd_ddgo___execlink "$x_"
}


___x_cmd_ddgo___open(){
    local X_help_cmd='x help -m ddgo open';    help:arg-null:parse
    local x_=
    ___x_cmd_ddgo___url_ "$@"
    x browse "$x_"
}

___x_cmd_ddgo___url_(){
    local IFS=" "

    local query=""
    [ -z "$___X_CMD_DDGO_QUERY_SITE" ] || query="site:$___X_CMD_DDGO_QUERY_SITE "

    case "$1" in
        --lite)     shift; query="${query}$*"; x_="https://lite.duckduckgo.com/lite/?q=${query}"     ;;
        --news)     shift; query="$*"; x_="https://lite.duckduckgo.com/lite/?ia=news&iax=news&q=${query}"     ;;
        # --search)   x_="https://duckduckgo.com/?q=$2"             ;;
        *)          query="${query}$*"
                    x_="https://lite.duckduckgo.com/lite/?q=$query"     ;;
    esac

    ddgo:info "url is -> $x_"
}

___x_cmd_ddgo___execlink(){
    # if x websrc is cn && ! ___x_cmd_ddgo___isproxyset; then
    #     ddgo:error "Cannot access duckduckgo.com in China."
    #     ddgo:info "[TIPS] You can set proxy -> x proxy set <proxy>"
    #     return 1
    # fi

    ddgo:debug "x links $*"
    x ccmd 24h -- x links "$@"
}

___x_cmd_ddgo___isproxyset(){

    [ -z "${http_proxy:-${HTTP_PROXY}}" ]   || return 0
    [ -z "${https_proxy:-${HTTPS_PROXY}}" ] || return 0
    [ -z "${all_proxy:-${ALL_PROXY}}" ]     || return 0

    local proxy=
    ___x_cmd_ddgo_cur   proxy:=     2>/dev/null
    if [ -n "$proxy" ] && ___x_cmd_proxy set "${proxy}" 2>/dev/null; then
        return 0
    fi

    return 1
}

___x_cmd_ddgo_advanced(){
    :
}



