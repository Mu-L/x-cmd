# shellcheck shell=bash disable=SC2034
___x_cmd_ddgo___dump(){
    local format=app;
    local top=;
    case "$1" in
        --top)      top="$2";
                    x is int "$2" || N=ddgo M="Please provide an int after --top"   log:ret:1;
                    shift 2;
                    ;;
        --json)     format="json"; shift            ;;
        --yml)      format="yml" ; shift            ;;
        --raw)      format="raw" ; shift            ;;

        -h|--help)  ___x_cmd help -m ddgo  dump  "$@"; return 1 ;;
    esac

    ___x_cmd_ddgo___dump_"$format" "$@"
}

___x_cmd_ddgo___dump_app(){
    if { [ -t 1 ] && ___x_cmd_is_interactive ;}; then
        # local HAS_COLOR=1
        ___X_CMD_SHBIN_CODE="
            xrc ddgo ;
            local top=$top;
            "\$@"
        " ___x_cmd_antizshbin ___x_cmd_ddgo_dump___view_app___ "$@"
    else
        ___x_cmd_ddgo___dump_yml "$@"
    fi
}

___x_cmd_ddgo___dump_yml(){
    ___x_cmd_ddgo___dump_raw "$@" | ___x_cmd_ddgo___parse_yml
}

___x_cmd_ddgo___dump_json(){
    local x_
    ___x_cmd_ddgo___url_ "$@"

    ___x_cmd_ddgo___dump_yml "$x_" | x y2j
}

___x_cmd_ddgo___dump_raw(){
    local x_
    ___x_cmd_ddgo___url_ "$@"

    ___x_cmd_ddgo___execlink dump "$x_"
}

___x_cmd_ddgo___top(){
    ___x_cmd_ddgo___dump --top 10 "$@"
}

___x_cmd_ddgo___hop(){
    ___x_cmd_ddgo___dump --top 1 "$@" | ___x_cmd_cmds cat
}

___x_cmd_ddgo_dump___view_app___(){
    local arg="$*"
    local ___X_CMD_CSV_APP_DATA_Update=
    local ___X_CMD_CSV_APP_DATA_Msg=
    local ___X_CMD_CSV_APP_DATA_Url=
    local ___X_CMD_CSV_APP_DATA_Title=

    local ___X_CMD_CSV_APP_SHBIN_CODE="xrc ddgo; "
        ___x_cmd_ddgo___dump_yml "$arg" | x y2j |                        \
            x ja 2c .short .update .long .url | {                        \
            x csv --app --header  Title,Update,Msg,Url                   \
                        --return var                                     \
                        --action o Open 'Open on website'                \
                        --action c Copy 'Copy URL'                       \
                        --processor '___x_cmd_ddgo_dump___view_app_open' \
                        --preview Msg,Url

            [ -n "$___X_CMD_CSV_APP_DATA_Msg" ] || return 0
            local id=
            x ui select id "Next move for ddgo information:"   \
                "Dump current line information"                \
                "Dump all information"                         \
                "Open url on website"                          \
                "Exit"

            case "$id" in
                1)
                        printf "%s short: %s\n"    "-"  "$___X_CMD_CSV_APP_DATA_Title"
                        printf "%s long: |\n  %s\n" "-" "$___X_CMD_CSV_APP_DATA_Msg"
                        printf "%s url: %s\n"      "-"  "$___X_CMD_CSV_APP_DATA_Url"
                        printf "%s update: %s\n"   "-"  "$___X_CMD_CSV_APP_DATA_Update"
                        ;;
                        
                2)      ___x_cmd_ddgo___dump_yml "$arg" | x bat -l yaml    ;;
                3)      x open "$___X_CMD_CSV_APP_DATA_Url" ;;
                4)      return
            esac
        }
}

___x_cmd_ddgo_dump___view_app_open(){
    local op="$*"; local url=
    case "$op" in
        x:request:o*)
            op="${op##*"$___X_CMD_UNSEENCHAR_001"}"
            url="$(___x_cmd_cmds printf "%s" "$op" | ___x_cmd csv awk '{printf("%s", cval(4))}')"
            x browse "$url"
            ;;
        x:request:c*)
            op="${op##*"$___X_CMD_UNSEENCHAR_001"}"
            url="$(___x_cmd_cmds printf "%s" "$op" | ___x_cmd  csv awk '{printf("%s", cval(4))}')"
            x pb --cp "$url"
            ;;
    esac
}


