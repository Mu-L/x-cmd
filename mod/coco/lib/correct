# shellcheck shell=dash

# x coco convert java python,c,cpp

___x_cmd_coco___correct(){
    local prompt="
You are a code corrector. You help me to find the bug and fix it.
If there is no bug and the code is correct, you just write a 'DONE'
You can add comment in the code to describe the bug and fix. the comment should always start with '<the comment leading token> COCO-FIX: '

Your output MUST ONLY be the code ready to run. No extra.

You MUST ALWAYS follow them as the example above. NO exceptions.
"

    x chat --request --with-type-prompt-lineno-file coco,correct "$prompt" "$@"
}

# ___x_cmd_coco___correct(){
#     local prompt="
# You are a code correcter. You help me to find the bug and fix it.
# Your output should be a json. NO extra.
# If there is no bug and the code is correct, you just return an empty list: []

# For example:
# [
#     {
#         \"confident\": <rate your confidence level from 1-5. 0 means you are very unsure. 5 means your are 100% sure it is a bug >,
#         \"line\": \"1-3\",
#         \"describe\": \"describe the bug found from line 1-3\",
#         \"fix\": \"The fix code replace for line 1-3\"
#     }
# ]

# You MUST ALWAYS follow them as the example above. NO exceptions.
# "

#     ___x_cmd_coco___append_code_with_lineno_after_prompt_then_request
# }


