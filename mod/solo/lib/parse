# shellcheck shell=dash

# x-cmd.engine:
# x-cmd.setup:
# x-cmd.end:

___x_cmd_solo___parse(){
    local x_engine
    local x_setup

    ___x_cmd_solo___parse_ "$1"
    printf "engine: %s\n" "$x_engine"
    printf "setup: %s\n"  "$x_setup"
}

___x_cmd_solo___parse_(){
    x_engine=
    x_setup=

    local line; local i=0;
    while read -r line; do
        i=$((i+1)); [ "$i" -lt 10 ] || break
        case "$line" in
            *x-cmd.*:*)
                ___x_cmd_solo___parse_main_  <<A
$line
$(cat)
A
            break
            ;;
            *)  continue
        esac
    done
    # If there is not engine declaration, the file will run directly.
    return 0
}

___x_cmd_solo___parse_main_(){
    local line
    while read -r line; do
        case "$line" in
            *x-cmd.engine:*)
                x_engine=${line##*:*" "}
                x_engine=${x_engine%%" "*}
                case "${x_engine}" in
                    python|node|ts-node|java|kotlin|groovy|r|julia|ruby|perl)
                        ;;
                    *)
                        x:error "Engine not found ==> $x_engine"
                        return 1
                esac
                ;;
            x-cmd.mode*:)
                case "${line#*:}" in
                    inplace|ws)
                        ;;
                    *)
                        x:error "Mode not found ==> ${line#*:}"
                        return 1
                esac
                ;;
            x-cmd.setup*:)
                line="${line#*:}"
                x_setup="${x_setup}${line}${___X_CMD_UNSEENCHAR_NEWLINE}"
                # Put the code into a seperate directory
            ;;

            x-cmd.end*)
                break
            ;;

            *)  continue
        esac
    done
}
