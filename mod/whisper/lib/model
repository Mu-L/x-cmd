# shellcheck shell=sh disable=SC3043

___x_cmd_whisper___model(){
    local op="$1"; shift
    case "$op" in
        which)
            ___x_cmd_whisper___model_which "$@";;
        download)
            ___x_cmd_whisper___model_download "$@";;
        rm)
            ___x_cmd_whisper___model_rm "$@";;
        ls)
            ___x_cmd_whisper___model_ls "$@" ;;
        -h|--help|*)
            x help -m whisper model ;;
    esac
}

___x_cmd_whisper___model_which(){
    local x_=""
    ___x_cmd_whisper___model_which_ "$@"
    printf "%s" "$x_"
}

___x_cmd_whisper___model_which_(){
    local modelName="${1}"
    local modelDir="$___X_CMD_ROOT_DATA/model/${modelName}.bin"

    [ -n "${modelName}" ]   || N=whisper M="modelName is empty"           log:ret:1
    [ -f "${modelDir}" ]    || N=whisper M="model ${modelName} not found" log:ret:1
    x_="${modelDir}"
}

___x_cmd_whisper___model_download(){
    local x_=""
    ___x_cmd_whisper___model_download_ "${modelName}" || return 1
    printf "%s" "${x_}"
}

___x_cmd_whisper___model_download_(){
    local modelName="${1}"
    local url="ggerganov/whisper.cpp/resolve/main"
    [ -n "$modelName" ] || N=whisper M="modelName is empty" log:ret:1

    [ -f "$___X_CMD_ROOT_DATA/model/${modelName}.bin" ] || {
        x huggingface --publicdownload "${url}"/"ggml-${modelName}.bin" "${modelName}.bin" || N=whisper M="download model ${1} failed" log:ret:1
    }

    x_="$___X_CMD_ROOT_DATA/model/${modelName}.bin"
}

___x_cmd_whisper___model_rm(){
    local modelName="${1}"
    local x_=""
    [ -n "$modelName" ] || {
        ___x_cmd_whisper___dictate___desicemodel_ || return
        modelName="${x_}"
    }
    local modelDir="$___X_CMD_ROOT_DATA/model/${modelName}.bin"
    [ -f "${modelDir}" ]    || N=whisper M="${modelName} model does not exist locally" log:ret:1
    x rm "${modelDir}"
}


___x_cmd_whisper___model_ls(){
    x csv static_tab < "${___X_CMD_ROOT_MOD}"/whisper/lib/model.csv
}