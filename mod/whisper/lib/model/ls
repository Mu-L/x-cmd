# shellcheck shell=dash
___x_cmd_whisper_model_ll(){
    [ -f "$___X_CMD_WHISPER_MODEL_DATA_INFO" ] || return
    x csv static_tab < "$___X_CMD_WHISPER_MODEL_DATA_INFO"
}

___x_cmd_whisper_model_ls(){
    [ "$#" -gt 0 ] || set -- --app
    local op="$1"; shift
    case "$op" in
        --csv|--json|--app)
            ___x_cmd_whisper_model_ls___"${op#--}" "$@"  ;;
        *)  N=whisper M="Not such [option=$op]" log:ret:64 ;;
    esac
}

___x_cmd_whisper_model_ls___json(){
    [ -f "$___X_CMD_WHISPER_MODEL_DATA_INFO" ] || return
    < "$___X_CMD_WHISPER_MODEL_DATA_INFO" x csv tojson | x jo fmt
}

___x_cmd_whisper_model_ls___csv(){
    [ -f "$___X_CMD_WHISPER_MODEL_DATA_INFO" ] || return
    ___x_cmd_cmds_cat "$___X_CMD_WHISPER_MODEL_DATA_INFO"
}

___x_cmd_whisper_model_ls___app_(){
    x_=""
    ___x_cmd_storeread_ ___x_cmd_whisper_model_ls___app
    [ -n "$x_" ]
}

___x_cmd_whisper_model_ls___app(){
    ___X_CMD_SHBIN_CODE='
        xrc whisper ;
        "$@"
    ' ___x_cmd_antizshbin ___x_cmd_whisper_model_ls___app___
}

___x_cmd_whisper_model_ls___app___()(
    [ -f "$___X_CMD_WHISPER_MODEL_DATA_INFO" ] || return

    < "$___X_CMD_WHISPER_MODEL_DATA_INFO" \
    x csv app --return var --clear
    [ -z "$___X_CMD_CSV_APP_DATA_name" ] || printf "%s\n" "$___X_CMD_CSV_APP_DATA_name"
)
